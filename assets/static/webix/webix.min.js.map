{"version":3,"file":"webix.min.js","sources":["../sources/thirdparty/promiz.js","../sources/load/drivers/xml.js","../sources/load/ajax.js","../sources/webix/html.js","../sources/webix/env.js","../sources/load/drivers/excel.js","../sources/webix/template.js","../sources/webix/htmlevents.js","../sources/ui/core.js","../sources/webix/message.js","../sources/core/uimanager.js","../sources/core/collectionbind.js","../sources/views/baseview.js","../sources/views/view.js","../sources/core/canvas.js","../sources/css/skins/mini/config.js","../sources/css/skins/willow/config.js","../sources/core/touch.js","../sources/core/dragcontrol.js","../sources/views/window.js","../sources/webix/clipbuffer.js","../sources/core/customprint.js","../sources/load/dataprocessor.js","../sources/core/datastore.js","../sources/core/dataloader.js","../sources/core/datastate.js","../sources/core/dragitem.js","../sources/core/undo.js","../sources/webix/editors.js","../sources/core/editability.js","../sources/core/groupstore.js","../sources/core/htmloptions.js","../sources/core/keysnavigation.js","../sources/core/mouseevents.js","../sources/core/pagingability.js","../sources/core/renderstack.js","../sources/core/selectionmodel.js","../sources/core/sparklines/svg.js","../sources/core/sparklines/bar.js","../sources/core/sparklines/spline.js","../sources/core/tablepaste.js","../sources/core/treedatamove.js","../sources/core/treestatecheckbox.js","../sources/core/treestore.js","../sources/core/uploaddriver.js","../sources/core/values.js","../sources/core/vrenderstack.js","../sources/webix/export/common.js","../sources/webix/export/topdf.js","../sources/core/date.js","../sources/webix/locale.js","../sources/load/remote.js","../sources/i18n/de.js","../sources/i18n/es.js","../sources/i18n/zh.js","../sources/i18n/be.js","../sources/views/baselayout.js","../sources/views/scrollview.js","../sources/views/layout.js","../sources/views/accordionitem.js","../sources/views/resizer.js","../sources/views/align.js","../sources/views/multiview.js","../sources/views/carousel.js","../sources/views/toolbar.js","../sources/views/property.js","../sources/views/calendar.js","../sources/views/colorboard.js","../sources/views/colorselect.js","../sources/views/button.js","../sources/views/text.js","../sources/core/textpattern.js","../sources/views/checkbox.js","../sources/views/radio.js","../sources/views/colorpicker.js","../sources/views/counter.js","../sources/views/textarea.js","../sources/views/multitext.js","../sources/views/slider.js","../sources/views/tabbar.js","../sources/views/list.js","../sources/views/uploader.js","../sources/views/texthighlight.js","../sources/views/timeboard.js","../sources/views/suggest.js","../sources/views/geochart.js","../sources/views/googlemap.js","../sources/views/chart/pie.js","../sources/views/chart/bar.js","../sources/webix/helpers.js","../sources/webix/customevents.js","../sources/webix/export/topng.js","../sources/webix/export/tocsv.js","../sources/webix/api.js","../sources/load/send.js"],"sourcesContent":["var global = window;\n\nvar queueId = 1;\nvar queue = {};\nvar isRunningTask = false;\n\nif (!global.setImmediate && global.addEventListener)\n\tglobal.addEventListener(\"message\", function (e) {\n\t\tif (e.source == global){\n\t\t\tif (isRunningTask)\n\t\t\t\tnextTick(queue[e.data]);\n\t\t\telse {\n\t\t\t\tisRunningTask = true;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof queue[e.data] === \"function\")\n\t\t\t\t\t\tqueue[e.data]();\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// eslint-disable-line\n\t\t\t\t}\n\n\t\t\t\tdelete queue[e.data];\n\t\t\t\tisRunningTask = false;\n\t\t\t}\n\t\t}\n\t});\n\nfunction nextTick(fn) {\n\tif (global.setImmediate) global.setImmediate(fn);\n\t// if inside of web worker\n\telse if (global.importScripts || !global.addEventListener) setTimeout(fn);\n\telse {\n\t\tqueueId++;\n\t\tqueue[queueId] = fn;\n\t\tglobal.postMessage(queueId, \"*\");\n\t}\n}\n\nDeferred.resolve = function (value) {\n\tif (!(this._d == 1))\n\t\tthrow TypeError();\n\n\tif (value instanceof Deferred)\n\t\treturn value;\n\n\treturn new Deferred(function (resolve) {\n\t\tresolve(value);\n\t});\n};\n\nDeferred.reject = function (value) {\n\tif (!(this._d == 1))\n\t\tthrow TypeError();\n\n\treturn new Deferred(function (resolve, reject) {\n\t\treject(value);\n\t});\n};\n\nDeferred.all = function (arr) {\n\tif (!(this._d == 1))\n\t\tthrow TypeError();\n\n\tif (!(arr instanceof Array))\n\t\treturn Deferred.reject(TypeError());\n\n\tvar d = new Deferred();\n\n\tfunction done(e, v) {\n\t\tif (v)\n\t\t\treturn d.resolve(v);\n\n\t\tif (e)\n\t\t\treturn d.reject(e);\n\n\t\tvar unresolved = arr.reduce(function (cnt, v) {\n\t\t\tif (v && v.then)\n\t\t\t\treturn cnt + 1;\n\t\t\treturn cnt;\n\t\t}, 0);\n\n\t\tif(unresolved == 0)\n\t\t\td.resolve(arr);\n\n\n\t\tarr.map(function (v, i) {\n\t\t\tif (v && v.then)\n\t\t\t\tv.then(function (r) {\n\t\t\t\t\tarr[i] = r;\n\t\t\t\t\tdone();\n\t\t\t\t\treturn r;\n\t\t\t\t}, done);\n\t\t});\n\t}\n\n\tdone();\n\n\treturn d;\n};\n\nDeferred.race = function (arr) {\n\tif (!(this._d == 1))\n\t\tthrow TypeError();\n\n\tif (!(arr instanceof Array))\n\t\treturn Deferred.reject(TypeError());\n\n\tif (arr.length == 0)\n\t\treturn new Deferred();\n\n\tvar d = new Deferred();\n\n\tfunction done(e, v) {\n\t\tif (v)\n\t\t\treturn d.resolve(v);\n\n\t\tif (e)\n\t\t\treturn d.reject(e);\n\n\t\tvar unresolved = arr.reduce(function (cnt, v) {\n\t\t\tif (v && v.then)\n\t\t\t\treturn cnt + 1;\n\t\t\treturn cnt;\n\t\t}, 0);\n\n\t\tif(unresolved == 0)\n\t\t\td.resolve(arr);\n\n\t\tarr.map(function (v) {\n\t\t\tif (v && v.then)\n\t\t\t\tv.then(function (r) {\n\t\t\t\t\tdone(null, r);\n\t\t\t\t}, done);\n\t\t});\n\t}\n\n\tdone();\n\n\treturn d;\n};\n\nDeferred._d = 1;\n\n\n/**\n * @constructor\n */\nfunction Deferred(resolver) {\n\t\"use strict\";\n\tif (typeof resolver != \"function\" && resolver != undefined)\n\t\tthrow TypeError();\n\t\t\n\tif (typeof this != \"object\" || (this && this.then))\n\t\tthrow TypeError();\n\n\t// states\n\t// 0: pending\n\t// 1: resolving\n\t// 2: rejecting\n\t// 3: resolved\n\t// 4: rejected\n\tvar self = this,\n\t\tstate = 0,\n\t\tval = 0,\n\t\tnext = [],\n\t\tfn, er;\n\n\tself[\"promise\"] = self;\n\n\tself[\"resolve\"] = function (v) {\n\t\tfn = self.fn;\n\t\ter = self.er;\n\t\tif (!state) {\n\t\t\tval = v;\n\t\t\tstate = 1;\n\n\t\t\tnextTick(fire);\n\t\t}\n\t\treturn self;\n\t};\n\n\tself[\"reject\"] = function (v) {\n\t\tfn = self.fn;\n\t\ter = self.er;\n\t\tif (!state) {\n\t\t\tval = v;\n\t\t\tstate = 2;\n\n\t\t\tnextTick(fire);\n\n\t\t}\n\t\treturn self;\n\t};\n\n\tself[\"_d\"] = 1;\n\n\tself[\"then\"] = function (_fn, _er) {\n\t\tif (!(this._d == 1))\n\t\t\tthrow TypeError();\n\n\t\tvar d = new Deferred();\n\n\t\td.fn = _fn;\n\t\td.er = _er;\n\t\tif (state == 3) {\n\t\t\td.resolve(val);\n\t\t}\n\t\telse if (state == 4) {\n\t\t\td.reject(val);\n\t\t}\n\t\telse {\n\t\t\tnext.push(d);\n\t\t}\n\n\t\treturn d;\n\t};\n\n\tself[\"finally\"] = function(_handler){\n\t\tvar _value;\n\t\tconst handler = function(value){\n\t\t\t_value = value;\n\t\t\treturn _handler();\n\t\t};\n\t\t\n\t\tconst value = function(){\n\t\t\tconst d = new Deferred();\n\t\t\tif(state == 4)\n\t\t\t\treturn d.reject(_value);\n\t\t\telse\n\t\t\t\treturn d.resolve(_value);\n\t\t};\n\n\t\treturn self.then(handler, handler).then(value, value);\n\t};\n\n\tself[\"catch\"] = function (_er) {\n\t\treturn self[\"then\"](null, _er);\n\t};\n\n\t//compatibility with old version of promiz lib\n\tself[\"fail\"] = function (_er) {\n\t\treturn self[\"then\"](null, _er);\n\t};\n\n\tvar finish = function (type) {\n\t\tstate = type || 4;\n\t\tfor (var i=0; i<next.length; i++){\n\t\t\tvar p = next[i];\n\t\t\tstate == 3 && p.resolve(val) || p.reject(val);\n\t\t}\n\t};\n\n\ttry {\n\t\tif (typeof resolver == \"function\")\n\t\t\tresolver(self[\"resolve\"], self[\"reject\"]);\n\t} catch (e) {\n\t\tself[\"reject\"](e);\n\t}\n\n\treturn self;\n\n\t// ref : reference to 'then' function\n\t// cb, ec, cn : successCallback, failureCallback, notThennableCallback\n\tfunction thennable (ref, cb, ec, cn) {\n\t\t// Promises can be rejected with other promises, which should pass through\n\t\tif (state == 2) {\n\t\t\treturn cn();\n\t\t}\n\t\tif ((typeof val == \"object\" || typeof val == \"function\") && typeof ref == \"function\") {\n\t\t\ttry {\n\n\t\t\t\t// cnt protects against abuse calls from spec checker\n\t\t\t\tvar cnt = 0;\n\t\t\t\tref.call(val, function (v) {\n\t\t\t\t\tif (cnt++) return;\n\t\t\t\t\tval = v;\n\t\t\t\t\tcb();\n\t\t\t\t}, function (v) {\n\t\t\t\t\tif (cnt++) return;\n\t\t\t\t\tval = v;\n\t\t\t\t\tec();\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tval = e;\n\t\t\t\tec();\n\t\t\t}\n\t\t} else {\n\t\t\tcn();\n\t\t}\n\t}\n\n\tfunction fire() {\n\t\t// check if it's a thenable\n\t\tvar ref;\n\t\ttry {\n\t\t\tref = val && val.then;\n\t\t} catch (e) {\n\t\t\tval = e;\n\t\t\tstate = 2;\n\t\t\treturn fire();\n\t\t}\n\n\t\tthennable(ref, function () {\n\t\t\tstate = 1;\n\t\t\tfire();\n\t\t}, function () {\n\t\t\tstate = 2;\n\t\t\tfire();\n\t\t}, function () {\n\t\t\ttry {\n\t\t\t\tif (state == 1 && typeof fn == \"function\") {\n\t\t\t\t\tval = fn(val);\n\t\t\t\t}\n\n\t\t\t\telse if (state == 2 && typeof er == \"function\") {\n\t\t\t\t\tval = er(val);\n\t\t\t\t\tstate = 1;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tval = e;\n\t\t\t\treturn finish();\n\t\t\t}\n\n\t\t\tif (val == self) {\n\t\t\t\tval = TypeError();\n\t\t\t\tfinish();\n\t\t\t} else thennable(ref, function () {\n\t\t\t\tfinish(3);\n\t\t\t}, finish, function () {\n\t\t\t\tfinish(state == 1 && 3);\n\t\t\t});\n\n\t\t});\n\t}\n\n\n}\n\n// promise factory\nDeferred.defer = function () {\n\treturn new Deferred(null);\n};\n\nexport default Deferred;","import { assert } from \"../../webix/debug\";\n\nconst xml={\n\t_isValidXML:function(data){\n\t\tif (!data || !data.documentElement)\n\t\t\treturn null;\n\t\tif (data.getElementsByTagName(\"parsererror\").length)\n\t\t\treturn null;\n\t\treturn data;\n\t},\n\t//convert xml string to xml object if necessary\n\ttoObject:function(text, response){\n\t\tvar data = response ? (response.rawxml ? response.rawxml() : response) :null;\n\t\tif (this._isValidXML(data))\n\t\t\treturn data;\n\t\tif (typeof text == \"string\")\n\t\t\tdata = this.fromString(text.replace(/^[\\s]+/,\"\"));\n\t\telse\n\t\t\tdata = text;\n\n\t\tif (this._isValidXML(data))\n\t\t\treturn data;\n\t\treturn null;\n\t},\n\t//get array of records\n\tgetRecords:function(data){\n\t\treturn this.xpath(data,this.records);\n\t},\n\trecords:\"/*/item\",\n\tchild:\"item\",\n\tconfig:\"/*/config\",\n\t//get hash of properties for single record\n\tgetDetails:function(data){\n\t\treturn this.tagToObject(data,{});\n\t},\n\tgetOptions:function(){ \n\t\treturn false;\n\t},\n\t//get count of data and position at which new data_loading need to be inserted\n\tgetInfo:function(data){\n\t\t\n\t\tvar config = this.xpath(data, this.config);\n\t\tif (config.length)\n\t\t\tconfig = this.assignTypes(this.tagToObject(config[0],{}));\n\t\telse \n\t\t\tconfig = null;\n\n\t\treturn {\n\t\t\tsize:(data.documentElement.getAttribute(\"total_count\")||0),\n\t\t\tfrom:data.documentElement.getAttribute(\"pos\"),\n\t\t\tparent:(data.documentElement.getAttribute(\"parent\")||0),\n\t\t\tconfig:config\n\t\t};\n\t},\n\t//xpath helper\n\txpath:function(xml,path){\n\t\tif (window.XPathResult){\t//FF, KHTML, Opera\n\t\t\tvar node=xml;\n\t\t\tif(xml.nodeName.indexOf(\"document\")==-1)\n\t\t\t\txml=xml.ownerDocument;\n\n\t\t\tvar res = [];\n\t\t\tvar col = xml.evaluate(path, node, null, XPathResult.ANY_TYPE, null);\n\t\t\tvar temp = col.iterateNext();\n\t\t\twhile (temp){ \n\t\t\t\tres.push(temp);\n\t\t\t\ttemp = col.iterateNext();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\t\telse {\n\t\t\tvar test = true;\n\t\t\ttry {\n\t\t\t\tif (typeof(xml.selectNodes)==\"undefined\")\n\t\t\t\t\ttest = false;\n\t\t\t} catch(e){ /*IE7 and below can't operate with xml object*/ }\n\t\t\t//IE\n\t\t\tif (test)\n\t\t\t\treturn xml.selectNodes(path);\n\t\t\telse {\n\t\t\t\t//there is no interface to do XPath\n\t\t\t\t//use naive approach\n\t\t\t\tvar name = path.split(\"/\").pop();\n\n\t\t\t\treturn xml.getElementsByTagName(name);\n\t\t\t}\n\t\t}\n\t},\n\tassignTypes:function(obj){\n\t\tfor (var k in obj){\n\t\t\tvar test = obj[k];\n\t\t\tif (typeof test == \"object\")\n\t\t\t\tthis.assignTypes(test);\n\t\t\telse if (typeof test == \"string\"){\n\t\t\t\tif (test === \"\") \n\t\t\t\t\tcontinue;\n\t\t\t\tif (test == \"true\")\n\t\t\t\t\tobj[k] = true;\n\t\t\t\telse if (test == \"false\")\n\t\t\t\t\tobj[k] = false;\n\t\t\t\telse if (test == test*1)\n\t\t\t\t\tobj[k] = obj[k]*1;\n\t\t\t}\n\t\t}\n\t\treturn obj;\n\t},\n\t//convert xml tag to js object, all subtags and attributes are mapped to the properties of result object\n\ttagToObject:function(tag,z){\n\t\tvar isArray = tag.nodeType == 1 && tag.getAttribute(\"stack\");\n\t\tvar hasSubTags = 0;\n\n\t\tif (!isArray){\n\t\t\tz=z||{};\n\t\t\t\n\n\t\t\t//map attributes\n\t\t\tlet a=tag.attributes;\n\t\t\tif(a && a.length)\n\t\t\t\tfor (let i=0; i<a.length; i++){\n\t\t\t\t\tz[a[i].name]=a[i].value;\n\t\t\t\t\thasSubTags = 1;\n\t\t\t\t}\n\n\t\t\t//map subtags\n\t\t\tlet b=tag.childNodes;\n\t\t\tfor (let i=0; i<b.length; i++)\n\t\t\t\tif (b[i].nodeType==1){\n\t\t\t\t\tconst name = b[i].tagName;\n\t\t\t\t\tif (z[name]){\n\t\t\t\t\t\tif (typeof z[name].push != \"function\")\n\t\t\t\t\t\t\tz[name] = [z[name]];\n\t\t\t\t\t\tz[name].push(this.tagToObject(b[i],{}));\n\t\t\t\t\t} else\n\t\t\t\t\t\tz[name]=this.tagToObject(b[i],{});\t//sub-object for complex subtags\n\t\t\t\t\thasSubTags = 2;\n\t\t\t\t}\n\n\t\t\tif (!hasSubTags)\n\t\t\t\treturn this.nodeValue(tag);\n\t\t\t//each object will have its text content as \"value\" property\n\t\t\t//only if has not sub tags\n\t\t\tif (hasSubTags < 2)\n\t\t\t\tz.value = z.value||this.nodeValue(tag);\n\n\t\t} else {\n\t\t\tz = [];\n\t\t\tlet b=tag.childNodes;\n\t\t\tfor (let i=0; i<b.length; i++)\n\t\t\t\tif (b[i].nodeType==1)\n\t\t\t\t\tz.push(this.tagToObject(b[i],{}));\n\t\t}\n\n\t\treturn z;\n\t},\n\t//get value of xml node \n\tnodeValue:function(node){\n\t\tif (node.firstChild){\n\t\t\treturn node.firstChild.wholeText || node.firstChild.data;\n\t\t}\n\t\treturn \"\";\n\t},\n\t//convert XML string to XML object\n\tfromString:function(xmlString){\n\t\ttry{\n\t\t\tif (window.DOMParser)\t\t// FF, KHTML, Opera\n\t\t\t\treturn (new DOMParser()).parseFromString(xmlString,\"text/xml\");\n\t\t\t/* global ActiveXObject */\n\t\t\tif (window.ActiveXObject){\t// IE, utf-8 only \n\t\t\t\tvar temp=new ActiveXObject(\"Microsoft.xmlDOM\");\n\t\t\t\ttemp.loadXML(xmlString);\n\t\t\t\treturn temp;\n\t\t\t}\n\t\t} catch(e){\n\t\t\tassert(0, e);\n\t\t\treturn null;\n\t\t}\n\t\tassert(0, \"Load from xml string is not supported\");\n\t}\n};\n\nexport default xml;","import { log, assert } from \"../webix/debug\";\nimport { isArray, extend } from \"../webix/helpers\";\nimport { stringify } from \"../webix/stringify\";\nimport { callEvent } from \"../webix/customevents\";\nimport promise from \"../thirdparty/promiz\";\n\nimport xml from \"./drivers/xml\";\nimport json from \"./drivers/json\";\n\nexport function ajax(url,params,call){\n\t//if parameters was provided - made fast call\n\tif (arguments.length!==0){\n\t\treturn (new ajax()).get(url,params,call);\n\t}\n\n\tif (!this || !this.getXHR) return new ajax(); //allow to create new instance without direct new declaration\n\n\treturn this;\n}\n\najax.count = 0;\najax.prototype={\n\tmaster:null,\n\t//creates xmlHTTP object\n\tgetXHR:function(){\n\t\treturn new XMLHttpRequest();\n\t},\n\tstringify:function(obj){\n\t\treturn stringify(obj);\n\t},\n\t/*\n\t\tsend data to the server\n\t\tparams - hash of properties which will be added to the url\n\t\tcall - callback, can be an object with success and error functions\n\t*/\n\t_send:function(url, params, call, mode){\n\t\tvar master;\n\t\t//webix.ajax(url, callback) - can be called only by user\n\t\tif (params && (isArray(params) || (typeof (params.success || params.error || params) == \"function\"))){\n\t\t\tmaster = call;\n\t\t\tcall = params;\n\t\t\tparams = null;\n\t\t}\n\n\t\tvar defer = promise.defer();\n\t\tvar x=this.getXHR();\n\t\tvar headers = this._header || {};\n\n\t\tif (!callEvent(\"onBeforeAjax\", [mode, url, params, x, headers, null, defer])){\n\t\t\treturn defer.reject(x);\n\t\t}\n\n\t\t//add content-type to POST|PUT|DELETE\n\t\tvar json_mode = false;\n\t\tif (mode !== \"GET\"){\n\t\t\tvar found = false;\n\t\t\tfor (let key in headers)\n\t\t\t\tif (key.toString().toLowerCase() == \"content-type\"){\n\t\t\t\t\tfound = true;\n\t\t\t\t\tif (headers[key] == \"application/json\")\n\t\t\t\t\t\tjson_mode = true;\n\t\t\t\t}\n\t\t\tif (!found && !(window.FormData && (params instanceof window.FormData)))\n\t\t\t\theaders[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n\t\t}\n\n\t\t//add extra params to the url\n\t\tif (typeof params == \"object\" && !(window.FormData && (params instanceof window.FormData))){\n\t\t\tif (json_mode)\n\t\t\t\tparams = this.stringify(params);\n\t\t\telse {\n\t\t\t\tvar t=[];\n\t\t\t\tfor (var a in params){\n\t\t\t\t\tvar value = params[a];\n\t\t\t\t\tif (value === null || value === undefined)\n\t\t\t\t\t\tvalue = \"\";\n\t\t\t\t\tif(typeof value===\"object\")\n\t\t\t\t\t\tvalue = this.stringify(value);\n\t\t\t\t\tt.push(encodeURIComponent(a)+\"=\"+encodeURIComponent(value)); // utf-8 escaping\n\t\t\t\t}\n\t\t\t\tparams=t.join(\"&\");\n\t\t\t}\n\t\t}\n\n\t\tif (params && mode===\"GET\"){\n\t\t\turl=url+(url.indexOf(\"?\")!=-1 ? \"&\" : \"?\")+params;\n\t\t\tparams = null;\n\t\t}\n\n\t\tx.open(mode, url, !this._sync);\n\n\t\tvar type = this._response;\n\t\tif (type) x.responseType = type;\n\n\t\t//if header was provided - use it\n\t\tfor (let key in headers)\n\t\t\tx.setRequestHeader(key, headers[key]);\n\t\t\n\t\t//async mode, define loading callback\n\t\tvar self=this;\n\t\tthis.master = this.master || master;\n\t\tx.onreadystatechange = function(){\n\t\t\tif (!x.readyState || x.readyState == 4){\n\t\t\t\tajax.count++;\n\n\t\t\t\tvar is_error = x.status >= 400 || x.status === 0;\n\t\t\t\tvar text, data;\n\t\t\t\tif (x.responseType == \"blob\" || x.responseType == \"arraybuffer\"){\n\t\t\t\t\ttext = \"\";\n\t\t\t\t\tdata = x.response;\n\t\t\t\t} else {\n\t\t\t\t\ttext = x.responseText||\"\";\n\t\t\t\t\tdata = self._data(x);\n\t\t\t\t}\n\t\t\t\tif (is_error){\n\t\t\t\t\tcallEvent(\"onAjaxError\", [x]);\n\t\t\t\t\tdefer.reject(x);\n\t\t\t\t\tif(call)\n\t\t\t\t\t\tajax.$callback((self.master || window), call, text, data, x, is_error);\n\t\t\t\t} else {\n\t\t\t\t\tdefer.resolve(data);\n\t\t\t\t\tif(call)\n\t\t\t\t\t\tajax.$callback((self.master || window), call, text, data, x, is_error);\n\t\t\t\t}\t\n\t\t\t}\n\t\t};\n\n\t\tif (this._timeout)\n\t\t\tx.timeout = this._timeout;\n\n\t\t//IE can use sync mode sometimes, fix it\n\t\tif (!this._sync)\n\t\t\tsetTimeout(function(){\n\t\t\t\tx.send(params||null);\n\t\t\t}, 0);\n\t\telse\n\t\t\tx.send(params||null);\n\t\t\n\t\tif (this.master && !this._sync){\n\t\t\tdefer.then(function(data){\n\t\t\t\t//anti-leak\n\t\t\t\tself.master=null;\n\t\t\t\tcall=self=master=null;\t\n\t\t\t\treturn data;\n\t\t\t});\n\t\t}\n\n\t\treturn this._sync?x:defer; //return XHR, which can be used in case of sync. mode\n\t},\n\t_data:function(x){\n\t\treturn {\n\t\t\txml:function(){ \n\t\t\t\ttry{\n\t\t\t\t\treturn xml.tagToObject(xml.toObject(x.responseText, this));\n\t\t\t\t}\n\t\t\t\tcatch(e){\n\t\t\t\t\tlog(x.responseText);\n\t\t\t\t\tlog(e.toString()); assert(0, \"Invalid xml data for parsing\"); \n\t\t\t\t}\n\t\t\t},\n\t\t\trawxml:function(){ \n\t\t\t\tif (!window.XPathResult)\n\t\t\t\t\treturn xml.fromString(x.responseText);\n\t\t\t\treturn x.responseXML;\n\t\t\t},\n\t\t\ttext:function(){ return x.responseText; },\n\t\t\tjson:function(){\n\t\t\t\treturn json.toObject(x.responseText, false);\n\t\t\t}\n\t\t};\n\t},\n\t//GET request\n\tget:function(url,params,call){\n\t\treturn this._send(url,params,call,\"GET\");\n\t},\n\t//POST request\n\tpost:function(url,params,call){\n\t\treturn this._send(url,params,call,\"POST\");\n\t},\n\t//PUT request\n\tput:function(url,params,call){\n\t\treturn this._send(url,params,call,\"PUT\");\n\t},\n\t//DELETE request\n\tdel:function(url,params,call){\n\t\treturn this._send(url,params,call,\"DELETE\");\n\t},\n\t//PATCH request\n\tpatch:function(url,params,call){\n\t\treturn this._send(url,params,call,\"PATCH\");\n\t},\n\n\tsync:function(){\n\t\tthis._sync = true;\n\t\treturn this;\n\t},\n\ttimeout:function(num){\n\t\tthis._timeout = num;\n\t\treturn this;\n\t},\n\tresponse:function(value){\n\t\tthis._response = value;\n\t\treturn this;\n\t},\n\theaders:function(header){\n\t\tthis._header = extend(this._header||{},header);\n\t\treturn this;\n\t},\n\tbind:function(master){\n\t\tthis.master = master;\n\t\treturn this;\n\t}\n};\najax.$callback = function(owner, call, text, data, x, is_error){\n\tif (owner.$destructed) return;\n\n\tif (is_error)\n\t\tcallEvent(\"onAjaxError\", [x]);\n\t\n\tif (call){\n\t\tvar method = call.success || call;\n\t\tif (is_error)\n\t\t\tmethod = call.error;\n\t\tif (method && method.call)\n\t\t\tmethod.call(owner,text,data,x);\n\t}\n};","import {delay, uid, toNode, extend, isUndefined} from \"./helpers.js\";\n\nlet _native_on_selectstart = 0;\nconst _style_element = {};\nconst _style_cache = {};\n\nexport function denySelect(){\n\tif (!_native_on_selectstart)\n\t\t_native_on_selectstart = document.onselectstart;\n\tdocument.onselectstart = stopEvent;\n}\n\nexport function allowSelect(){\n\tif (_native_on_selectstart !== 0){\n\t\tdocument.onselectstart = _native_on_selectstart||null;\n\t}\n\t_native_on_selectstart = 0;\n\n}\n\nexport function index(node){\n\tvar k=0;\n\t//must be =, it is not a comparation!\n\twhile ((node = node.previousSibling)) k++;\n\treturn k;\n}\n\nexport function createCss(rule, sufix){\n\tvar text = \"\";\n\tsufix = sufix || \"\";\n\n\tfor (var key in rule)\n\t\ttext+= key+\":\"+rule[key]+\";\";\n\n\tvar name = _style_cache[text+sufix];\n\tif (!name){\n\t\tname = \"s\"+uid();\n\t\taddStyle(\".\"+name+(sufix||\"\")+\"{\"+text+\"}\");\n\t\t_style_cache[text+sufix] = name;\n\t}\n\treturn name;\n}\n\nexport function addStyle(rule, group){\n\tvar style = group ? _style_element[group] :_style_element[\"default\"];\n\tif(!style){\n\t\tstyle = document.createElement(\"style\");\n\t\tstyle.setAttribute(\"type\", \"text/css\");\n\t\tstyle.setAttribute(\"media\", \"screen,print\");\n\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(style);\n\n\t\tif (group)\n\t\t\t_style_element[group] = style;\n\t\telse\n\t\t\t_style_element[\"default\"] = style;\n\t}\n\n\tstyle.appendChild(document.createTextNode(rule));\n}\n\nexport function removeStyle(group){\n\tvar box = _style_element[group||\"default\"];\n\tif (box)\n\t\tbox.innerHTML = \"\";\n}\n\nexport function create(name,attrs,html){\n\tattrs = attrs || {};\n\tvar node = document.createElement(name);\n\tfor (var attr_name in attrs)\n\t\tnode.setAttribute(attr_name, attrs[attr_name]);\n\tif (attrs.style)\n\t\tnode.style.cssText = attrs.style;\n\tif (attrs[\"class\"])\n\t\tnode.className = attrs[\"class\"];\n\tif (html)\n\t\tnode.innerHTML = html;\n\treturn node;\n}\n\n//return node value, different logic for different html elements\nexport function getValue(node){\n\tnode = toNode(node);\n\tif (!node) return \"\";\n\treturn isUndefined(node.value) ? node.innerHTML : node.value;\n}\n\n//remove html node, can process an array of nodes at once\nexport function remove(node){\n\tif (node instanceof Array)\n\t\tfor (var i=0; i < node.length; i++)\n\t\t\tremove(node[i]);\n\telse if (node && node.parentNode)\n\t\tnode.parentNode.removeChild(node);\n}\n\n//insert new node before sibling, or at the end if sibling doesn't exist\nexport function insertBefore(node,before,rescue){\n\tif (!node) return;\n\tif (before && before.parentNode)\n\t\tbefore.parentNode.insertBefore(node, before);\n\telse\n\t\trescue.appendChild(node);\n}\n\n//return custom ID from html element \n//will check all parents starting from event's target\nexport function locate(e,id){\n\tvar trg;\n\tif (e.tagName)\n\t\ttrg = e;\n\telse {\n\t\ttrg = e.target;\n\t}\n    \n\twhile (trg){\n\t\tif (trg.getAttribute){\t//text nodes has not getAttribute\n\t\t\tvar test = trg.getAttribute(id);\n\t\t\tif (test) return test;\n\t\t}\n\t\ttrg=trg.parentNode;\n\t}\t\n\treturn null;\n}\n\n//returns position of html element on the page\nexport function offset(elem) {\n\tconst box = elem.getBoundingClientRect();\n\tconst body = document.body;\n\tconst docElem = document.documentElement;\n\tconst scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n\tconst scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n\tconst clientTop = docElem.clientTop || body.clientTop || 0;\n\tconst clientLeft = docElem.clientLeft || body.clientLeft || 0;\n\tconst top  = box.top +  scrollTop -  clientTop;\n\tconst left = box.left + scrollLeft - clientLeft;\n\treturn { y:Math.round(top), x:Math.round(left), width:elem.offsetWidth, height:elem.offsetHeight };\n}\n\n//returns relative position of event\nexport function posRelative(ev){\n\treturn { x:ev.offsetX, y:ev.offsetY };\n}\n\n//returns position of event\nexport function pos(ev){\n\tif (!ev.type)\t// webix touch event\n\t\treturn {x:ev.x, y:ev.y};\n\n\tif (ev.touches && ev.touches[0])\n\t\tev = ev.touches[0];\n\n\treturn {x:ev.pageX, y:ev.pageY};\n}\n\n//prevent event action\nexport function preventEvent(e){\n\te.preventDefault();\n\treturn stopEvent(e);\n}\n\n//stop event bubbling\nexport function stopEvent(e){\n\te.stopPropagation();\n\treturn false;\n}\n\nexport function triggerEvent(node, type, name, details){\n\tlet event;\n\tif (typeof(window[type]) === \"function\") {\n\t\tdetails = extend(details||{}, { bubbles:true, cancelable:true });\n\t\tevent = new window[type](name, details);\n\t} else {\t\t//IE 11 support\n\t\tevent = document.createEvent(type);\n\t\tevent.initEvent(name, true, true);\n\t}\n\tnode.dispatchEvent(event);\n}\n\n//add css class to the node\nexport function addCss(node,name,check){\n\tif (!check || node.className.indexOf(name) === -1)\n\t\tnode.className += \" \"+name;\n}\n\n//remove css class from the node\nexport function removeCss(node,name){\n\tnode.className = node.className.replace(RegExp(\" \"+name,\"g\"),\"\");\n}\n\nexport function getTextSize(text, css, basewidth){\n\tconst d = create(\"DIV\",{\"class\":\"webix_view webix_measure_size \"+(css||\"\")},\"\");\n\td.style.cssText = \"height:auto;visibility:hidden; position:absolute; top:0px; left:0px; overflow:hidden;\"+(basewidth?(\"width:\"+basewidth+\"px;\"):\"width:auto;white-space:nowrap;\");\n\tdocument.body.appendChild(d);\n\n\tconst all = (typeof text !==  \"object\") ? [text] : text;\n\tlet width = 0, height = 0;\n\n\tfor (let i=0; i<all.length; i++) {\n\t\td.innerHTML = all[i];\n\n\t\tconst rect = d.getBoundingClientRect();\n\t\twidth = Math.max(width, Math.ceil(rect.width));\n\t\theight = Math.max(height, Math.ceil(rect.height));\n\t}\n\n\tremove(d);\n\treturn { width, height };\n}\n\nexport function download(data, filename){\n\tvar objUrl = false;\n\n\tif(typeof data == \"object\"){//blob\n\t\tif(window.navigator.msSaveBlob)\n\t\t\treturn window.navigator.msSaveBlob(data, filename);\n\t\telse {\n\t\t\tdata = window.URL.createObjectURL(data);\n\t\t\tobjUrl = true;\n\t\t}\n\t}\n\t//data url or blob url\n\tvar link = document.createElement(\"a\");\n\tlink.href = data;\n\tlink.download = filename;\n\tdocument.body.appendChild(link);\n\tlink.click(); \n\n\tdelay(function(){\n\t\tif(objUrl) window.URL.revokeObjectURL(data);\n\t\tdocument.body.removeChild(link);\n\t\tlink.remove();\n\t});\n}\n\nexport function _getClassName(node){\n\tif(!node) return \"\";\n\n\tvar className = node.className || \"\";\n\tif(className.baseVal)//'className' exist but not a string - IE svg element in DOM\n\t\tclassName = className.baseVal;\n\n\tif(!className.indexOf)\n\t\tclassName = \"\";\n\n\treturn className;\n}\n\nexport function setSelectionRange(node, start, end){\n\tnode.focus();\n\n\tif(node.setSelectionRange){\n\t\tstart = start || 0;\n\t\tend = end || start;\n\n\t\tnode.setSelectionRange(start, end);\n\t}\n}\n\nexport function getSelectionRange(node){\n\treturn {start:node.selectionStart || 0, end:node.selectionEnd || 0};\n}\n\nexport function addMeta(name, value){\n\tdocument.getElementsByTagName(\"head\").item(0).appendChild(create(\"meta\",{\n\t\tname:name,\n\t\tcontent:value\n\t}));\t\n}\n\n","const env = {};\n\nenv.cdn = \"//cdn.webix.com\";\nenv.codebase = \"\";\nenv.zIndexBase = 100;\nenv.scrollSize = 17;\nenv.strict = !!window.webix_strict;\nenv.https = document.location.protocol === \"https:\";\n\nconst agent = navigator.userAgentData;\nconst deprecatedAgent = agent ? null : navigator.userAgent;\n\nconst browsers = {\n\tChromium: \"Chrom\", //in userAgent - Chrome, in userAgentData.brands - Chromium\n\tIE: \"Trident\",\n\tEdge: \"Edg\", // in userAgent - Edg, in userAgentData.brands - Microsoft Edge\n\tFF: \"Firefox\",\n\tSafari: \"Safari\"\n};\n\nfor(let browser in browsers){\n\tconst checkBrowser = agent ?\n\t\tagent.brands.find(v => v.brand.indexOf(browsers[browser]) != -1) :\n\t\tdeprecatedAgent.indexOf(browsers[browser]) != -1;\n\n\tif(checkBrowser){\n\t\tenv[\"is\"+browser] = true;\n\t\t//Edge is a chromium-based browser (so we set isChromium:true and isEdge:true)\n\t\tif(browser != \"Chromium\")\n\t\t\tbreak;\n\t}\n}\n\nconst platform = agent ? agent.platform : deprecatedAgent;\nenv.isMac = platform.toLowerCase().indexOf(\"mac\") != -1;\nif (/iPad|iPhone|iPod/.test(platform)) env.isIOS = true;\nif (platform.indexOf(\"Android\") != -1) env.isAndroid = true;\n\nif(agent)\n\tenv.mobile = agent.mobile;\nelse if(env.isIOS || env.isAndroid || deprecatedAgent.indexOf(\"Mobile\") != -1 || deprecatedAgent.indexOf(\"Windows Phone\") != -1)\n\tenv.mobile = true;\n\nif (env.mobile || navigator.maxTouchPoints > 1)\n\tenv.touch = true;\n\nenv.fastClick = !env.touch;\n\n//maximum height/width for HTML elements in pixels (rough), bigger values will be ignored by browser\nif (env.isIE || env.isEdge || env.isFF)\n\tenv.maxHTMLElementSize = 10000000;\nif (env.isSafari)\n\tenv.maxHTMLElementSize = 100000000;\n\nenv.transform = \"transform\";\nenv.transition = \"transition\";\nenv.transitionDuration = \"transitionDuration\";\nenv.translate = \"translate3d\";\nenv.transitionEnd =  \"transitionend\";\n\n//touch events that can be prevented\nenv.passiveEventListeners = false;\ntry {\n\tconst opts = Object.defineProperty({}, \"passive\", {\n\t\tget: function() { // eslint-disable-line\n\t\t\tenv.passiveEventListeners = true;\n\t\t}\n\t});\n\twindow.addEventListener(\"testPassive\", null, opts);\n\twindow.removeEventListener(\"testPassive\", null, opts);\n} catch (e) {} // eslint-disable-line\n\nenv.svg = (function(){\n\treturn document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\");\n})();\n\nenv.svganimation = (function(){\n\treturn document.implementation.hasFeature(\"https://www.w3.org/TR/SVG11/feature#SVG-animation\", \"1.1\");\n})();\n\nexport default env;","import {extend, bind, isDate, isUndefined} from \"../../webix/helpers\";\nimport env from \"../../webix/env\";\n\nimport Promise from \"../../thirdparty/promiz\";\nimport i18n from \"../../webix/i18n\";\n\nimport require from \"../require\";\nimport jsarray from \"./jsarray\";\n\n\nconst excel = extend({\n\ttoObject:function(data){\n\t\tif(!data.excel){\n\t\t\tvar opts = data.options || {};\n\t\t\tif (opts.dataurl) \n\t\t\t\textend(opts, this._urlToOptions(opts.dataurl));\n\n\t\t\tdata = data.data || data;\n\t\t\tvar promise = Promise.defer();\n\n\t\t\tif(data.name){ //file\n\t\t\t\topts.ext = data.name.split(\".\").pop();\n\t\t\t\tvar reader = new FileReader();\n\n\t\t\t\treader.onload = bind(function (e) {\n\t\t\t\t\tpromise.resolve(this.parseData(e.target.result, opts));\n\t\t\t\t}, this);\n\t\t\t\treader.readAsArrayBuffer(data);\n\t\t\t}\n\t\t\telse //arraybuffer\n\t\t\t\tpromise.resolve(this.parseData(data, opts));\n\n\t\t\treturn promise;\n\t\t}\n\t\t//plain jsarray or hash\n\t\treturn data;\n\t},\n\tparseData:function(data, options){\n\t\tdata = new Uint8Array(data);\n\t\tconst arr = [];\n\t\tfor(let i = 0; i != data.length; ++i)\n\t\t\tarr[i] = String.fromCharCode(data[i]);\n\n\t\tlet ext = (options.ext || options).toLowerCase();\n\t\tif (ext != \"xls\") ext = \"xlsx\";\n\t\treturn require(env.cdn + \"/extras/xlsx.core.styles.min.js\").then(bind(function(){\n\t\t\tconst cellDates = isUndefined(options.cellDates) ? true : options.cellDates;\n\t\t\t/* global XLS, XLSX */\n\t\t\tconst wb = (ext == \"xls\") ?\n\t\t\t\tXLS.read(arr.join(\"\"), {type: \"binary\", cellStyles:true, cellDates}) :\n\t\t\t\tXLSX.read(arr.join(\"\"), {type: \"binary\", cellStyles:true, cellDates});\n\n\t\t\tconst res = {\n\t\t\t\tsheets: wb.Sheets,\n\t\t\t\tnames: wb.SheetNames,\n\t\t\t\toptions:options,\n\t\t\t\tranges:wb.Workbook?(wb.Workbook.Names ||[]):[],\n\t\t\t\tstates: wb.Workbook.Sheets.map(s => [\"visible\", \"hidden\", \"veryHidden\"][s.Hidden])\n\t\t\t};\n\t\t\treturn extend(this.getSheet(res, options), res);\n\t\t}, this));\n\t},\n\tgetSheet:function(data, options){\n\t\tvar name = options.name || data.names[0];\n\t\tdata = this.sheetToArray(data.sheets[name], options);\n\t\tif(options.rows && options.rows.length)\n\t\t\tdata.data = data.data.splice(options.rows[0], Math.min(options.rows[1], data.data.length)-options.rows[0]);\n\t\treturn data;\n\t},\n\tsheetToArray:function(sheet, options){\n\t\tconst all = [];\n\t\tconst spans = [];\n\t\tconst styles = [];\n\t\tconst sizes = [];\n\t\tconst types = [];\n\t\tconst hidden = [];\n\n\t\tconst cellTypes = { n:\"number\", d:\"date\", s:\"string\", b:\"boolean\"};\n\n\t\tif(sheet && sheet[\"!ref\"]){\n\t\t\tvar range = XLS.utils.decode_range(sheet[\"!ref\"]), \n\t\t\t\trow, col, cellCoord, cell,\n\t\t\t\txCorrection = range.s.c,\n\t\t\t\tyCorrection = range.s.r+(options.rows?options.rows[0]:0);\n\n\t\t\tfor (row = range.s.r; row <= range.e.r; row++) {\n\t\t\t\tvar nrow = [];\n\t\t\t\tfor (col = range.s.c; col <= range.e.c; col++) {\n\t\t\t\t\tcellCoord = XLS.utils.encode_cell({ r: row, c: col });\n\t\t\t\t\tcell = sheet[cellCoord];\n\t\t\t\t\tif(!cell)\n\t\t\t\t\t\tnrow.push(\"\");\n\t\t\t\t\telse{\n\t\t\t\t\t\tvar ncell = \"\";\n\t\t\t\t\t\tif(options.math&&cell.f) // get formula\n\t\t\t\t\t\t\tncell = cell.f.charAt(0)==\"=\" ? cell.f : \"=\"+cell.f;\n\t\t\t\t\t\telse if (cell.t ==\"d\" && isDate(cell.v))\n\t\t\t\t\t\t\tncell  = i18n.dateFormatStr(cell.v);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tncell = cell.v;\n\t\t\t\t\t\tnrow.push(ncell);\n\n\t\t\t\t\t\tif (cell.s)\n\t\t\t\t\t\t\tstyles.push([row-yCorrection, col-xCorrection, cell.s]);\n\t\t\t\t\t\tif (cell.t)\n\t\t\t\t\t\t\ttypes.push([row-yCorrection, col-xCorrection, cellTypes[cell.t]]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tall.push(nrow);\n\t\t\t}\n\n\t\t\tif(sheet[\"!merges\"]){\n\t\t\t\tvar merges = sheet[\"!merges\"];\n\t\t\t\tfor(let i = 0; i<merges.length; i++){\n\t\t\t\t\tvar s = merges[i].s;\n\t\t\t\t\tvar e = merges[i].e;\n\t\t\t\t\tif(!options.rows || (s.r-yCorrection>=0 && e.r-yCorrection<=options.rows[1]))\n\t\t\t\t\t\tspans.push([s.r-yCorrection, s.c-xCorrection, e.c-s.c+1, e.r-s.r+1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(sheet[\"!cols\"]){\n\t\t\t\tvar widths = sheet[\"!cols\"];\n\t\t\t\tfor(let i = 0; i<widths.length; i++){\n\t\t\t\t\tconst item = widths[i];\n\t\t\t\t\tif(item){\n\t\t\t\t\t\tconst index = i-xCorrection;\n\t\t\t\t\t\tsizes.push([\"column\", index, Math.round(item.wch/(8.43/70))]); //mode, colind, value\n\t\t\t\t\t\tif(item.hidden)\n\t\t\t\t\t\t\thidden.push([\"column\", index]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(sheet[\"!rows\"]){\n\t\t\t\tvar heights = sheet[\"!rows\"];\n\t\t\t\tfor(let i = 0; i<heights.length; i++){\n\t\t\t\t\tconst item = heights[i];\n\t\t\t\t\tif(item){\n\t\t\t\t\t\tconst index = i-yCorrection;\n\t\t\t\t\t\tsizes.push([\"row\", index, item.hpx]); //mode (\"row\", \"column\"), rowind, value\n\t\t\t\t\t\tif(item.hidden)\n\t\t\t\t\t\t\thidden.push([\"row\", index]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { data:all, spans, styles, sizes, types, hidden, excel: true };\n\t},\n\t_urlToOptions:function(details){\n\t\tvar parts = details.split(\"[\");\n\t\tvar options = {};\n\t\toptions.name = parts[0];\n\t\tif(parts[1]){\n\t\t\tvar rows = parts[1].split(/[^0-9]+/g);\n\t\t\trows[0] = rows[0]*1 || 0;\n\t\t\trows[1] = rows[1]*1 || 9999999;\n\t\t\toptions.rows = rows;\n\t\t}\n\t\treturn options;\n\t}\n}, jsarray);\n\nexport default excel;","/*\n\tTemplate - handles html templates\n*/\n\nimport {uid} from \"./helpers\";\nimport {getValue} from \"./html\";\nimport env from \"./env\";\nimport {ajax} from \"../load/ajax\";\nimport {assert} from \"./debug\";\n\nimport CodeParser from \"../core/codeparser\";\n\nvar _cache = {};\nvar _csp_cache = {};\nvar newlines = new RegExp(\"(\\\\r\\\\n|\\\\n)\",\"g\");\nvar quotes   = new RegExp(\"(\\\\\\\")\",\"g\");\nvar slashes  = new RegExp(\"(\\\\\\\\)\",\"g\");\nvar escape = {\n\t\"&\": \"&amp;\",\n\t\"<\": \"&lt;\",\n\t\">\": \"&gt;\",\n\t\"\\\"\": \"&quot;\",\n\t\"'\": \"&#x27;\",\n\t\"`\": \"&#x60;\"\n};\nvar badChars = /[&<>\"'`]/g;\nvar escapeChar = function(chr) {\n\treturn escape[chr] || \"&amp;\";\n};\n\n\nfunction template(str){\n\tif (typeof str == \"function\") return str;\n\tif (_cache[str])\n\t\treturn _cache[str];\n\t\t\n\tstr=(str||\"\").toString();\t\t\t\n\tif (str.indexOf(\"->\")!=-1){\n\t\tvar teststr = str.split(\"->\");\n\t\tswitch(teststr[0]){\n\t\t\tcase \"html\": \t//load from some container on the page\n\t\t\t\tstr = getValue(teststr[1]);\n\t\t\t\tbreak;\n\t\t\tcase \"http\": \t//load from external file\n\t\t\t\tstr = new ajax().sync().get(teststr[1],{uid:uid()}).responseText;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t//do nothing, will use template as is\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\t\n\t//supported idioms\n\t// {obj.attr} => named attribute or value of sub-tag in case of xml\n\tstr=(str||\"\").toString();\t\t\n\n\t// Content Security Policy enabled\n\tif(env.strict){\n\t\tif (!_csp_cache[str]){\n\t\t\t_csp_cache[str] = [];\n\n\t\t\t// get an array of objects (not sorted by position)\n\t\t\tvar temp_res = [];\n\t\t\tstr.replace(/\\{obj\\.([^}?]+)\\?([^:]*):([^}]*)\\}/g,function(search,s1,s2,s3,pos){\n\t\t\t\ttemp_res.push({pos: pos, str: search, fn: function(obj){\n\t\t\t\t\treturn obj[s1]?s2:s3;\n\t\t\t\t}});\n\t\t\t});\n\t\t\tstr.replace(/\\{common\\.([^}(]*)\\}/g,function(search,s,pos){\n\t\t\t\ttemp_res.push({pos: pos, str: search, fn: function(_,common){\n\t\t\t\t\treturn common[s]||\"\";\n\t\t\t\t}});\n\t\t\t});\n\t\t\tstr.replace(/\\{common\\.([^}(]*)\\(\\)\\}/g,function(search,s,pos){\n\t\t\t\ttemp_res.push({pos: pos, str: search, fn: function(obj,common){\n\t\t\t\t\treturn (common[s]?common[s].apply(this, arguments):\"\");\n\t\t\t\t}});\n\t\t\t});\n\t\t\tstr.replace(/\\{obj\\.([^:}]*)\\}/g,function(search,s,pos){\n\t\t\t\ttemp_res.push({pos: pos, str: search, fn: function(obj){\n\t\t\t\t\treturn obj[s];\n\t\t\t\t}});\n\t\t\t});\n\t\t\tstr.replace(\"{obj}\",function(search,pos){\n\t\t\t\ttemp_res.push({pos: pos, str: search, fn: function(obj){\n\t\t\t\t\treturn obj;\n\t\t\t\t}});\n\t\t\t});\n\t\t\tstr.replace(/#([^#'\";, ]+)#/gi,function(search,s,pos){\n\t\t\t\tif(s.charAt(0)==\"!\"){\n\t\t\t\t\ts = s.substr(1);\n\t\t\t\t\ttemp_res.push({pos: pos, str: search, fn: function(obj){\n\t\t\t\t\t\tif(s.indexOf(\".\")!= -1)\n\t\t\t\t\t\t\tobj = CodeParser.collapseNames(obj); // apply complex properties\n\t\t\t\t\t\treturn template.escape(obj[s]);\n\t\t\t\t\t}});\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\ttemp_res.push({pos: pos, str: search, fn: function(obj){\n\t\t\t\t\t\tif(s.indexOf(\".\")!= -1)\n\t\t\t\t\t\t\tobj = CodeParser.collapseNames(obj); // apply complex properties\n\t\t\t\t\t\treturn obj[s];\n\t\t\t\t\t}});\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\t// sort template parts by position\n\t\t\ttemp_res.sort(function(a,b){\n\t\t\t\treturn (a.pos > b.pos)?1:-1;\n\t\t\t});\n\n\t\t\t// create an array of functions that return parts of html string\n\t\t\tif(temp_res.length){\n\t\t\t\tvar lastPos = 0;\n\t\t\t\tvar addStr = function(str,n0,n1){\n\t\t\t\t\t_csp_cache[str].push(function(){\n\t\t\t\t\t\treturn str.slice(n0,n1);\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tfor(var i = 0; i< temp_res.length; i++){\n\t\t\t\t\tvar pos = temp_res[i].pos;\n\t\t\t\t\taddStr(str,lastPos,pos);\n\t\t\t\t\t_csp_cache[str].push(temp_res[i].fn);\n\t\t\t\t\tlastPos = pos + temp_res[i].str.length;\n\t\t\t\t}\n\t\t\t\taddStr(str,lastPos,str.length);\n\t\t\t}\n\t\t\telse\n\t\t\t\t_csp_cache[str].push(function(){return str;});\n\t\t}\n\t\treturn function(){\n\t\t\tvar s = \"\";\n\t\t\tfor(var i=0; i < _csp_cache[str].length;i++){\n\t\t\t\ts += _csp_cache[str][i].apply(this,arguments);\n\t\t\t}\n\t\t\treturn s;\n\t\t};\n\t}\n\n\tlet helpers = false;\n\tstr=str.replace(slashes,\"\\\\\\\\\");\n\tstr=str.replace(newlines,\"\\\\n\");\n\tstr=str.replace(quotes,\"\\\\\\\"\");\n\n\tstr=str.replace(/\\{obj\\.([^}?]+)\\?([^:]*):([^}]*)\\}/g,\"\\\"+(obj.$1?\\\"$2\\\":\\\"$3\\\")+\\\"\");\n\tstr=str.replace(/\\{common\\.([^}(]*)\\}/g,\"\\\"+(common.$1||'')+\\\"\");\n\tstr=str.replace(/\\{common\\.([^}(]*)\\(\\)\\}/g,\"\\\"+(common.$1?common.$1.apply(this, arguments):\\\"\\\")+\\\"\");\n\tstr=str.replace(/\\{obj\\.([^}]*)\\}/g,\"\\\"+(obj.$1)+\\\"\");\n\tstr=str.replace(\"{obj}\",\"\\\"+obj+\\\"\");\n\tstr=str.replace(/#([^#'\";, ]+)#/gi,function(str, key){\n\t\tif (key.charAt(0)==\"!\"){\n\t\t\thelpers = true;\n\t\t\treturn \"\\\"+template.escape(obj.\"+key.substr(1)+\")+\\\"\";\n\t\t} else\n\t\t\treturn \"\\\"+(obj.\"+key+\")+\\\"\";\n\t});\n\n\ttry {\n\t\tif (helpers){\n\t\t\tconst temp = Function(\"obj\",\"common\",\"marks\", \"value\", \"template\", \"return \\\"\"+str+\"\\\";\");\n\t\t\t_cache[str] = function(a,b,c,d){ \n\t\t\t\treturn temp(a,b,c,d,template);\n\t\t\t};\n\t\t} else {\n\t\t\t_cache[str] = Function(\"obj\",\"common\",\"return \\\"\"+str+\"\\\";\");\n\t\t}\n\t} catch(e){\n\t\tassert(0, \"Invalid template:\"+str);\n\t}\n\n\treturn _cache[str];\n}\n\n\n\ntemplate.escape  = function(str){\n\tif (str === undefined || str === null) return \"\";\n\treturn (str.toString() || \"\" ).replace(badChars, escapeChar);\n};\ntemplate.empty=function(){\treturn \"\";\t};\n\nexport default template;","import { assert } from \"./debug\";\nimport { toNode, uid, bind, isUndefined } from \"./helpers\";\nimport env from \"./env\";\n\n//hash of attached events\nconst _events = {};\n\nexport function _events_final_destructor(){\n\t//detach all known DOM events\n\tfor (var a in _events)\n\t\teventRemove(a);\n}\n\n//private version of API, do not register ID for event detaching\nexport function _event(a,b,c,d){\n\td = d || {};\n\td.inner = true;\n\tevent(a,b,c,d);\n}\n\n//attach event to the DOM element\nexport function event(node,event,handler,context){\n\tcontext = context || {};\n\tnode = toNode(node);\n\tassert(node, \"Invalid node as target for webix.event\");\n\t\n\tvar id = context.id || uid();\n\n\tif (context.bind)\n\t\thandler = bind(handler,context.bind);\n\n\tvar info = [node,event,handler,context.capture];\n\tif (!context.inner)\n\t\t_events[id] = info;\t//store event info, for detaching\n\n\tvar capture = !!context.capture;\n\tif (!isUndefined(context.passive) && env.passiveEventListeners)//blockable touch events\n\t\tcapture = { passive:context.passive, capture:capture };\n\t\t\n\tnode.addEventListener(event, handler, capture);\n\n\treturn id;\t//return id of newly created event, can be used in eventRemove\n}\n\n//remove previously attached event\nexport function eventRemove(id){\n\tif (!id) return;\n\tassert(_events[id],\"Removing non-existing event\");\n\n\tconst ev = _events[id];\n\tev[0].removeEventListener(ev[1], ev[2], !!ev[3]);\n\n\tdelete _events[id];\t//delete all traces\n}\n","import {assert} from \"../webix/debug\";\n\nimport {uid, isArray, toNode, isUndefined, toFunctor} from \"../webix/helpers\";\nimport {attachEvent} from \"../webix/customevents\";\nimport {locate} from \"../webix/html\";\nimport {use} from \"../services\";\n\nimport type from \"../webix/type\";\nimport state from \"../core/state\";\n\n//global click events for UI\nimport \"./click\";\n\nconst views = {};\n\nfunction ui(config, parent, id){\n\tvar res;\n\tstate._ui_creation++;\n\t// save old value of global scope\n\tconst temp = state._global_scope;\n\t// set global scope to the scope of new UI or to previous value\n\t// as result inner webix.ui calls will have access the scope of master view\n\t// mainly necessary for suggests\n\tstate._global_scope = config.$scope || temp;\n\ttry {\n\t\tres = _ui_creator(config, parent, id);\n\t} finally {\n\t\tstate._ui_creation--;\n\t\t// restore global scope\n\t\tstate._global_scope = temp;\n\t}\n\treturn res;\n}\nui.views = views;\n\n\nfunction _ui_creator(config, parent, id){\n\tvar multiset = isArray(config);\n\tvar node = toNode((config.container||parent)||document.body);\n\n\t// solve problem with non-unique ids\n\tif(node._settings)\n\t\tid = _correctId(node, multiset, id);\n\n\tvar top_node;\n\tvar moving = false;\n\tvar body_child = (node == document.body);\n\tif (config._settings || (node && multiset)){\n\t\ttop_node = config;\n\t\tmoving = true;\n\t} else {\n\t\tif (node && body_child)\n\t\t\tconfig.$topView = true;\n\t\tif (!config._inner)\n\t\t\tconfig._inner = {};\n\n\t\tif (parent && parent.getParentView){\n\t\t\tstate._parent_cell = (!id && id!==0) ? parent.getParentView() : parent;\n\t\t}\n\n\t\ttop_node = _view(config);\n\t}\n\n\tif (body_child && !top_node.setPosition && !top_node.$apiOnly)\n\t\tuse(\"fixHeight\")();\n\n\tif (top_node._settings && top_node._settings._hidden && !node.$view){\n\t\ttop_node._settings._container = node;\n\t} else if (!top_node.$apiOnly){\n\t\tif (node.appendChild)\n\t\t\t_appendDom(node, top_node, config);\n\t\telse if (node.destructor){\n\t\t\tvar target = node;\n\n\t\t\t//addView or view moving with target id\n\t\t\tif (!id && id!==0 && !isArray(top_node)){\n\t\t\t\tid = node;\n\t\t\t\tnode = node.getParentView();\n\t\t\t}\n\n\t\t\t//if target supports view adding\n\t\t\tif (node && node._replace){\n\t\t\t\tif (moving && top_node.getParentView){\n\t\t\t\t\t//if source supports view removing\n\t\t\t\t\tlet parent = top_node.getParentView();\n\t\t\t\t\tif (parent  && parent._remove){\n\t\t\t\t\t\tparent._remove(top_node);\n\t\t\t\t\t}\n\t\t\t\t\t//adjust parent link and scope\n\t\t\t\t\ttop_node._parent_cell = node;\n\t\t\t\t\ttop_node.$scope = node.$scope;\n\t\t\t\t}\n\n\t\t\t\tnode._replace(top_node, id);\n\t\t\t} else {\n\t\t\t\tlet parent = target.$view.parentNode;\n\t\t\t\ttarget.destructor();\n\t\t\t\t_appendDom(parent, top_node, config);\n\t\t\t}\n\t\t} else\n\t\t\tassert(0, \"Not existing parent:\"+config.container);\n\t}\n\n\treturn top_node;\n}\n\nfunction _appendDom(node, top_node, config){\n\tnode.appendChild(top_node._viewobj);\n\tif (top_node.getParentView()) return;\n\n\t//resize window with position center or top\n\t//do not resize other windows and elements\n\t// which are attached to custom html containers\n\tif (((!top_node.setPosition || top_node._settings.fullscreen) && node == document.body) || top_node._settings.position )\n\t\tstate.top_views.push(top_node._destructor_handler);\n\tif (!config.skipResize)\n\t\ttop_node.adjust();\n}\n\nfunction _correctId(target, multiset, id){\n\t//replace view\n\tvar views = [target];\n\t//replace content of layout\n\tif (multiset)\n\t\tviews = target.getChildViews();\n\t//replace content of window\n\telse if (target._body_cell)\n\t\tviews = [target._body_cell];\n\t//add cell in layout by number\n\telse if (typeof id == \"number\"){\n\t\treturn id;\n\t//replace cell in layout by id\n\t} else if (id){\n\t\tviews = [$$(id)];\n\t\t_deleteIds(views);\n\t\treturn views[0].config.id;\n\t}\n\n\t_deleteIds(views);\n\treturn id;\n}\n\nfunction _deleteIds(uis){\n\tfor (var i = uis.length - 1; i >= 0; i--){\n\t\tlet current = uis[i];\n\t\t//remove original id\n\t\tdelete views[current.config.id];\n\t\t//create temp id\n\t\tcurrent.config.id = \"x\"+uid();\n\t\tviews[current.config.id] = current;\n\t\t//process childs\n\t\tif (current.getChildViews)\n\t\t\t_deleteIds(current.getChildViews());\n\t\t//process related UI\n\t\tif (current._destroy_with_me)\n\t\t\t_deleteIds(current._destroy_with_me);\n\t}\n}\n\n\nfunction _view(config){\n\n\tif (DEBUG){\n\t\t// check for trailing comma\n\t\tvar coll = config.cells || config.rows || config.elements || config.cols;\n\t\tif (coll)\n\t\t\tfor (let i=0; i<coll.length; i++)\n\t\t\t\tif (coll[i] === null || typeof coll[i] === \"undefined\")\n\t\t\t\t\tassert(0, \"You have trailing comma or Null element in collection's configuration\");\n\t}\n\n\tif (config.view){\n\t\tvar view = config.view;\n\t\tassert(ui[view], \"unknown view:\"+view);\n\t\treturn new ui[view](config);\n\t} else if (config.rows || config.cols){\n\t\tvar cells = config.rows||config.cols;\n\t\tvar accordion = false;\n\t\tfor (let i=0; i<cells.length; i++){\n\t\t\tif (cells[i].body && !cells[i].view && !cells[i].align)\n\t\t\t\taccordion = true;\n\t\t}\n\t\tif (accordion){\n\t\t\treturn new ui.headerlayout(config);\n\t\t} else\n\t\t\treturn new ui.layout(config);\n\t}\n\telse if (config.cells)\n\t\treturn new ui.multiview(config);\n\telse if (config.template || config.content)\n\t\treturn new ui.template(config);\t\n\telse if (config.align && config.body){\n\t\treturn new ui.align(config);\n\t} else return new ui.spacer(config);\n}\n//FIXME\nui._view = _view;\n\nfunction $$(id){\n\tif (!id) return null;\n\t\n\tif (views[id]) return views[id];\n\n\tvar name = id;\n\tif (typeof id == \"object\"){\n\t\tif (id._settings)\n\t\t\treturn id;\n\t\tname = id.target||id;\n\t}\n\treturn views[locate({ target:toNode(name)},/*@attr*/\"view_id\")];\n}\nif (typeof window.$$ === \"undefined\") window.$$ = $$;\n\t\n\t\n\nlet protoUI = function(){\n\tvar origins = arguments;\n\tvar selfname = origins[0].name;\n\t\n\tvar t = function(data){\n\t\tif (!t)\n\t\t\treturn ui[selfname].prototype;\n\n\t\tvar origins = t.$protoWait;\n\t\tif (origins){\n\t\t\tvar params = [origins[0]];\n\t\t\t\n\t\t\tfor (let i=1; i < origins.length; i++){\n\t\t\t\tparams[i] = origins[i];\n\n\t\t\t\tif (params[i].$protoWait)\n\t\t\t\t\tparams[i] = params[i].call(-1, params[i].name);\n\n\t\t\t\tif (params[i].prototype && params[i].prototype.name)\n\t\t\t\t\tui[params[i].prototype.name] = params[i];\n\t\t\t}\n\t\t\tui[selfname] = proto.apply(-1, params);\n\n\t\t\tif (t._webix_type_wait)\t\n\t\t\t\tfor (let i=0; i < t._webix_type_wait.length; i++)\n\t\t\t\t\ttype(ui[selfname], t._webix_type_wait[i]);\n\t\t\t\t\n\t\t\tt = origins = null;\t\n\t\t}\n\t\t\t\n\t\tif (this != -1)\n\t\t\treturn new ui[selfname](data);\n\t\telse \n\t\t\treturn ui[selfname];\n\t};\n\tt.$protoWait = Array.prototype.slice.call(arguments, 0);\n\treturn (ui[selfname]=t);\n};\n\nlet proto = function(){\n\tvar origins = arguments;\n\tvar compilation = origins[0];\n\tvar has_constructor = !!compilation.$init;\n\tvar construct = [];\n\t\n\tassert(compilation,\"Invalid mixing target\");\n\t\t\n\tfor (var i=origins.length-1; i>0; i--) {\n\t\tassert(origins[i],\"Invalid mixing source\");\n\t\tif (typeof origins[i]== \"function\")\n\t\t\torigins[i]=origins[i].prototype;\n\t\tif (origins[i].$init) \n\t\t\tconstruct.push(origins[i].$init);\n\t\tif (origins[i].defaults){ \n\t\t\tvar defaults = origins[i].defaults;\n\t\t\tif (!compilation.defaults)\n\t\t\t\tcompilation.defaults = {};\n\t\t\tfor (let def in defaults)\n\t\t\t\tif (isUndefined(compilation.defaults[def]))\n\t\t\t\t\tcompilation.defaults[def] = defaults[def];\n\t\t}\n\t\tif (origins[i].type && compilation.type){\n\t\t\tfor (let def in origins[i].type)\n\t\t\t\tif (!compilation.type[def])\n\t\t\t\t\tcompilation.type[def] = origins[i].type[def];\n\t\t}\n\t\t\t\n\t\tfor (var key in origins[i]){\n\t\t\tif (!compilation[key] && compilation[key] !== false)\n\t\t\t\tcompilation[key] = origins[i][key];\n\t\t}\n\t}\n\t\n\tif (has_constructor)\n\t\tconstruct.push(compilation.$init);\n\t\n\t\n\tcompilation.$init = function(){\n\t\tfor (var i=0; i<construct.length; i++)\n\t\t\tconstruct[i].apply(this, arguments);\n\t};\n\tif (compilation.$skin)\n\t\tcompilation.$skin();\n\n\tvar result = function(config){\n\t\tthis.$ready=[];\n\t\tassert(this.$init,\"object without init method\");\n\t\tthis.$init(config);\n\t\tif (this._parseSettings)\n\t\t\tthis._parseSettings(config, this.defaults);\n\t\tfor (var i=0; i < this.$ready.length; i++)\n\t\t\tthis.$ready[i].call(this);\n\t};\n\tresult.prototype = compilation;\n\t\n\tcompilation = origins = null;\n\treturn result;\n};\n\nattachEvent(\"onClick\", function(e){\n\tvar element = $$(e);\n\tif (element && element.touchable){\n\t\tuse(\"UIManager\").applyChanges(element);\n\n\t\t//for inline elements - restore pointer to the master element\n\t\telement.getNode(e);\n\t\t//reaction on custom css elements in buttons\n\t\tvar trg=e.target;\n\t\tif (element.config.disabled)\n\t\t\treturn;\n\n\t\tvar css = \"\";\n\t\tif (trg.className && trg.className.toString().indexOf(\"webix_view\")===0) return;\n\n\t\tif (element)\n\t\t\tuse(\"UIManager\")._focus_action(element);\n\n\t\t//loop through all parents\n\t\twhile (trg && trg.parentNode){\n\t\t\tif (trg.getAttribute){\n\t\t\t\tif (trg.getAttribute(/*@attr*/\"view_id\"))\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\tcss=trg.className;\n\t\t\t\tif (css){\n\t\t\t\t\tcss = css.toString().split(\" \");\n\t\t\t\t\tfor (var i =0; i<css.length; i++){\n\t\t\t\t\t\tif (element.on_click[css[i]]){\n\t\t\t\t\t\t\tvar res =  element.on_click[css[i]].call(element,e,element._settings.id,trg);\n\t\t\t\t\t\t\tif (res===false)\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttrg=trg.parentNode;\n\t\t}\n\n\n\t\tif (element._settings.click){\n\t\t\tvar code = toFunctor(element._settings.click, element.$scope);\n\t\t\tif (code && code.call) code.call(element, element._settings.id, e);\n\t\t}\n\n\t\tlet popup = element._settings.popup;\n\t\tif (popup && !element._settings.readonly && !e.longtouch_drag){\n\t\t\tif (typeof popup == \"object\" && !popup.name){\n\t\t\t\tpopup = element._settings.popup = ui(popup)._settings.id;\n\t\t\t\telement._destroy_with_me.push($$(popup));\n\t\t\t}\n\n\t\t\tpopup = $$(popup);\n\t\t\tassert(popup, \"Unknown popup\");\n\n\t\t\tif (!popup.isVisible()){\n\t\t\t\tpopup._settings.master = element._settings.id;\n\t\t\t\tpopup.show((element.getInputNode()||element.getNode()),null,true);\n\t\t\t}\n\t\t}\n\n\t\telement.callEvent(\"onItemClick\", [element._settings.id, e]);\n\t}\n});\n\n\n//hook for documentation generator\nif (DEBUG){\n\tif (window.webix_on_core_ready){\n\t\tvar mod = window.webix_on_core_ready({ proto, protoUI});\n\t\tproto = mod.proto;\n\t\tprotoUI = mod.protoUI;\n\t}\n}\n\nexport { ui, proto, protoUI, $$ };","import i18n from \"../webix/i18n\";\nimport rules from \"../webix/rules\";\nimport template from \"../webix/template\";\n\nimport {toNode, isUndefined} from \"../webix/helpers\";\nimport { event } from \"../webix/htmlevents\";\nimport {define} from \"../services\";\nimport Promise from \"../thirdparty/promiz\";\nimport {_uid} from \"../ui/helpers\";\nimport {create, addCss, removeCss, preventEvent} from \"../webix/html\";\n\nfunction callback(config, result){\n\t// prompt\n\tif (config.type.indexOf(\"prompt\") != -1){\n\t\tif (result === false){\n\t\t\tconfig._promise.reject();\n\t\t} else {\n\t\t\tconst inputBox = config._box.querySelector(\".webix_popup_input\");\n\t\t\tconst input = inputBox.querySelector(\"input\");\n\t\t\tif (config.input.required && !input.value){\n\t\t\t\tconfig.input.invalid = true;\n\t\t\t\taddCss(inputBox, \"webix_popup_invalid\");\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tresult = input.value || \"\";\n\t\t\t\tconfig._promise.resolve(result);\n\t\t\t}\n\t\t}\t\n\t}\n\n\t(config.type.indexOf(\"confirm\") != -1 && result === false) ? config._promise.reject() : config._promise.resolve(result);\n\n\tconst usercall = config.callback;\n\tif (usercall)\n\t\tusercall(result, config.details);\n\n\tmodalbox.hide(config.id);\n}\nfunction modal_key(e){\n\tconst order = modalbox.order;\n\tconst count = order.length;\n\tconst source = e.target;\n\n\tif (count > 0 && message.keyboard){\n\t\tconst code = e.which || e.keyCode;\n\t\tif(code != 13 && code != 32 && code != 27)\n\t\t\treturn;\n\n\t\tlet activeBox;\n\n\t\tfor(let i = count - 1; i >= 0; i--){\n\t\t\tconst box = modalbox.pull[ order[i] ];\n\n\t\t\tif(box._box != source && box._box.contains(source) && code == 32) // ignore space inside input\n\t\t\t\treturn;\n\n\t\t\tif(box.container && box.container.contains(source)){\n\t\t\t\tactiveBox = box;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif(!activeBox)\n\t\t\tactiveBox = modalbox.pull[ order[order.length-1] ];\n\n\t\tif (code == 13 || code == 32)\n\t\t\tcallback(activeBox, true);\n\t\telse if (code == 27)\n\t\t\tcallback(activeBox, false);\n\n\t\tpreventEvent(e);\n\t\treturn !(e.cancelBubble = true);\n\t}\n}\n\nevent(document, \"keydown\", modal_key, { capture: true });\n\t\nfunction modality(mode, container){\n\tvar node = container || document.body;\n\tvar cover;\n\tif(isUndefined(node.modality)){\n\t\tcover = create(\"DIV\", {\n\t\t\t\"class\":\"webix_modal_cover\",\n\t\t\tstyle:\"position:\"+(container ? \"absolute\" : \"fixed\")+\";\"\n\t\t});\n\t\tcover.onkeydown = modal_key;\n\n\t\tif(container){\n\t\t\tvar position = window.getComputedStyle(container).position;\n\t\t\tif(position != \"fixed\" && position != \"absolute\" && position != \"sticky\" && position != \"relative\")\n\t\t\t\tnode.style.position = \"relative\";\n\t\t}\n\t\tnode.appendChild(cover);\n\t\tnode.modality = 1;\n\t}\n\telse\n\t\tmode ? node.modality ++ : node.modality --;\n\n\t//trigger visibility only if necessary\n\tif((mode && node.modality === 1) || node.modality === 0){\n\t\tcover = cover || Array.prototype.slice.call(node.querySelectorAll(\".webix_modal_cover\")).filter(el => el.parentNode == node)[0];\n\n\t\tif(cover){\n\t\t\tif(!node.modality){\n\t\t\t\tcover.style.display = \"none\";\n\t\t\t\tremoveCss(node, \"webix_modalbox_inside\");\n\t\t\t}\n\t\t\telse if(node.modality == 1){\n\t\t\t\tcover.style.display = \"inline-block\";\n\t\t\t\taddCss(node, \"webix_modalbox_inside\");\n\t\t\t}\n\t\t}\n\t}\n\treturn cover;\n}\n\nfunction button(text, result, className){\n\treturn \"<div role='button' tabindex='0' aria-label='\"+text+\"' class='webix_popup_button\"+(className?(\" \"+className):\"\")+\"' result='\"+result+\"' ><div>\"+text+\"</div></div>\";\n}\n\nfunction input(config){\n\treturn \"<div tabindex='0' class='webix_popup_input webix_el_text\"+(config.required?\" webix_required\":\"\")+\"'><input value='\"+template.escape(config.value || \"\")+\"' placeholder='\"+template.escape(config.placeholder || \"\")+\"'></input></div>\";\n}\n\nfunction info(text){\n\tif (!t.area){\n\t\tt.area = document.createElement(\"DIV\");\n\t\tt.area.className = \"webix_message_area\";\n\t\tt.area.style[t.position]=\"5px\";\n\t\t\n\t\tdocument.body.appendChild(t.area);\n\t}\n\tt.area.setAttribute(\"role\", \"alert\");\n\tt.area.setAttribute(\"aria-atomic\", true);\n\tt.hide(text.id);\n\tvar message = document.createElement(\"DIV\");\n\tmessage.innerHTML = \"<div>\"+text.text+\"</div>\";\n\tmessage.className = \"webix_message webix_\" + text.type;\n\tmessage.onclick = function(){\n\t\tif (text) t.hide(text.id);\n\t\ttext = null;\n\t};\n\n\tif (t.position == \"bottom\" && t.area.firstChild)\n\t\tt.area.insertBefore(message,t.area.firstChild);\n\telse\n\t\tt.area.appendChild(message);\n\t\n\tif (text.expire > 0)\n\t\tt.timers[text.id]=window.setTimeout(function(){\n\t\t\tt.hide(text.id);\n\t\t}, text.expire);\n\n\t//styling for animation\n\tmessage.style.height = message.offsetHeight-2+\"px\";\n\n\tt.pull[text.id] = message;\n\tmessage = null;\n\n\treturn text.id;\n}\nfunction _boxStructure(config, ok, cancel, hasInput){\n\tvar box = document.createElement(\"DIV\");\n\tvar css = config.css ? \" \"+config.css : \"\";\n\tbox.className = \"webix_modal_box webix_\"+config.type+css;\n\tbox.setAttribute(\"webixbox\", 1);\n\tbox.setAttribute(\"role\", \"alertdialog\");\n\tbox.setAttribute(\"aria-label\", config.title || \"\");\n\tbox.setAttribute(\"tabindex\", \"0\");\n\n\tvar inner = \"\";\n\tif (config.width)\n\t\tbox.style.width = config.width+(rules.isNumber(config.width)?\"px\":\"\");\n\tif (config.height)\n\t\tbox.style.height = config.height+(rules.isNumber(config.height)?\"px\":\"\");\n\tif (config.title)\n\t\tinner += \"<div class=\\\"webix_popup_title\\\">\"+config.title+\"</div>\";\n\tinner += \"<div class=\\\"webix_popup_text\"+(hasInput?\" webix_popup_label\":\"\")+\"\\\"><span>\"+(config.content?\"\":(config.text || \"\"))+\"</span></div>\";\n\tinner += \"<div  class=\\\"webix_popup_controls\\\">\";\n\tif (hasInput)\n\t\tinner += input(config.input);\n\tif (cancel)\n\t\tinner += button(config.cancel || i18n.message.cancel, false);\n\tif (ok)\n\t\tinner += button(config.ok || i18n.message.ok, true,\"confirm\");\n\tif (config.buttons && !ok && !cancel){\n\t\tfor (var i=0; i<config.buttons.length; i++)\n\t\t\tinner += button(config.buttons[i],i);\n\t}\n\tinner += \"</div>\";\n\tbox.innerHTML = inner;\n\n\tif (config.content){\n\t\tvar node = config.content;\n\t\tif (typeof node == \"string\") \n\t\t\tnode = document.getElementById(node);\n\t\tif (node.style.display == \"none\")\n\t\t\tnode.style.display = \"\";\n\t\tbox.childNodes[config.title?1:0].appendChild(node);\n\t}\n\n\tif (config.type.indexOf(\"prompt\") != -1){\n\t\tconst inputBox = box.querySelector(\".webix_popup_input\");\n\t\tconst input = inputBox.querySelector(\"input\");\n\t\tinput.oninput = function(){\n\t\t\tif (config.input.invalid){\n\t\t\t\tremoveCss(inputBox, \"webix_popup_invalid\");\n\t\t\t\tconfig.input.invalid = false;\n\t\t\t}\n\t\t};\n\t}\n\n\tbox.onclick = function(e){\n\t\tvar source = e.target;\n\t\tif (!source.className) source = source.parentNode;\n\t\tif (source.className.indexOf(\"webix_popup_button\")!=-1){\n\t\t\tlet result = source.getAttribute(\"result\");\n\t\t\tresult = (result == \"true\")||(result == \"false\"?false:result);\n\t\t\tcallback(config, result);\n\t\t}\n\t\te.cancelBubble = true;\n\t};\n\tconfig._box = box;\n\treturn box;\n}\n\nmodalbox.pull = {};\nmodalbox.order = [];\n\nfunction _createBox(config, ok, cancel, hasInput){\n\tconst box = config.tagName ? config : _boxStructure(config, ok, cancel, hasInput);\n\tconst container = config.container;\n\n\tconst containerWidth = container ? container.offsetWidth : (window.innerWidth||document.documentElement.offsetWidth);\n\tconst containerHeight = container ? container.offsetHeight : (window.innerHeight||document.documentElement.offsetHeight);\n\tconst containerLeft = container ? container.scrollLeft : 0;\n\tconst containerTop = container ? container.scrollTop : 0;\n\n\tif(config.container)\n\t\tbox.style.position = \"absolute\";\n\n\ttoNode((config.container || document.body).appendChild(box));\n\tconst cover = modality(true, config.container);\n\n\tconst x = config.left||Math.abs(containerLeft+Math.floor((containerWidth - box.offsetWidth)/2));\n\tconst y = config.top||Math.abs(containerTop+Math.floor((containerHeight - box.offsetHeight)/2));\n\tif (config.position == \"top\")\n\t\tbox.style.top = \"-3px\";\n\telse{\n\t\tbox.style.top = y+\"px\";\n\t\tif(cover){\n\t\t\tcover.style.top = containerTop+\"px\";\n\t\t\tcover.style.left = containerLeft+\"px\";\n\t\t}\n\t}\n\tbox.style.left = x+\"px\";\n\t//necessary for IE only\n\tbox.onkeydown = modal_key;\n\n\tif(hasInput)\n\t\tbox.querySelector(\".webix_popup_input input\").focus();\n\telse\n\t\tbox.focus();\n\n\tif (!config.id)\n\t\tconfig.id = _uid(\"modalbox\");\n\telse if(modalbox.pull[config.id]){\n\t\tmodalbox.hide(config.id);\n\t}\n\n\tmodalbox.order.push(config.id);\n\tmodalbox.pull[config.id] = config;\n\n\tconfig._promise = Promise.defer();\n\treturn config._promise;\n}\n\nfunction alertPopup(config){\n\treturn _createBox(config, true);\n}\nfunction confirmPopup(config){\n\treturn _createBox(config, true, true);\n}\nfunction boxPopup(config){\n\treturn _createBox(config);\n}\nfunction promptPopup(config){\n\treturn _createBox(config, true, true, true);\n}\nfunction box_params(text, type, callback){\n\tif (typeof text != \"object\"){\n\t\tif (typeof type == \"function\"){\n\t\t\tcallback = type;\n\t\t\ttype = \"\";\n\t\t}\n\t\ttext = {text:text, type:type, callback:callback };\n\t}\n\treturn text;\n}\nfunction params(text, type, expire, id){\n\tif (typeof text != \"object\")\n\t\ttext = {text:text, type:type, expire:expire, id:id};\n\ttext.id = text.id||_uid(\"message\");\n\ttext.expire = text.expire||t.expire;\n\treturn text;\n}\nexport function alert(){\n\tvar text = box_params.apply(this, arguments);\n\ttext.type = text.type || \"alert\";\n\treturn alertPopup(text);\n}\nexport function confirm(){\n\tvar text = box_params.apply(this, arguments);\n\ttext.type = text.type || \"confirm\";\n\treturn confirmPopup(text);\n}\n\nexport function modalbox(){\n\tvar text = box_params.apply(this, arguments);\n\ttext.type = text.type || \"alert\";\n\treturn boxPopup(text);\n}\n\nexport function prompt(){\n\tvar text = box_params.apply(this, arguments);\n\ttext.type = text.type || \"prompt\";\n\ttext.input = text.input || {};\n\treturn promptPopup(text);\n}\n\nmodalbox.hide = function(id){\n\tif(id && modalbox.pull[id]){\n\t\tvar node = modalbox.pull[id]._box;\n\t\tif(node){\n\t\t\tnode.parentNode.removeChild(node);\n\t\t\tmodalbox.order.splice(modalbox.order.indexOf(id), 1);\n\t\t\tmodality(false, modalbox.pull[id].container);\n\t\t\tdelete modalbox.pull[id];\n\t\t}\n\t}\n};\n\nmodalbox.hideAll = function(){\n\tfor (var id in modalbox.pull){\n\t\tthis.hide(id);\n\t}\n};\n\nexport function message(text, type, expire, id){ //eslint-disable-line\n\ttext = params.apply(this, arguments);\n\ttext.type = text.type||\"info\";\n\n\tvar subtype = text.type.split(\"-\")[0];\n\tswitch (subtype){\n\t\tcase \"alert\":\n\t\t\treturn alertPopup(text);\n\t\tcase \"confirm\":\n\t\t\treturn confirmPopup(text);\n\t\tcase \"modalbox\":\n\t\t\treturn boxPopup(text);\n\t\tcase \"prompt\":\n\t\t\treturn promptPopup(text);\n\t\tdefault:\n\t\t\treturn info(text);\n\t}\n}\n\nvar t = message;\nt.expire = 4000;\nt.keyboard = true;\nt.position = \"top\";\nt.pull = {};\nt.timers = {};\n\nt.hideAll = function(){\n\tfor (var key in t.pull)\n\t\tt.hide(key);\n};\nt.hide = function(id){\n\tvar obj = t.pull[id];\n\tif (obj && obj.parentNode){\n\t\twindow.setTimeout(function(){\n\t\t\tobj.parentNode.removeChild(obj);\n\t\t\tobj = null;\n\t\t},2000);\n\t\t//styling for animation\n\t\tobj.style.height = 0;\n\t\tobj.className+=\" hidden\";\n\t\tt.area.removeAttribute(\"role\");\n\t\t\n\t\tif(t.timers[id])\n\t\t\twindow.clearTimeout(t.timers[id]);\n\t\tdelete t.pull[id];\n\t}\n};\n\n//override circualr dependencies\ndefine(\"message\", message);\nexport default modalbox;","import ready from \"../webix/ready\";\n\nimport {assert} from \"../webix/debug\";\nimport {event} from \"../webix/htmlevents\";\nimport {delay,uid,_power_array,isUndefined,isArray} from \"../webix/helpers\";\nimport {callEvent} from \"../webix/customevents\";\nimport {locate,preventEvent} from \"../webix/html\";\nimport {modalbox} from \"../webix/message\";\nimport fullscreen from \"../webix/fullscreen\";\n\nimport {$$} from \"../ui/core\";\nimport state from \"../core/state\";\n\nimport {define} from \"../services\";\n\n\nconst UIManager = {\n\t_view: null,\n\t_hotkeys: {},\n\t_focus_time:0,\n\t_controls: {\n\t\t\"esc\": \"escape\",\n\t\t\"up\": \"arrowup\",\n\t\t\"down\": \"arrowdown\",\n\t\t\"left\": \"arrowleft\",\n\t\t\"right\": \"arrowright\",\n\t\t\"pgdown\": \"pagedown\",\n\t\t\"pgup\": \"pageup\",\n\t\t\"space\": \" \",\n\t\t\"multiply\": \"*\",\n\t\t\"add\": \"+\",\n\t\t\"subtract\": \"-\",\n\t\t\"decimal\": \".\",\n\t\t\"divide\": \"/\",\n\t\t\"pausebreak\":\"pause\",\n\t\t\"5numlocked\":\"clear\"\n\t},\n\t_inputs:{\n\t\t\"input\": 1,\n\t\t\"button\":1,\n\t\t\"textarea\":1,\n\t\t\"select\":1\n\t},\n\t_enable: function() {\n\t\t// attaching events here\n\t\tevent(document, \"keydown\", this._keypress, { bind:this });\n\t\tevent(document, \"compositionstart\", ()=> this._startComposition());\n\t\tevent(document, \"compositionend\", ()=> this._endComposition());\n\t\tevent(document.body, \"click\", this._focus_click, { capture:true, bind:this });\n\t\tevent(document.body, \"focus\", this._focus_tab, { capture:true, bind:this });\n\n\t\tstate.destructors.push({obj:this});\n\t},\n\t_startComposition: function(){\n\t\tclearTimeout(this._composition);\n\t\tthis._composition = true;\n\t},\n\t_endComposition: function(){\n\t\t//in some browsers compositionEnd fires before the keyDown event\n\t\tthis._composition = delay(() => delete this._composition);\n\t},\n\tdestructor: function(){\n\t\tUIManager._view = null;\n\t},\n\tgetFocus: function() {\n\t\treturn this._view;\n\t},\n\t_focus_action:function(view){\n\t\tthis._focus_was_there = this._focus_was_there || view._settings.id;\n\t},\n\tsetFocus: function(view, only_api, tab){\n\t\t//view can be empty\n\t\tview = $$(view);\n\t\t//unfocus if view is hidden\n\t\tif (view && !view.$view) view = null;\n\n\t\t//store last click time, it is necessary to prevent refocusing\n\t\t//for example when user moves focus from onclick handler somewher\n\t\t//and we want to prevent autofocusing, when event will reach document.body\n\t\tthis._focus_time = state._focus_time = new Date();\n\n\t\tif (this._view === view) return true;\n\t\tif (this._view && this._view.callEvent)\n\t\t\tthis._view.callEvent(\"onBlur\", [this._view]);\n\n\t\tif (view && view.callEvent){\n\t\t\tview.callEvent(\"onFocus\", [view, this._view]);\n\t\t\tif(tab) view.callEvent(\"onTabFocus\", [view, this._view]);\n\t\t}\n\t\tcallEvent(\"onFocusChange\", [view, this._view]);\n\n\t\tif (this._view && this._view.blur && !only_api) this._view.blur();\n\t\tthis._view = view;\n\t\tif (view && view.focus && !only_api) view.focus();\n\t\treturn true;\n\t},\n\tapplyChanges: function(element){\n\t\tvar view = this.getFocus();\n\t\tif (view && view != element && view._applyChanges)\n\t\t\tview._applyChanges(element);\n\t},\n\thasFocus: function(view) {\n\t\treturn (view === this._view) ? true : false;\n\t},\n\t_focus: function(e){\n\t\tfor(let i = 0; i < modalbox.order.length; i++){\n\t\t\tif(modalbox.pull[ modalbox.order[i] ]._box.contains(e.target))\n\t\t\t\treturn;\n\t\t}\n\n\t\tvar view = locate(e, /*@attr*/\"view_id\") || this._focus_was_there;\n\n\t\t//if html was repainted we can miss the view, so checking last processed one\n\t\tview = $$(view);\n\t\tthis._focus_was_there = null;\n\n\t\t//set timer, to fix issue with Android input focusin\n\t\tstate._focus_time = new Date();\n\n\t\tif (view == this._view) return true;\n\n\t\tif (view){\n\t\t\tif (this.canFocus(view)){\n\t\t\t\t// keep form focus\n\t\t\t\tif (this._view && this._view.getFormView() == view && this._view.focus)\n\t\t\t\t\tthis._view.focus();\n\t\t\t\telse{\n\t\t\t\t\t//radio view with scroll: focus changes onClick event target into radiogroup, so we need call onClick before it happens\n\t\t\t\t\tif(e.target.type == \"radio\" || e.target.getAttribute(\"role\") == \"radio\")\n\t\t\t\t\t\tcallEvent(\"onClick\", [e]);\n\n\t\t\t\t\tthis.setFocus(view);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//remove focus from an unreachable view\n\t\t\telse if (view.$view.contains(e.target))\n\t\t\t\te.target.blur();\n\t\t}\n\t\telse this.setFocus(null);\n\n\t\treturn true;\n\t},\n\t_focus_click:function(e){\n\t\t// if it was onfocus/onclick less then 100ms behore then we ignore it\n\t\tif ((new Date())-this._focus_time < 100) {\n\t\t\tthis._focus_was_there = null;\n\t\t\treturn false;\n\t\t}\n\t\treturn this._focus(e);\n\t},\n\t_focus_tab: function(e){\n\t\tif(!this._inputs[e.target.nodeName.toLowerCase()])\n\t\t\treturn false;\n\t\treturn this._focus(e);\n\t},\n\t_top_modal: function(view){\n\t\tconst modality = state._modality;\n\t\tif (!modality.length) return true;\n\n\t\tconst top = this._getTop(view);\n\t\treturn (top.$view.style.zIndex||0) >= Math.max(...modality);\n\t},\n\t_getTop: function(view){\n\t\tlet top = view.queryView(view => !view.getParentView(), \"parent\") || view;\n\n\t\tconst insideContainer = $$(top.$view.parentNode); //container inside view (like filter in query view list)\n\t\tif(insideContainer)\n\t\t\ttop = this._getTop(insideContainer);\n\n\t\treturn top;\n\t},\n\tcanFocus:function(view){\n\t\tif(document.body.modality || view.$view.modality || view.queryView(view => view.$view.modality, \"parent\")) //modalbox\n\t\t\treturn false;\n\t\treturn view.isVisible() && view.isEnabled() && !view.config.disabled && this._top_modal(view) && !view.queryView({disabled:true}, \"parent\");\n\t},\n\n\t_moveChildFocus: function(check_view){\n\t\tvar focus = this.getFocus();\n\t\t//we have not focus inside of closing item\n\t\tif (check_view && !this._is_child_of(check_view, focus))\n\t\t\treturn false;\n\n\t\tif (!this._focus_logic(\"getPrev\", check_view))\n\t\t\tthis._view = null;\n\t},\n\t_is_child_of: function(parent, child) {\n\t\tif (!parent) return false;\n\t\tif (!child) return false;\n\t\twhile (child) {\n\t\t\tif (child === parent) return true;\n\t\t\tchild = child.getParentView();\n\t\t}\n\t\treturn false;\n\t},\n\t_keypress_timed:function(){\n\t\tif (this && this.callEvent)\n\t\t\tthis.callEvent(\"onTimedKeyPress\",[]);\n\t},\n\t_keypress: function(e) {\n\t\tlet code = e.which || e.keyCode;\n\n\t\t// processing or not found\n\t\tif (code == 229 || code == 0) return;\n\n\t\t// numpad keys\n\t\tif (code > 95 && code < 106) code -= 48;\n\n\t\tconst view = this.getFocus();\n\t\tif (view && view.callEvent) {\n\t\t\tif (view.callEvent(\"onKeyPress\", [code, e]) === false)\n\t\t\t\tpreventEvent(e);\n\t\t\tif (view.hasEvent(\"onTimedKeyPress\")){\n\t\t\t\tclearTimeout(view._key_press_timeout);\n\t\t\t\tview._key_press_timeout = delay(this._keypress_timed, view, [], (view._settings.keyPressTimeout||250));\n\t\t\t}\n\t\t}\n\n\t\tif (this._check_keycode(e) === false) {\n\t\t\tpreventEvent(e);\n\t\t\treturn false;\n\t\t}\n\t},\n\n\t// dir - getNext or getPrev\n\t_focus_logic: function(dir, focus) {\n\t\tvar next = focus||this.getFocus();\n\t\tif(next){\n\t\t\tdir = dir || \"getNext\";\n\t\t\tvar start = next;\n\t\t\tvar marker = uid();\n\n\t\t\twhile (true) { // eslint-disable-line\n\t\t\t\tnext = this[dir](next);\n\t\t\t\t// view with focus ability\n\t\t\t\tif (next && this.canFocus(next))\n\t\t\t\t\treturn this.setFocus(next);\n\n\t\t\t\t// elements with focus ability not found\n\t\t\t\tif (next === start || next.$fmarker == marker){\n\t\t\t\t\tif(focus)\n\t\t\t\t\t\tdocument.activeElement.blur();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t//prevents infinity loop\n\t\t\t\tnext.$fmarker = marker;\n\t\t\t}\n\t\t}\n\t},\n\t_tab_logic:function(view, e){\n\t\tvar mode = !e.shiftKey;\n\t\tif (view && view._custom_tab_handler && !view._custom_tab_handler(mode, e))\n\t\t\treturn false;\n\n\t\tif (view && view._in_edit_mode){\n\t\t\tif (view.editNext)\n\t\t\t\treturn view.editNext(mode);\n\t\t\telse if (view.editStop){\n\t\t\t\tview.editStop();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else\n\t\t\tdelay(function(){\n\t\t\t\tview = $$(document.activeElement);\n\t\t\t\tif(view && !UIManager.canFocus(view))\n\t\t\t\t\treturn UIManager._focus_logic(mode ? \"getNext\" : \"getPrev\", view);\n\t\t\t\tUIManager.setFocus(view, true, true);\n\t\t\t});\n\t},\n\tgetTop: function(id) {\n\t\tvar next, view = $$(id);\n\n\t\twhile (view && (next = view.getParentView()))\n\t\t\tview = next;\n\t\treturn view;\n\t},\n\n\tgetNext: function(view, _inner_call) {\n\t\tvar cells = view.getChildViews();\n\t\t//tab to first children\n\t\tif (cells.length && !_inner_call)\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t\tif(this.canFocus(cells[i]))\n\t\t\t\t\treturn cells[i];\n\n\t\t//unique case - single view without child and parent\n\t\tvar parent = view.getParentView();\n\t\tif (!parent)\n\t\t\treturn view;\n\n\t\tvar p_cells = parent.getChildViews();\n\t\tif (p_cells.length){\n\t\t\tvar index = _power_array.find.call(p_cells, view)+1;\n\t\t\twhile (index < p_cells.length) {\n\t\t\t\t//next visible child\n\t\t\t\tif (this.canFocus(p_cells[index])) \n\t\t\t\t\treturn p_cells[index];\n\n\t\t\t\tindex++;\n\t\t\t}\n\t\t} \n\n\t\t//sibling of parent\n\t\treturn this.getNext(parent, true);\n\t},\n\n\tgetPrev: function(view, _inner_call) {\n\t\tvar cells = view.getChildViews();\n\t\t//last child of last child\n\t\tif (cells.length && _inner_call)\n\t\t\tfor (var i = cells.length - 1; i >= 0; i--)\n\t\t\t\tif(this.canFocus(cells[i]))\n\t\t\t\t\treturn this.getPrev(cells[i], true);\n\n\t\tif (_inner_call && this.canFocus(view)) return view;\n\n\t\t//fallback from top to bottom\n\t\tvar parent = view.getParentView();\n\t\tif (!parent)\n\t\t\treturn this.canFocus(view) ? this.getPrev(view, true) : view;\n\n\t\tvar p_cells = parent.getChildViews();\n\t\tif (p_cells) {\n\t\t\tvar index = _power_array.find.call(p_cells, view)-1;\n\t\t\twhile (index >= 0) {\n\t\t\t\tif (this.canFocus(p_cells[index]))\n\t\t\t\t\treturn this.getPrev(p_cells[index], true);\n\t\t\t\tindex--;\n\t\t\t}\n\t\t}\n\n\t\treturn this.getPrev(parent, true);\n\t},\n\taddHotKey: function(keys, handler, view) {\n\t\tassert(handler, \"Hot key handler is not defined\");\n\t\tconst code = this._parse_keys(keys);\n\n\t\tif (!view) view = null;\n\t\tif (!this._hotkeys[code]) this._hotkeys[code] = [];\n\t\tthis._hotkeys[code].push({ handler, view });\n\n\t\treturn keys;\n\t},\n\tremoveHotKey: function(keys, func, view){\n\t\tconst code = this._parse_keys(keys);\n\t\tif (!func && !view)\n\t\t\tdelete this._hotkeys[code];\n\t\telse {\n\t\t\tvar t = this._hotkeys[code];\n\t\t\tif (t){\n\t\t\t\tfor (var i = t.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (view && t[i].view !== view) continue;\n\t\t\t\t\tif (func && t[i].handler !== func) continue;\n\t\t\t\t\tt.splice(i,1);\n\t\t\t\t}\n\t\t\t\tif (!t.length)\n\t\t\t\t\tdelete this._hotkeys[code];\n\t\t\t}\n\n\t\t}\n\t},\n\t_keycode: function(key, ctrl, shift, alt, meta) {\n\t\t//key can be undefined (browser autofill)\n\t\treturn (key||\"\").toLowerCase()+\"_\"+[\"\", (ctrl ? \"1\" : \"0\"), (shift ? \"1\" : \"0\"), (alt ? \"1\" : \"0\"), (meta ? \"1\" : \"0\")].join(\"\");\n\t},\n\t_check_keycode: function(e){\n\t\tconst keyCode = e.which || e.keyCode;\n\t\tconst is_any = !e.ctrlKey && !e.altKey && !e.metaKey && (keyCode!=9)&&(keyCode!=27)&&(keyCode!=13);\n\t\tconst code = this._keycode(e.key, e.ctrlKey, e.shiftKey, e.altKey, e.metaKey);\n\n\t\tvar focus = this.getFocus();\n\t\tif (this._hotkeys[code])\n\t\t\treturn  this._process_calls(this._hotkeys[code], focus, e);\n\t\telse if (is_any && this._hotkeys[\"any_0000\"])\n\t\t\treturn  this._process_calls(this._hotkeys[\"any_0000\"], focus, e);\n\n\t\treturn true;\n\t},\n\t_process_calls:function(calls, focus, e){\n\t\tfor (var i = 0; i < calls.length; i++) {\n\t\t\tvar key = calls[i];\n\t\t\tif ((key.view !== null) &&\t\t//common hot-key\n\t\t\t\t(focus !== key.view) &&\t\t//hot-key for current view\n\t\t\t\t//hotkey for current type of view\n\t\t\t\t(typeof(key.view) !== \"string\" || !focus || focus.name !== key.view)) continue;\n\n\t\t\tvar temp_result = key.handler(focus, e);\n\t\t\tif (!!temp_result === temp_result) return temp_result;\n\t\t}\n\t\treturn true;\n\t},\n\t_parse_keys: function(keys) {\n\t\tvar controls = this._controls;\n\t\tvar parts = keys.toLowerCase().split(/[ +\\-_]/);\n\t\tvar ctrl, shift, alt, meta;\n\t\tctrl = shift = alt = meta = 0;\n\t\tvar letter = \"\";\n\t\tfor (var i = 0; i < parts.length; i++) {\n\t\t\tif (parts[i] === \"ctrl\") ctrl = 1;\n\t\t\telse if (parts[i] === \"shift\") shift = 1;\n\t\t\telse if (parts[i] === \"alt\") alt = 1;\n\t\t\telse if (parts[i] === \"command\") meta = 1;\n\t\t\telse {\n\t\t\t\tletter = controls[parts[i]] || parts[i];\n\t\t\t}\n\t\t}\n\n\t\treturn this._keycode(letter, ctrl, shift, alt, meta);\n\t},\n\tgetState:function(node, children) {\n\t\tchildren = (children||false);\n\t\tnode = $$(node);\n\t\tvar state = {\n\t\t\tid: node.config.id,\n\t\t\twidth: node.config.width,\n\t\t\theight: node.config.height,\n\t\t\tgravity: node.config.gravity\n\t\t};\n\t\tif (!isUndefined(node.config.collapsed)) state.collapsed = node.config.collapsed;\n\t\tif (node.name === \"tabs\" || node.name === \"tabbar\") state.activeCell = node.getValue();\n\t\t\n\t\tif (children) {\n\t\t\tstate = [state];\n\t\t\tif (node._cells) {\n\t\t\t\tfor (var i = 0; i < node._cells.length; i++)\n\t\t\t\t\tstate = state.concat(this.getState(node._cells[i], children));\n\t\t\t}\n\t\t}\n\t\treturn state;\n\t},\n\tsetState:function(states) {\n\t\tif (!isArray(states)) states = [states];\n\t\n\t\tfor (var i = 0; i < states.length; i++) {\n\t\t\tvar state = states[i];\n\t\t\tvar node = $$(state.id);\n\t\t\tif (!node) continue;\n\t\n\t\t\tif (!isUndefined(state.collapsed)) node.define(\"collapsed\", state.collapsed);\n\t\t\tif (!isUndefined(state.activeCell)) node.setValue(state.activeCell, \"auto\");\n\t\n\t\t\tnode.define(\"width\", state.width);\n\t\t\tnode.define(\"height\", state.height);\n\t\t\tnode.define(\"gravity\", state.gravity);\n\t\t}\n\t\tvar top = $$(states[0].id);\n\t\tif (top) top.resize();\n\t}\n};\n\nready(function() {\n\tUIManager._enable();\n\n\tUIManager.addHotKey(\"enter\", function(view, ev){\n\t\tif (UIManager._composition)\n\t\t\treturn false;\n\t\tif (view && view.callEvent)\n\t\t\tview.callEvent(\"onEnter\", [ev]);\n\t\tif (view && view.editStop && view._in_edit_mode){\n\t\t\tview.editStop();\n\t\t\treturn true;\n\t\t} else if (view && view.touchable){\n\t\t\tvar form = view.getFormView();\n\t\t\tif (form && !view._skipSubmit)\n\t\t\t\tform.callEvent(\"onSubmit\",[view,ev]);\n\t\t}\n\t});\n\tUIManager.addHotKey(\"esc\", function(view){\n\t\tif (view){\n\t\t\tif (view.editCancel && view._in_edit_mode){\n\t\t\t\tview.editCancel();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvar top = view.getTopParentView();\n\t\t\tif (top && top.setPosition){\n\t\t\t\tif(fullscreen._fullscreen == top)\n\t\t\t\t\tfullscreen.exit();\n\t\t\t\tif(top._editorMaster ){\n\t\t\t\t\tconst master = $$(top._editorMaster);\n\t\t\t\t\tif (master.editCancel && master._in_edit_mode)\n\t\t\t\t\t\tmaster.editCancel();\n\t\t\t\t}\n\t\t\t\ttop._hide();\n\t\t\t}\n\t\t}\n\t});\n\tUIManager.addHotKey(\"shift+tab\", UIManager._tab_logic);\n\tUIManager.addHotKey(\"tab\", UIManager._tab_logic);\n});\n\ndefine(\"UIManager\", UIManager);\n\nexport default UIManager;","import {bind} from \"../webix/helpers\";\n\nconst CollectionBind={\n\t$init:function(){\n\t\tthis._cursor = null;\n\t\tthis.attachEvent(\"onSelectChange\", function(){\n\t\t\tvar sel = this.getSelectedId();\n\t\t\tthis.setCursor(sel?(sel.id||sel):null);\n\t\t});\n\t\tthis.attachEvent(\"onAfterCursorChange\", this._update_binds);\t\t\n\t\tthis.attachEvent(\"onAfterDelete\", function(id){\n\t\t\tif (id == this.getCursor())\n\t\t\t\tthis.setCursor(null);\n\t\t});\n\t\tthis.data.attachEvent(\"onStoreUpdated\", bind(function(id, data, mode){\n\t\t\t//paint - ignored\n\t\t\t//delete - handled by onAfterDelete above\n\t\t\tif (id && id == this.getCursor() && mode != \"paint\" && mode != \"delete\")\n\t\t\t\tthis._update_binds();\n\t\t\t\n\t\t},this));\n\t\tthis.data.attachEvent(\"onClearAll\", bind(function(){\n\t\t\tthis._cursor = null;\n\t\t},this));\n\t\tthis.data.attachEvent(\"onIdChange\", bind(function(oldid, newid){\n\t\t\tif (this._cursor == oldid){\n\t\t\t\tthis._cursor = newid;\n\t\t\t\tthis._update_binds();\n\t\t\t}\n\t\t},this));\n\t},\n\trefreshCursor:function(){\n\t\tif (this._cursor)\n\t\t\tthis.callEvent(\"onAfterCursorChange\",[this._cursor]);\n\t},\n\tsetCursor:function(id){\n\t\tif (id == this._cursor || (id !== null && !this.getItem(id))) return;\n\t\t\n\t\tthis.callEvent(\"onBeforeCursorChange\", [this._cursor]);\n\t\tthis._cursor = id;\n\t\tthis.callEvent(\"onAfterCursorChange\",[id]);\n\t},\n\tgetCursor:function(){\n\t\treturn this._cursor;\n\t},\n\t_bind_update:function(target, rule, format){\n\t\tif (rule == \"$level\" && this.data.getBranch)\n\t\t\treturn (target.data || target).importData(this.data.getBranch(this.getCursor()));\n\n\t\tvar data = this.getItem(this.getCursor())|| this._settings.defaultData || null;\n\t\tif (rule == \"$data\"){\n\t\t\tif (typeof format === \"function\")\n\t\t\t\tformat.call(target, data, this);\n\t\t\telse\n\t\t\t\ttarget.data.importData(data?data[format]:[]);\n\t\t\ttarget.callEvent(\"onBindApply\", [data,rule,this]);\n\t\t} else {\n\t\t\tif (format)\n\t\t\t\tdata = format(data);\n\t\t\tthis._bind_update_common(target, rule, data);\n\t\t}\n\t}\n};\n\nexport default CollectionBind;","import {assert} from \"../webix/debug\";\nimport {debug_size_box} from \"../webix/debug\";\n\nimport {callEvent} from \"../webix/customevents\";\nimport {create, createCss, remove, addCss, removeCss, triggerEvent, preventEvent} from \"../webix/html\";\nimport {toNode, extend} from \"../webix/helpers\";\nimport env from \"../webix/env\";\n\nimport {$$,ui,protoUI} from \"../ui/core\";\nimport {_uid, _each} from \"../ui/helpers\";\n\nimport state from \"../core/state\";\nimport UIManager from \"../core/uimanager\";\n\nimport Settings from \"../core/settings\";\nimport Destruction from \"../core/destruction\";\nimport BaseBind from \"../core/basebind\";\n\nconst UIExtension = window.webix_view||{};\n\nconst api = {\n\tname:\"baseview\",\n\t//attribute , which will be used for ID storing\n\t$init:function(config){\n\t\tif (!config.id) \n\t\t\tconfig.id = _uid(this.name);\n\t\t\n\t\tthis._parent_cell = state._parent_cell;\n\t\tstate._parent_cell = null;\n\n\t\t// if scope not provided directly, and there is no parent view\n\t\t// check if we have a global scope\n\t\tthis.$scope = config.$scope || (this._parent_cell ? this._parent_cell.$scope : state._global_scope);\n\t\t\n\t\tif (!this._viewobj){\n\t\t\tthis._contentobj = this._viewobj = create(\"DIV\",{\n\t\t\t\t\"class\":\"webix_view\"\n\t\t\t});\n\t\t\tthis.$view = this._viewobj;\n\t\t}\n\t},\n\t$skin:false,\n\tdefaults:{\n\t\twidth:0,\n\t\theight:0,\n\t\tgravity:1\n\t},\n\tgetNode:function(){\n\t\treturn this._viewobj;\n\t},\n\t// needed only to maintain the deprecated ActiveContent module\n\t// do not use it anywhere else\n\t$setNode:function(node){\n\t\tthis._viewobj = this._dataobj = this.$view = node;\n\t},\n\tgetParentView:function(){\n\t\treturn this._parent_cell||null;\t\n\t},\n\tgetTopParentView:function(){\n\t\tvar parent = this.getParentView();\n\t\treturn parent ? parent.getTopParentView() :  this;\n\t},\n\tgetFormView:function(){\n\t\tvar parent = this.getParentView();\n\t\treturn (!parent || parent._recollect_elements) ? parent : parent.getFormView();\n\t},\n\tgetChildViews:function(){ return []; },\n\tqueryView:function(search, all){\n\t\tlet confirm;\n\t\tif (typeof search === \"string\")\n\t\t\tsearch = { view:search };\n\t\tif (typeof search === \"object\")\n\t\t\tconfirm = test => {\n\t\t\t\tconst config = test.config;\n\n\t\t\t\tfor (let key in search){\n\t\t\t\t\tif (config[key] != search[key])\n\t\t\t\t\t\treturn false; \n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t};\n\t\telse\n\t\t\tconfirm = search;\n\n\t\tif (all === \"self\" && confirm(this)) return this;\n\t\tconst results = all === \"all\" ? [] : false;\n\t\tconst direction = all === \"parent\" ? this._queryGoUp : this._queryGoDown;\n\n\t\tconst found = this._queryView(confirm, direction, results);\n\t\treturn all === \"all\" ? results : found;\n\t},\n\t_queryGoDown:function(node){\n\t\treturn node.getChildViews();\n\t},\n\t_queryGoUp:function(node){\n\t\tvar parent = node.getParentView();\n\t\treturn parent ? [parent] : [];\n\t},\n\t_queryView:function(confirm, next, all){\n\t\tvar kids = next(this);\n\t\tfor (var i =0; i<kids.length; i++){\n\t\t\tif (confirm(kids[i])){\n\t\t\t\tif (all)\n\t\t\t\t\tall.push(kids[i]);\n\t\t\t\telse\n\t\t\t\t\treturn kids[i];\n\t\t\t}\n\n\t\t\tvar sub = kids[i]._queryView(confirm, next, all);\n\t\t\tif (sub && !all){\n\t\t\t\treturn sub;\n\t\t\t} \n\t\t}\n\t\treturn null;\n\t},\n\tisVisible:function(base_id){\n\t\tif (this._settings.hidden){\n\t\t\tif(base_id){\n\t\t\t\tif (!this._hidden_render) {\n\t\t\t\t\tthis._hidden_render = [];\n\t\t\t\t\tthis._hidden_hash = {};\n\t\t\t\t}\n\t\t\t\tif (!this._hidden_hash[base_id]){\n\t\t\t\t\tthis._hidden_hash[base_id] =  true;\n\t\t\t\t\tthis._hidden_render.push(base_id);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tvar parent = this.getParentView();\n\t\tif (parent) return parent.isVisible(base_id, this._settings.id);\n\t\t\n\t\treturn true;\n\t},\n\tisEnabled:function(){\n\t\tif(this._disable_cover)\n\t\t\treturn false;\n\n\t\tvar parent= this.getParentView();\n\t\tif(parent)\n\t\t\treturn parent.isEnabled();\n\n\t\treturn true;\n\t},\n\t_fix_cover:function(){\n\t\tif (this._disable_cover && !this._disable_cover.parentNode)\n\t\t\tthis._viewobj.appendChild(this._disable_cover);\n\t},\n\tdisable:function(){\n\t\tremove(this._disable_cover);\n\t\tthis._settings.disabled = true;\n\t\tconst container = this._viewobj;\n\n\t\tthis._disable_cover = create(\"div\",{\n\t\t\t\"class\":\"webix_disabled\",\n\t\t\t\"style\":`left:${container.scrollLeft}px; top:${container.scrollTop}px;`\n\t\t});\n\n\t\tcontainer.appendChild(this._disable_cover);\n\t\tcontainer.setAttribute(\"aria-disabled\", \"true\");\n\t\taddCss(container,\"webix_disabled_view\",true);\n\t\tUIManager._moveChildFocus(this);\n\t},\n\tenable:function(){\n\t\tthis._settings.disabled = false;\n\n\t\tif (this._disable_cover){\n\t\t\tremove(this._disable_cover);\n\t\t\tremoveCss(this._viewobj,\"webix_disabled_view\");\n\t\t\tthis._viewobj.removeAttribute(\"aria-disabled\");\n\t\t\tthis._disable_cover = null;\n\t\t}\n\t},\n\tdisabled_setter:function(value){\n\t\tif (value)\n\t\t\tthis.disable();\n\t\telse\n\t\t\tthis.enable();\n\t\treturn value;\n\t},\n\tcontainer_setter:function(value){\n\t\tassert(toNode(value),\"Invalid container\");\n\t\treturn true;\n\t},\n\tcss_setter:function(value){\n\t\tif (typeof value == \"object\")\n\t\t\tvalue = createCss(value);\n\n\t\tthis._viewobj.className += \" \"+value;\n\t\treturn value;\n\t},\n\tid_setter:function(value){\n\t\tif (state._global_collection && (state._global_collection != this || this._prev_global_col)){\n\t\t\tvar oldvalue = this.config.$id = value;\n\t\t\t(this._prev_global_col || state._global_collection)._elements[value] = this;\n\t\t\tvalue = _uid(this.name);\n\t\t\t(this._prev_global_col || state._global_collection)._translate_ids[value]=oldvalue;\n\t\t}\n\t\tassert(!ui.views[value], \"Non unique view id: \"+value);\n\t\tui.views[value] = this;\n\t\tthis._viewobj.setAttribute(/*@attr*/\"view_id\", value);\n\t\treturn value;\n\t},\n\t$setSize:function(x,y){\n\t\tvar last = this._last_size;\n\t\tif (last && last[0]==x && last[1]==y) {\n\t\t\tif (DEBUG) debug_size_box(this, [x,y,\"not changed\"]);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (DEBUG) debug_size_box(this, [x,y]);\n\t\t\n\t\tthis._last_size = [x,y];\n\t\tthis.$width  = this._content_width = x-(this._scroll_y?env.scrollSize:0);\n\t\tthis.$height = this._content_height = y-(this._scroll_x?env.scrollSize:0);\n\n\t\tvar config = this._settings;\n\t\tif (!config.flex){\n\t\t\tthis._viewobj.style.width = x+\"px\";\n\t\t\tthis._viewobj.style.height = y+\"px\";\n\t\t}\n\n\t\treturn true;\n\t},\n\t$getSize:function(dx, dy){\n\t\tvar s = this._settings;\n\n\t\tvar size = [\n\t\t\t(s.width || s.minWidth || 0)*1,\n\t\t\t(s.width || s.maxWidth || 100000)*1,\n\t\t\t(s.height || s.minHeight || 0)*1,\n\t\t\t(s.height || s.maxHeight || 100000)*1,\n\t\t\ts.gravity\n\t\t];\n\n\t\tif (assert){\n\t\t\tvar check = (isNaN(size[0]) || isNaN(size[1]) || isNaN(size[2]) || isNaN(size[3]));\n\t\t\tif (check){\n\t\t\t\tassert(false, \"Size is not a number \"+this._settings.id);\n\t\t\t\ts.width = s.height = s.maxWidth = s.maxHeight = s.minWidth = s.minHeight = 0;\n\t\t\t\tsize = [0,0,100000,100000,1];\n\t\t\t}\n\t\t}\n\n\t\tsize[0]+=dx; size[1]+=dx;\n\t\tsize[2]+=dy; size[3]+=dy;\n\t\treturn size;\n\t},\n\tshow:function(force, animate_settings){\n\t\tvar parent = this.getParentView();\n\t\tvar show = !arguments[2];\n\t\tif (parent) {\n\t\t\tif(!animate_settings && animate_settings !== false && this._settings.animate)\n\t\t\t\tif (parent._settings.animate)\n\t\t\t\t\tanimate_settings = extend((parent._settings.animate?extend({},parent._settings.animate):{}), this._settings.animate, true);\n\n\t\t\tif (show?parent._show:parent._hide)\n\t\t\t\t(show?parent._show:parent._hide).call(parent, this, animate_settings);\n\t\t\tif (show)\n\t\t\t\tthis._render_hidden_views();\n\n\t\t\t//force show of parent view\n\t\t\t//stop further processing is view is a part of isolated scope\n\t\t\tif (force && show)  \n\t\t\t\tparent.show(parent.$$?false:force);\n\t\t}\n\t\telse{\n\t\t\tif (this._settings.hidden){\n\t\t\t\tif (show){\n\t\t\t\t\tvar node = toNode(this._settings._container||document.body);\n\t\t\t\t\tnode.appendChild(this._viewobj);\n\t\t\t\t\tthis._settings.hidden = false;\n\n\t\t\t\t\tthis.adjust();\n\n\t\t\t\t\tif (this.callEvent){\n\t\t\t\t\t\tthis.callEvent(\"onViewShow\", []);\n\n\t\t\t\t\t\tif (this._signal_hidden_cells)\n\t\t\t\t\t\t\t_each(this, this._signal_hidden_cells);\n\t\t\t\t\t}\n\t\t\t\t\tthis._render_hidden_views();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!show){\n\t\t\t\t\tthis._settings.hidden = this._settings._hidden = true;\n\t\t\t\t\tif (this._viewobj){\n\t\t\t\t\t\tthis._settings._container = this._viewobj.parentNode;\n\t\t\t\t\t\tremove(this._viewobj);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t_render_hidden_views:function(){\n\t\tif (this._hidden_render){\n\t\t\tfor (var i=0; i < this._hidden_render.length; i++){\n\t\t\t\tvar ui_to_render = $$(this._hidden_render[i]);\n\t\t\t\tif (ui_to_render)\n\t\t\t\t\tui_to_render.render();\n\t\t\t}\n\t\t\tthis._hidden_render = [];\n\t\t\tthis._hidden_hash = {};\n\t\t}\n\t},\n\t_onKeyPress:function(code, e){\n\t\tvar target = e.target, role = target.getAttribute(\"role\");\n\n\t\tif((code === 13 || code === 32) && (role == \"button\" || role == \"tab\") && !this._settings.disabled){\n\t\t\ttriggerEvent(target, \"MouseEvent\", \"click\");\n\t\t\tpreventEvent(e);\n\t\t}\n\t},\n\thidden_setter:function(value){\n\t\tif (value) this.hide();\n\t\treturn this._settings.hidden;\n\t},\n\thide:function(){\n\t\tthis.show(null, null, true);\n\t\tUIManager._moveChildFocus(this);\n\t},\n\tadjust:function(){\n\t\tif(!this._viewobj.parentNode)\n\t\t\treturn false;\n\n\t\tvar x = this._viewobj.parentNode.clientWidth||0;\n\t\tvar y = this._viewobj.parentNode.clientHeight||0;\n\n\t\tvar sizes=this.$getSize(0,0);\n\t\tvar fullscreen = (this._viewobj.parentNode == document.body) && !this.setPosition;\n\n\t\t//minWidth\n\t\tif (sizes[0]>x) x = sizes[0];\n\t\t//minHeight\n\t\tif (sizes[2]>y) y = sizes[2];\n\n\t\t//maxWidth rule\n\t\tif ((!fullscreen || this._settings.width)  && x>sizes[1]) x = sizes[1];\n\t\t//maxHeight rule\n\t\tif ((!fullscreen || this._settings.height) && y>sizes[3]) y = sizes[3];\n\n\t\tthis.$setSize(x,y);\n\t\tif (state._responsive_exception){\n\t\t\tstate._responsive_exception = false;\n\t\t\tthis.adjust();\n\t\t}\n\t},\n\tresize:function(){\n\t\tif (state._child_sizing_active || state._freeze_resize || state._responsive_tinkery ) return;\n\n\t\tvar parent = this.getParentView();\n\t\tif (parent){\n\t\t\tif (parent.resizeChildren)\n\t\t\t\tparent.resizeChildren();\n\t\t\telse\n\t\t\t\tparent.resize();\n\t\t} else {\n\t\t\tthis.adjust();\n\t\t\tcallEvent(\"onResize\",[]);\n\t\t}\n\t}\n};\n\nconst view = protoUI(api, Settings, Destruction, BaseBind, UIExtension);\nexport default { api, view };","import {isUndefined} from \"../webix/helpers\";\nimport {debug_size_box} from \"../webix/debug\";\nimport {protoUI} from \"../ui/core\";\n\nimport base from \"./baseview\";\n\nconst api = {\n\tname:\"view\",\n\t$init:function(config){\n\t\tthis._set_inner(config);\n\t},\n\n\t//deside, will component use borders or not\n\t_set_inner:function(config){\n\t\tvar border_not_set = isUndefined(config.borderless);\n\t\tif (border_not_set && !this.setPosition && config.$topView){\n\t\t\tconfig.borderless = true;\n\t\t\tborder_not_set = false;\n\t\t}\n\n\t\tif ((border_not_set && this.defaults.borderless) || config.borderless){\n\t\t\t//button and custom borderless\n\t\t\tconfig._inner = { top:true, left:true, bottom:true, right:true };\n\t\t} else {\n\t\t\t//default borders\n\t\t\tif (!config._inner)\n\t\t\t\tconfig._inner = {};\n\t\t\tthis._contentobj.style.borderWidth=\"1px\";\n\t\t}\n\t},\n\n\t$getSize:function(dx, dy){\n\n\t\tvar _borders = this._settings._inner;\n\t\tif (_borders){\n\t\t\tdx += (_borders.left?0:1)+(_borders.right?0:1);\n\t\t\tdy += (_borders.top?0:1)+(_borders.bottom?0:1);\n\t\t}\n\t\t\n\t\tvar size = base.api.$getSize.call(this, dx, dy);\n\t\t\n\t\tif (DEBUG) debug_size_box(this, size, true);\n\t\treturn size;\n\t},\n\t$setSize:function(x,y){\n\t\tif (DEBUG) debug_size_box(this, [x,y]);\n\t\t\t\n\t\tvar _borders = this._settings._inner;\n\t\tif (_borders){\n\t\t\tx -= (_borders.left?0:1)+(_borders.right?0:1);\n\t\t\ty -= (_borders.top?0:1)+(_borders.bottom?0:1);\n\t\t}\n\t\t\t\n\t\treturn base.api.$setSize.call(this,x,y);\n\t}\n};\n\nconst view = protoUI(api, base.view);\nexport default { api, view };\n\n//not necessary anymore\n//preserving for backward compatibility\nview.call(-1);\n","import {create, remove} from \"../webix/html\";\nimport {isUndefined, toNode} from \"../webix/helpers\";\nimport {proto} from \"../ui/core\";\n\nconst Canvas = proto({\n\t$init:function(container){\n\t\tthis._canvas_labels = [];\n\t\tthis._canvas_series =  (!isUndefined(container.series)?container.series:container.name);\n\t\tthis._obj = toNode(container.container||container);\n\t\tvar width = container.width*(window.devicePixelRatio||1);\n\t\tvar height = container.height*(window.devicePixelRatio||1);\n\t\tvar style = container.style||\"\";\n\t\tstyle += \";width:\"+container.width+\"px;height:\"+container.height+\"px;\";\n\t\tthis._prepareCanvas(container.name, style ,width, height, container.title);\n\t},\n\t_prepareCanvas:function(name,style,x,y, title){\n\t\t//canvas has the same size as master object\n\t\tthis._canvas = create(\"canvas\",{ title:title, width:x, height:y, canvas_id:name, style:(style||\"\")});\n\t\tthis._obj.appendChild(this._canvas);\n\t\treturn this._canvas;\n\t}, \n\tgetCanvas:function(context){\n\t\tvar ctx = (this._canvas||this._prepareCanvas(this._contentobj)).getContext(context||\"2d\");\n\t\tif(!this._webixDevicePixelRatio){\n\t\t\tthis._webixDevicePixelRatio = true;\n\t\t\tctx.scale(window.devicePixelRatio||1, window.devicePixelRatio||1);\n\t\t}\n\t\treturn ctx;\n\t},\n\t_resizeCanvas:function(x, y){\n\t\tif (this._canvas){\n\t\t\tthis._canvas.setAttribute(\"width\", x*(window.devicePixelRatio||1));\n\t\t\tthis._canvas.setAttribute(\"height\", y*(window.devicePixelRatio||1));\n\t\t\tthis._canvas.style.width = x+\"px\";\n\t\t\tthis._canvas.style.height = y+\"px\";\n\t\t\tthis._webixDevicePixelRatio = false;\n\t\t}\n\t},\n\trenderText:function(x,y,text,css,w){\n\t\tif (!text) return; //ignore empty text\n\t\tif (w) w = Math.max(w,0);\n\t\tif (y) y = Math.max(y,0);\n\t\tvar t = create(\"DIV\",{\n\t\t\t\"class\":\"webix_canvas_text\"+(css?(\" \"+css):\"\"),\n\t\t\t\"style\":\"left:\"+x+\"px; top:\"+y+\"px;\",\n\t\t\t\"aria-hidden\":\"true\"\n\t\t},text);\n\t\tthis._obj.appendChild(t);\n\t\tthis._canvas_labels.push(t); //destructor?\n\t\tif (w)\n\t\t\tt.style.width = w+\"px\";\n\t\treturn t;\n\t},\n\trenderTextAt:function(valign,align, x,y,t,c,w){\n\t\tvar text=this.renderText.call(this,x,y,t,c,w);\n\t\tif (text){\n\t\t\tlet size;\n\t\t\tif(document.body.contains(text))\n\t\t\t\tsize = { width: text.offsetWidth, height: text.offsetHeight };\n\t\t\telse{\n\t\t\t\t// inside window\n\t\t\t\tconst d = create(\"DIV\",{class: \"webix_chart\", style: \"visibility:hidden; position:absolute; top:0px; left:0px;\"}, \"\");\n\t\t\t\tconst parentNode = text.parentNode;\n\t\t\t\tdocument.body.appendChild(d);\n\t\t\t\td.appendChild(text);\n\t\t\t\tsize = { width: text.offsetWidth, height: text.offsetHeight };\n\t\t\t\tparentNode.appendChild(text);\n\t\t\t\tremove(d);\n\t\t\t}\n\n\t\t\tif (valign){\n\t\t\t\tif(valign == \"middle\")\n\t\t\t\t\ttext.style.top = parseInt(y-size.height/2,10) + \"px\";\n\t\t\t\telse\n\t\t\t\t\ttext.style.top = y-size.height + \"px\";\n\t\t\t}\n\t\t\tif (align){\n\t\t\t\tif(align == \"left\")\n\t\t\t\t\ttext.style.left = x-size.width + \"px\";\n\t\t\t\telse\n\t\t\t\t\ttext.style.left = parseInt(x-size.width/2,10) + \"px\";\n\t\t\t}\n\t\t}\n\t\treturn text;\n\t},\n\tclearCanvas:function(skipMap){\n\t\tvar areas=[];\n\n\t\tremove(this._canvas_labels);\n\t\tthis._canvas_labels = [];\n\n\t\tif (!skipMap&&this._obj._htmlmap){\n\n\t\t\t//areas that correspond this canvas layer\n\t\t\tareas = this._getMapAreas();\n\t\t\t//removes areas of this canvas\n\t\t\twhile(areas.length){\n\t\t\t\tareas[0].parentNode.removeChild(areas[0]);\n\t\t\t\tareas.splice(0,1);\n\t\t\t}\n\t\t\tareas = null;\n\n\t\t\t//removes _htmlmap object if all its child nodes are removed\n\t\t\tif(!this._obj._htmlmap.getElementsByTagName(\"AREA\").length){\n\t\t\t\tthis._obj._htmlmap.parentNode.removeChild(this._obj._htmlmap);\n\t\t\t\tthis._obj._htmlmap = null;\n\t\t\t}\n\t\t}\n\t\t//FF breaks, when we are using clear canvas and call clearRect without parameters\n\t\t//width|height are used insead of offsetWidth|offsetHeight for hidden canvas (series)\n\t\tthis.getCanvas().clearRect(0,0,\n\t\t\tthis._canvas.offsetWidth||Math.floor(this._canvas.width/(window.devicePixelRatio||1)), \n\t\t\tthis._canvas.offsetHeight||Math.floor(this._canvas.height/(window.devicePixelRatio||1))\n\t\t);\n\t},\n\ttoggleCanvas:function(){\n\t\tthis._toggleCanvas(this._canvas.style.display==\"none\");\n\t},\n\tshowCanvas:function(){\n\t\tthis._toggleCanvas(true);\n\t},\n\thideCanvas:function(){\n\t\tthis._toggleCanvas(false);\n\t},\n\t_toggleCanvas:function(show){\n\t\tvar areas, i;\n\n\t\tfor(i=0; i < this._canvas_labels.length;i++)\n\t\t\tthis._canvas_labels[i].style.display = (show?\"\":\"none\");\n\n\t\tif (this._obj._htmlmap){\n\t\t\tareas = this._getMapAreas();\n\t\t\tfor( i = 0; i < areas.length; i++){\n\t\t\t\tif(show)\n\t\t\t\t\tareas[i].removeAttribute(\"disabled\");\n\t\t\t\telse\n\t\t\t\t\tareas[i].setAttribute(\"disabled\",\"true\");\n\t\t\t}\n\t\t}\n\t\t//FF breaks, when we are using clear canvas and call clearRect without parameters\n\t\tthis._canvas.style.display = (show?\"\":\"none\");\n\t},\n\t_getMapAreas:function(){\n\t\tvar res = [], areas, i;\n\t\tareas = this._obj._htmlmap.getElementsByTagName(\"AREA\");\n\t\tfor(i = 0; i < areas.length; i++){\n\t\t\tif(areas[i].getAttribute(\"userdata\") == this._canvas_series){\n\t\t\t\tres.push(areas[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn res;\n\t}\n});\n\nexport default Canvas;","const skin = {\n\ttopLayout:\"space\",\n\t//bar in accordion\n\tbarHeight:36,\t\t\t//!!!Set the same in skin.less!!!\n\ttabbarHeight: 34,\n\tsidebarTitleHeight: 36,\n\trowHeight:28,\n\ttoolbarHeight:36,\n\tlistItemHeight:28,\t//list, grouplist, dataview, etc.\n\tinputHeight: 30,\n\tbuttonHeight: 30,\n\tinputPadding: 3,\n\tmenuHeight: 28,\n\tlabelTopHeight: 16,\n\tpropertyItemHeight: 24,\n\tunitHeaderHeight:28,\n\ttimelineItemHeight:50,\n\n\tinputSpacing: 4,\n\tborderWidth: 1,\n\n\tsliderHandleWidth: 12,\n\tsliderPadding: 10,\n\tsliderBorder: 1,\n\tvSliderPadding:13,\n\tvSliderHeight:100,\n\tswitchHeight:22,\n\tswitchWidth:40,\n\n\t//margin - distance between cells\n\tlayoutMargin:{ space:5, wide:5, clean:0, head:4, line:-1, toolbar:4, form:8, accordion: 2  },\n\t//padding - distance inside cell between cell border and cell content\n\tlayoutPadding:{ space:5, wide:0, clean:0, head:0, line:0, toolbar:2, form:12, accordion: 0  },\n\t//space between tabs in tabbar\n\ttabMargin: 0,\n\ttabOffset: 0,\n\ttabBottomOffset: 0,\n\ttabTopOffset:0,\n\ttabBorder: true,\n\n\tcustomCheckbox: true,\n\tcustomRadio: true,\n\tsidebarMarkAll: true,\n\tpopupNoPoint: true,\n\tborderlessPopup: true,\n\n\tpopupPadding: 0,\n\n\tdataPadding: 12,\n\n\tcalendarWeekHeaderHeight: 18,\n\tpadding:0,\n\taccordionType: \"accordion\",\n\n\toptionHeight: 24,\n\ttimelineColor:\"#1CA1C1\",\n\n\tbackColor:\"#FFFFFF\",\n\tdataBorderColor:\"#EDEFF0\",\n\n\t//colorboard\n\tcolorPadding: 4\n};\n\nexport default skin;\n","const skin = {\n\ttopLayout:\"space\",\n\t//bar in accordion\n\tbarHeight: 46,\t\t\t//!!!Set the same in skin.less!!!\n\ttabbarHeight: 44,\n\tsidebarTitleHeight: 46,\n\trowHeight:36,\n\ttoolbarHeight:46,\n\tlistItemHeight:36,\t\t//list, grouplist, dataview, etc.\n\tinputHeight: 38,\n\tbuttonHeight: 38,\n\tinputPadding: 3,\n\tmenuHeight: 36,\n\tlabelTopHeight: 22,\n\tpropertyItemHeight: 28,\n\ttimelineItemHeight:64,\n\tunitHeaderHeight:36,\n\n\tinputSpacing: 4,\n\tborderWidth: 1,\n\n\tsliderHandleWidth: 14,\n\tsliderPadding: 10,\n\tsliderBorder: 1,\n\tvSliderPadding:15,\n\tvSliderHeight:100,\n\tswitchHeight:24,\n\tswitchWidth:50,\n\n\t//margin - distance between cells\n\tlayoutMargin:{ space:10, wide:10, clean:0, head:4, line:-1, toolbar:4, form:8, accordion: 2  },\n\t//padding - distance inside cell between cell border and cell content\n\tlayoutPadding:{ space:10, wide:0, clean:0, head:0, line:0, toolbar:3, form:17, accordion: 0  },\n\t//space between tabs in tabbar\n\ttabMargin: 0,\n\ttabOffset: 0,\n\ttabBottomOffset: 0,\n\ttabTopOffset:0,\n\ttabBorder: true,\n\n\tcustomCheckbox: true,\n\tcustomRadio: true,\n\tsidebarMarkAll: true,\n\tpopupNoPoint: true,\n\tborderlessPopup: true,\n\n\tpopupPadding: 0,\n\n\tdataPadding: 12,\n\n\tcalendarWeekHeaderHeight: 18,\n\tpadding:0,\n\taccordionType: \"accordion\",\n\n\toptionHeight: 32,\n\ttimelineColor:\"#37A9EF\",\n\n\tbackColor:\"#FFFFFF\",\n\tdataBorderColor:\"#E6E6E6\",\n\n\t//colorboard\n\tcolorPadding: 4\n};\n\nexport default skin;\n","import env from \"../webix/env\";\nimport ready from \"../webix/ready\";\n\nimport {event} from \"../webix/htmlevents\";\nimport {callEvent} from \"../webix/customevents\";\nimport {preventEvent, removeCss, addCss, addStyle} from \"../webix/html\";\n\n//late binding\nimport {$$} from \"../ui/core\";\n\nconst Touch = {\n\tconfig:{\n\t\tlongTouchDelay:700,\n\t\tscrollDelay:150,\n\t\tgravity:500,\n\t\tdeltaStep:10,\n\t\tspeed:\"0ms\",\n\t\tfinish:1000,\n\t\telastic:true\n\t},\n\tlimit:function(value){\n\t\tTouch._limited = value !== false;\t\n\t},\n\tdisable:function(){\n\t\tTouch._disabled = true;\n\t},\n\tenable:function(){\n\t\tTouch._disabled = false;\n\t},\n\t$init:function(){\n\t\tTouch.$init = function(){};\n\n\t\tevent(document.body, env.touch.down,\tTouch._touchstart, {passive:false});\n\t\tevent(document.body, env.touch.move, \tTouch._touchmove, {passive:false});\n\t\tevent(document, env.touch.up, \tTouch._touchend);\n\n\t\tevent(document.body,\"dragstart\",function(e){\n\t\t\tif(Touch._disabled || Touch._limited) return;\n\t\t\treturn preventEvent(e);\n\t\t});\n\n\t\tTouch._clear_artefacts();\n\t\tTouch._scroll = [null, null];\n\t\tTouch.$active = true;\n\t},\n\t_clear_artefacts:function(){\n\t\tTouch._start_context = Touch._current_context = Touch._prev_context = Touch._scroll_context = null;\n\t\tTouch._scroll_mode = Touch._scroll_node = Touch._scroll_stat = Touch._long_touched = null;\n\t\tTouch._delta = \t{ _x_moment:0, _y_moment:0, _time:0 };\n\n\t\tif (Touch._css_button_remove){\n\t\t\tremoveCss(Touch._css_button_remove,\"webix_touch\");\n\t\t\tTouch._css_button_remove = null;\n\t\t}\n\t\t\n\t\twindow.clearTimeout(Touch._long_touch_timer);\n\t\tTouch._was_not_moved = true;\n\t\tTouch._axis_x = true;\n\t\tTouch._axis_y = true;\n\t\tif (!Touch._active_transion)\n\t\t\tTouch._scroll_end();\n\t},\n\t_touchend:function(e){\n\t\tif (Touch._start_context) {\n\t\t\tif (!Touch._scroll_mode) {\n\t\t\t\tif (!Touch._long_touched) {\n\t\t\t\t\tif (Touch._axis_y && !Touch._axis_x) {\n\t\t\t\t\t\tTouch._translate_event(\"onSwipeX\");\n\t\t\t\t\t} else if (Touch._axis_x && !Touch._axis_y) {\n\t\t\t\t\t\tTouch._translate_event(\"onSwipeY\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar temp = Touch._get_matrix(Touch._scroll_node);\n\t\t\t\tvar x = temp.e;\n\t\t\t\tvar y = temp.f;\n\t\t\t\tvar finish = Touch.config.finish;\n\n\t\t\t\tvar delta = Touch._get_delta(e);\n\t\t\t\tvar view = $$(Touch._scroll_node);\n\n\t\t\t\tvar gravity = (view && view.$scroll ? view.$scroll.gravity : Touch.config.gravity);\n\t\t\t\tif (delta._time) {\n\t\t\t\t\tvar nx = x + gravity * delta._x_moment / delta._time;\n\t\t\t\t\tvar ny = y + gravity * delta._y_moment / delta._time;\n\n\t\t\t\t\tvar cnx = Touch._scroll[0] ? Touch._correct_minmax(nx, false, false, Touch._scroll_stat.dx, Touch._scroll_stat.px) : x;\n\t\t\t\t\tvar cny = Touch._scroll[1] ? Touch._correct_minmax(ny, false, false, Touch._scroll_stat.dy, Touch._scroll_stat.py) : y;\n\n\n\t\t\t\t\tvar size = Math.max(Math.abs(cnx - x), Math.abs(cny - y));\n\t\t\t\t\tif (size < 150)\n\t\t\t\t\t\tfinish = finish * size / 150;\n\n\t\t\t\t\tif (cnx != x || cny != y)\n\t\t\t\t\t\tfinish = Math.round(finish * Math.max((cnx - x) / (nx - x), (cny - y) / (ny - y)));\n\n\t\t\t\t\tvar result = {e: cnx, f: cny};\n\n\n\t\t\t\t\tview = $$(Touch._scroll_node);\n\t\t\t\t\tif (view && view.adjustScroll)\n\t\t\t\t\t\tview.adjustScroll(result);\n\n\t\t\t\t\tfinish = Math.min(Touch.config.finish, Math.max(100, finish));\n\t\t\t\t\tif (x != result.e || y != result.f) {\n\t\t\t\t\t\tTouch._set_matrix(Touch._scroll_node, result.e, result.f, finish + \"ms\");\n\t\t\t\t\t\tif (Touch._scroll_master)\n\t\t\t\t\t\t\tTouch._scroll_master._sync_scroll(result.e, result.f, finish + \"ms\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tTouch._scroll_end();\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\tTouch._scroll_end();\n\t\t\t}\n\t\t\tTouch._translate_event(\"onTouchEnd\");\n\t\t\tTouch._clear_artefacts();\n\t\t}\n\t},\n\t_touchmove:function(e){\n\t\tif (!Touch._scroll_context || !Touch._start_context) return;\n\n\t\tvar\tdelta = Touch._get_delta(e);\n\t\tTouch._translate_event(\"onTouchMove\");\n\n\t\tif (Touch._scroll_mode){\n\t\t\tTouch._set_scroll_pos();\n\t\t} else {\n\t\t\tTouch._axis_x = Touch._axis_check(delta._x, \"x\", Touch._axis_x);\n\t\t\tTouch._axis_y = Touch._axis_check(delta._y, \"y\", Touch._axis_y);\n\t\t\tif (Touch._scroll_mode){\n\t\t\t\tvar view = Touch._get_event_view(\"onBeforeScroll\", true);\n\t\t\t\tif (view){\n\t\t\t\t\tvar data = {};\n\t\t\t\t\tview.callEvent(\"onBeforeScroll\",[data]);\n\t\t\t\t\tif (data.update){\n\t\t\t\t\t\tTouch.config.speed = data.speed;\n\t\t\t\t\t\tTouch.config.scale = data.scale;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tTouch._init_scroller(); //apply scrolling\n\t\t\t} else {\n\t\t\t\tconst state = Touch._is_scroll();\n\t\t\t\tconst view = $$(state && state[0]);\t\t// support subviews\n\t\t\t\tif (view && view.$hasYScroll && view.$hasYScroll() && e.cancelable){\n\t\t\t\t\treturn preventEvent(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (Touch._scroll_mode && e.cancelable)\n\t\t\treturn preventEvent(e);\n\t},\n\t_set_scroll_pos:function(){\n\t\tif (!Touch._scroll_node) return;\n\t\tvar temp = Touch._get_matrix(Touch._scroll_node);\n\t\tvar prev = Touch._prev_context || Touch._start_context;\n\n\t\tvar view = $$(Touch._scroll_node);\n\t\tvar elastic = (view && view.$scroll) ? view.$scroll.elastic : Touch.config.elastic;\n\n\t\tif (Touch._scroll[0])\n\t\t\ttemp.e = Touch._correct_minmax( temp.e - prev.x + Touch._current_context.x , elastic, temp.e, Touch._scroll_stat.dx, Touch._scroll_stat.px);\n\t\tif (Touch._scroll[1])\n\t\t\ttemp.f = Touch._correct_minmax( temp.f - prev.y + Touch._current_context.y , elastic, temp.f, Touch._scroll_stat.dy, Touch._scroll_stat.py);\n\n\t\tTouch._set_matrix(Touch._scroll_node, temp.e, temp.f, \"0ms\");\n\t\tif (Touch._scroll_master)\n\t\t\tTouch._scroll_master._sync_scroll(temp.e, temp.f, \"0ms\");\n\t},\n\tscrollTo:function(node, x, y, speed){\n\t\tTouch._set_matrix(node,x,y,speed);\n\t},\n\t_set_matrix:function(node, xv, yv, speed){\n\t\tif (!speed){\n\t\t\tnode.style[env.transform] = \"\";\n\t\t\treturn;\n\t\t}\n\n\t\tTouch._active_transion = true;\n\t\tif (node){\n\t\t\tvar trans = Touch.config.translate || env.translate;\n\t\t\tnode.style[env.transform] = trans+\"(\"+Math.round(xv)+\"px, \"+Math.round(yv)+\"px\"+((trans==\"translate3d\")?\", 0\":\"\")+\")\";\n\t\t\tnode.style[env.transitionDuration] = speed;\n\t\t}\n\t},\n\t_get_matrix:function(node){\n\t\tvar matrix = window.getComputedStyle(node)[env.transform];\n\t\tvar tmatrix;\n\n\t\tif (matrix == \"none\")\n\t\t\ttmatrix = {e:0, f:0};\n\t\telse {\n\t\t\tif(window.WebKitCSSMatrix)\n\t\t\t\t/* global WebKitCSSMatrix */\n\t\t\t\ttmatrix = new WebKitCSSMatrix(matrix);\n\t\t\telse {\n\t\t\t\t// matrix(1, 0, 0, 1, 0, 0) --> 1, 0, 0, 1, 0, 0\n\t\t\t\tvar _tmatrix = matrix.replace(/(matrix\\()(.*)(\\))/gi, \"$2\");\n\t\t\t\t// 1, 0, 0, 1, 0, 0 --> 1,0,0,1,0,0\n\t\t\t\t_tmatrix = _tmatrix.replace(/\\s/gi, \"\");\n\t\t\t\t_tmatrix = _tmatrix.split(\",\");\n\n\t\t\t\ttmatrix = {};\n\t\t\t\tvar tkey = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\n\t\t\t\tfor(var i=0; i<tkey.length; i++){\n\t\t\t\t\ttmatrix[tkey[i]] = parseInt(_tmatrix[i], 10);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (Touch._scroll_master)\n\t\t\tTouch._scroll_master._sync_pos(tmatrix);\n\n\t\treturn tmatrix;\n\t},\t\n\t_correct_minmax:function(value, allow, current, dx, px){\n\t\tif (value === current) return value;\n\n\t\tif (px > dx) return 0;\n\n\t\tconst delta = Math.abs(value-current);\n\t\tconst sign = delta/(value-current);\n\t\tif (value > 0)\n\t\t\treturn allow ? (current + sign*Math.sqrt(delta)) : 0;\n\n\t\tconst max = dx - px;\n\t\tif (max + value < 0)\n\t\t\treturn allow ? (current + sign*Math.sqrt(delta)) : -max;\n\n\t\treturn value;\n\t},\t\n\t_init_scroll_node:function(node){\n\t\tif (!node.scroll_enabled){\n\t\t\tnode.scroll_enabled = true;\n\t\t\tnode.parentNode.style.position = \"relative\";\n\t\t\tnode.style.cssText += \"transition:transform; user-select:none; transform-style:flat;\";\n\t\t\tnode.addEventListener(env.transitionEnd,Touch._scroll_end,false);\n\t\t}\n\t},\n\t_init_scroller:function(){\n\t\tif (Touch._scroll_mode.indexOf(\"x\") !== -1) Touch._scroll[0] = true;\n\t\tif (Touch._scroll_mode.indexOf(\"y\") !== -1) Touch._scroll[1] = true;\n\n\t\tif (Touch._scroll[0] || Touch._scroll[1])\n\t\t\tTouch._scroll[2] = Touch._scroll_node;\n\n\t\tTouch._init_scroll_node(Touch._scroll_node);\n\t},\n\t_axis_check:function(value, mode, old){\n\t\tif (value > Touch.config.deltaStep){\n\t\t\tif (Touch._was_not_moved){\n\t\t\t\tTouch._long_move(mode);\n\t\t\t\tTouch._locate(mode);\n\t\t\t\tif ((Touch._scroll_mode||\"\").indexOf(mode) == -1) Touch._scroll_mode = \"\";\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn old;\n\t},\n\t_scroll_end:function(){\n\t\t//sending event to the owner of the scroll only\n\t\tvar result,state,view;\n\t\tview = $$(Touch._scroll_node||this);\n\t\tif (view){\n\t\t\tif (Touch._scroll_node)\n\t\t\t\tresult = Touch._get_matrix(Touch._scroll_node);\n\t\t\telse if(view.getScrollState){\n\t\t\t\tstate = view.getScrollState();\n\t\t\t\tresult = {e:-state.x, f:-state.y};\n\t\t\t}\n\t\t\tcallEvent(\"onAfterScroll\", [result]);\n\t\t\tif (view.callEvent)\n\t\t\t\tview.callEvent(\"onAfterScroll\",[result]);\n\t\t}\n\t\tif (!Touch._scroll_mode)\n\t\t\tTouch._scroll = [null, null];\n\t\tTouch._active_transion = false;\n\t},\n\t_long_move:function(){\n\t\twindow.clearTimeout(Touch._long_touch_timer);\n\t\tTouch._was_not_moved = false;\t\n\t},\t\n\t_stop_old_scroll:function(e){\n\t\tif (Touch._scroll[2]){\n\t\t\tTouch._stop_scroll(e, (Touch._scroll[0] ? \"x\" : \"y\"));\n\t\t} else\n\t\t\treturn true;\n\t},\n\t_touchstart :function(e){\n\t\tif (Touch._disabled) return;\n\n\t\tTouch._long_touched = null;\n\t\tTouch._scroll_context = Touch._start_context = env.touch.context(e);\n\n\t\tif (Touch._limited && !Touch._is_scroll())\n\t\t\tTouch._scroll_context = null;\n\n\t\tTouch._translate_event(\"onTouchStart\");\n\n\t\tif (Touch._stop_old_scroll(e))\n\t\t\tTouch._long_touch_timer = window.setTimeout(Touch._long_touch, Touch.config.longTouchDelay);\n\n\t\tconst element = $$(e);\n\t\tif (element && element.touchable && (!e.target.className || e.target.className.indexOf(\"webix_view\") !== 0)){\n\t\t\tTouch._css_button_remove = element.getNode(e);\n\t\t\taddCss(Touch._css_button_remove,\"webix_touch\");\n\t\t}\n\t},\n\t_long_touch:function(){\n\t\tif(Touch._start_context){\n\t\t\tTouch._long_touched = true;\n\t\t\tTouch._translate_event(\"onLongTouch\");\n\t\t\tcallEvent(\"onClick\", [Touch._start_context]);\n\t\t}\n\t},\n\t_stop_scroll:function(e, stop_mode){\n\t\tTouch._locate(stop_mode);\n\t\tif (Touch._scroll[2]){\n\t\t\tvar view = Touch._get_event_view(\"onBeforeScroll\", true);\n\t\t\tif (view)\n\t\t\t\tview.callEvent(\"onBeforeScroll\", [Touch._start_context,Touch._current_context]);\n\n\t\t\tif (!Touch._scroll_node || Touch._scroll_node.parentNode !== Touch._scroll[2].parentNode){\n\t\t\t\tTouch._clear_artefacts();\n\t\t\t\tTouch._scroll_end();\n\t\t\t\tTouch._start_context = env.touch.context(e);\n\t\t\t}\n\t\t}\n\t\tTouch._touchmove(e);\n\t},\t\n\t_get_delta:function(e){\n\t\tTouch._prev_context = Touch._current_context;\n\t\tTouch._current_context = env.touch.context(e);\n\n\t\tTouch._delta._x = Math.abs(Touch._start_context.x - Touch._current_context.x);\n\t\tTouch._delta._y = Math.abs(Touch._start_context.y - Touch._current_context.y);\n\n\t\tif (Touch._prev_context){\n\t\t\tif (Touch._current_context.time - Touch._prev_context.time < Touch.config.scrollDelay){\n\t\t\t\tTouch._delta._x_moment = Touch._delta._x_moment/1.3+Touch._current_context.x - Touch._prev_context.x;\n\t\t\t\tTouch._delta._y_moment = Touch._delta._y_moment/1.3+Touch._current_context.y - Touch._prev_context.y;\n\t\t\t} else {\n\t\t\t\tTouch._delta._y_moment = Touch._delta._x_moment = 0;\n\t\t\t}\n\t\t\tTouch._delta._time = Touch._delta._time/1.3+(Touch._current_context.time - Touch._prev_context.time);\n\t\t}\n\n\t\treturn Touch._delta;\n\t},\n\t_get_sizes:function(node){\n\t\treturn {\n\t\t\tdx:node.offsetWidth,\n\t\t\tdy:node.offsetHeight,\n\t\t\tpx:node.parentNode.offsetWidth,\n\t\t\tpy:node.parentNode.offsetHeight\n\t\t};\n\t},\n\t_is_scroll:function(locate_mode){\n\t\tvar node = Touch._start_context.target;\n\t\twhile(node && node.tagName != \"BODY\"){\n\t\t\tif (node.getAttribute){\n\t\t\t\tvar mode = node.getAttribute(\"touch_scroll\");\n\t\t\t\tif (mode && (!locate_mode || mode.indexOf(locate_mode) != -1))\n\t\t\t\t\treturn [node, mode];\n\t\t\t}\n\t\t\tnode = node.parentNode;\n\t\t}\n\t\treturn null;\n\t},\n\t_locate:function(locate_mode){\n\t\tvar state = Touch._is_scroll(locate_mode);\n\t\tif (state){\n\t\t\tTouch._scroll_mode = state[1];\n\t\t\tTouch._scroll_node = state[0];\n\t\t\tTouch._scroll_stat = Touch._get_sizes(state[0]);\n\t\t}\n\t\treturn state;\n\t},\n\t_translate_event:function(name){\n\t\tcallEvent(name, [Touch._start_context,Touch._current_context]);\n\t\tvar view = Touch._get_event_view(name);\n\t\tif (view)\n\t\t\tview.callEvent(name, [Touch._start_context,Touch._current_context]);\n\t},\n\t_get_event_view:function(name, active){\n\t\tvar view = $$(active ? Touch._scroll_node : Touch._start_context);\n\t\tif(!view) return null;\n\n\t\twhile (view){\n\t\t\tif (view.hasEvent && view.hasEvent(name))\n\t\t\t\treturn view;\n\t\t\tview = view.getParentView();\n\t\t}\n\n\t\treturn null;\n\t},\t\n\t_get_context:function(e){\n\t\tif (!e.touches[0]) {\n\t\t\tvar temp = Touch._current_context;\n\t\t\ttemp.time = new Date();\n\t\t\treturn temp;\n\t\t}\n\n\t\treturn {\n\t\t\ttarget:e.target,\n\t\t\tx:e.touches[0].pageX,\n\t\t\ty:e.touches[0].pageY,\n\t\t\ttime:new Date()\n\t\t};\n\t},\n\t_get_context_m:function(e){\n\t\treturn {\n\t\t\ttarget:e.target,\n\t\t\tx:e.pageX,\n\t\t\ty:e.pageY,\n\t\t\ttime:new Date()\n\t\t};\n\t}\n};\n\nfunction touchInit(){\n\tif (env.touch){\n\t\tTouch.$init();\n\n\t\t//not full screen mode\n\t\tif (document.body.className.indexOf(\"webix_full_screen\") === -1)\n\t\t\tTouch.limit(true);\n\n\t\tif (env.isSafari && CSS.supports(\"-webkit-overflow-scrolling: touch\"))\n\t\t\taddStyle(\".webix_view{ -webkit-overflow-scrolling:touch; } .webix_scroll_cont{ transform:translateZ(0px); }\");\n\t}\n}\n\nready(touchInit);\n\nenv.mouse = {\n\tdown: \"mousedown\",\n\tmove: \"mousemove\",\n\tup: \"mouseup\",\n\tcontext: Touch._get_context_m\n};\n\nenv.touch = env.touch && {\n\tdown: \"touchstart\",\n\tmove: \"touchmove\",\n\tup: \"touchend\",\n\tcontext: Touch._get_context\n};\n\t\n\nexport default Touch;","import {preventEvent, addCss, removeCss, pos as getPos, remove} from \"../webix/html\";\nimport env from \"../webix/env\";\nimport Touch from \"../core/touch\";\nimport {zIndex} from \"../ui/helpers\";\nimport {_to_array, toNode} from \"../webix/helpers\";\nimport {_event, event, eventRemove} from \"../webix/htmlevents\";\nimport {attachEvent, callEvent} from \"../webix/customevents\";\n\n\n/*\n\tBehavior:DND - low-level dnd handling\n\t@export\n\t\tgetContext\n\t\taddDrop\n\t\taddDrag\n\t\t\n\tDND master can define next handlers\n\t\tonCreateDrag\n\t\tonDragIng\n\t\tonDragOut\n\t\tonDrag\n\t\tonDrop\n\tall are optional\n*/\n\nconst DragControl ={\n\t//has of known dnd masters\n\t_drag_masters : _to_array([\"dummy\"]),\n\t/*\n\t\tregister drop area\n\t\t@param node \t\t\thtml node or ID\n\t\t@param ctrl \t\t\toptions dnd master\n\t\t@param master_mode \t\ttrue if you have complex drag-area rules\n\t*/\n\taddDrop:function(node,ctrl,master_mode){\n\t\tnode = toNode(node);\n\t\tnode.webix_drop=this._getCtrl(ctrl);\n\t\tif (master_mode) node.webix_master=true;\n\t},\n\t//return index of master in collection\n\t//it done in such way to prevent dnd master duplication\n\t//probably useless, used only by addDrop and addDrag methods\n\t_getCtrl:function(ctrl){\n\t\tctrl = ctrl||DragControl;\n\t\tvar index = this._drag_masters.find(ctrl);\n\t\tif (index<0){\n\t\t\tindex = this._drag_masters.length;\n\t\t\tthis._drag_masters.push(ctrl);\n\t\t\tif (ctrl.attachEvent)\n\t\t\t\tctrl.attachEvent(\"onDestruct\", () => DragControl.unlink(ctrl));\n\t\t}\n\t\treturn index;\n\t},\n\tunlink(ctrl){\n\t\tvar index = this._drag_masters.find(ctrl);\n\t\tif (index > -1){\n\t\t\t// if active view was destroyed, stop dnd\n\t\t\tif (DragControl._active && DragControl._active.webix_drag == index)\n\t\t\t\tDragControl._stopDrag();\n\t\t\t// if last target was destroyed, reset it and continue dnd\n\t\t\tif (DragControl._last && DragControl._last.webix_drop == index)\n\t\t\t\tDragControl._last = null;\n\n\t\t\tthis._drag_masters[index] = null;\n\t\t}\n\t},\n\t_createTouchDrag: function(e, pointer){\n\t\tconst dragCtrl = DragControl;\n\t\tconst master = this._getActiveDragMaster();\n\t\t// for data items only\n\t\tif (master && master.$longTouchLimit){\n\t\t\tif (!dragCtrl._html && !dragCtrl.createDrag(e, pointer)) return;\n\t\t\te.longtouch_drag = true;\n\n\t\t\tconst pos = getPos(e);\n\t\t\tconst customPos = dragCtrl.$dragPos(pos, e);\n\n\t\t\tconst ctx = dragCtrl._drag_context;\n\t\t\tdragCtrl._html.style.top= pos.y+dragCtrl.top+(customPos||!ctx.y_offset?0:ctx.y_offset)+\"px\";\n\t\t\tdragCtrl._html.style.left= pos.x+dragCtrl.left+(customPos||!ctx.x_offset?0:ctx.x_offset)+\"px\";\n\t\t}\n\t},\n\t/*\n\t\tregister drag area\n\t\t@param node \thtml node or ID\n\t\t@param ctrl \toptions dnd master\n\t*/\n\taddDrag:function(node,ctrl){\n\t\tnode = toNode(node);\n\t\tnode.webix_drag = this._getCtrl(ctrl);\n\t\t_event(node,\"dragstart\",preventEvent);\n\t\t_event(node, env.mouse.down, e => this._preStart(e, node, \"mouse\"));\n\t\tif (env.touch)\n\t\t\t_event(node, env.touch.down, e => this._preStart(e, node, \"touch\"));\n\t},\n\t//logic of drag - start, we are not creating drag immediately, instead of that we hears mouse moving\n\t_preStart:function(e, node, pointer){\n\t\tif (DragControl._active){\n\t\t\t//if we have nested drag areas, use the top one and ignore the inner one\n\t\t\tif (DragControl._saved_event == e) return;\n\t\t\tDragControl._preStartFalse(e);\n\t\t\tDragControl.destroyDrag(e);\n\t\t}\n\t\tDragControl._active = node;\n\n\t\tconst evobj = env[pointer].context(e);\n\t\tDragControl._start_pos = evobj;\n\t\tDragControl._saved_event = e;\n\n\t\tconst passive = (pointer === \"touch\") ? { passive:false } : null;\n\t\tDragControl._webix_drag_mm = event(document.body, env[pointer].move, e => DragControl._startDrag(e, pointer), passive);\n\t\tDragControl._webix_drag_mu = event(document, env[pointer].up, DragControl._preStartFalse);\n\n\t\t//need to run here, or will not work in IE\n\t\taddCss(document.body,\"webix_noselect\", 1);\n\t},\n\t//if mouse was released before moving - this is not a dnd, remove event handlers\n\t_preStartFalse:function(e){\n\t\tDragControl._clean_dom_after_drag();\n\t\tDragControl._touch_animation = !e.cancelable;\n\t},\n\t//mouse was moved without button released - dnd started, update event handlers\n\t_startDrag:function(e, pointer){\n\t\tconst touch = (pointer === \"touch\");\n\n\t\t// mouse: allow dnd only on left click\n\t\tif(!touch && DragControl._saved_event.button)\n\t\t\treturn;\n\n\t\t// check touch scroll animation\n\t\tDragControl._touch_animation = !e.cancelable;\n\t\tif (touch && DragControl._touch_animation){\n\t\t\tDragControl._clean_dom_after_drag();\n\t\t\treturn DragControl.destroyDrag(e);\n\t\t}\n\n\t\t//prevent unwanted dnd\n\t\tvar pos = env[pointer].context(e);\n\t\tvar master = DragControl._getActiveDragMaster();\n\n\t\t// only long-touched elements can be dragged\n\t\tvar longTouchLimit = (touch && master && master.$longTouchLimit && !Touch._long_touched);\n\t\tif (longTouchLimit || Math.abs(pos.x-DragControl._start_pos.x)<5 && Math.abs(pos.y-DragControl._start_pos.y)<5)\n\t\t\treturn;\n\n\t\tif (!DragControl._html && !DragControl.createDrag(DragControl._saved_event, pointer))\n\t\t\treturn DragControl._clean_dom_after_drag();\n\t\tDragControl._clean_dom_after_drag(true);\n\n\t\tDragControl.sendSignal(\"start\"); //useless for now\n\n\t\tif (touch) {\n\t\t\t// important: for touch events use e.target as EventTarget\n\t\t\tDragControl._webix_drag_mm = event(e.target, env[pointer].move, e => DragControl._moveDrag(e, pointer), { passive:false });\n\t\t\tDragControl._webix_drag_mu = event(e.target, env[pointer].up, DragControl._stopDrag);\n\t\t} else {\n\t\t\tDragControl._webix_drag_mm = event(document.body, env[pointer].move, e => DragControl._moveDrag(e, pointer));\n\t\t\tDragControl._webix_drag_mu = event(document, env[pointer].up, DragControl._stopDrag);\n\t\t}\n\t\tDragControl._moveDrag(e, pointer, true);\n\t},\n\t//mouse was released while dnd is active - process target\n\t_stopDrag:function(e){\n\t\tDragControl._clean_dom_after_drag();\n\t\tDragControl._saved_event = null;\n\n\t\tif (DragControl._last && e){\t//if some drop target was confirmed\n\t\t\tDragControl.$drop(DragControl._active, DragControl._last, e);\n\t\t\tDragControl.$dragOut(DragControl._active, DragControl._last, null, e);\n\t\t}\n\t\tDragControl.destroyDrag(e);\n\t\tDragControl.sendSignal(\"stop\");\t//useless for now\n\t},\n\t_clean_dom_after_drag:function(still_drag){\n\t\tthis._webix_drag_mm = eventRemove(this._webix_drag_mm);\n\t\tthis._webix_drag_mu = eventRemove(this._webix_drag_mu);\n\t\tif (!still_drag)\n\t\t\tremoveCss(document.body,\"webix_noselect\");\n\t},\n\t//dnd is active and mouse position was changed\n\t_moveDrag:function(e, pointer, first){\n\t\tvar dragCtrl = DragControl;\n\t\tvar pos = getPos(e);\n\n\t\t//give possibility to customize drag position\n\t\tvar customPos = dragCtrl.$dragPos(pos, e);\n\t\t//adjust drag marker position\n\t\tvar ctx = dragCtrl._drag_context;\n\t\tdragCtrl._html.style.top=pos.y+dragCtrl.top+(customPos||!ctx.y_offset?0:ctx.y_offset) +\"px\";\n\t\tdragCtrl._html.style.left=pos.x+dragCtrl.left+(customPos||!ctx.x_offset?0:ctx.x_offset)+\"px\";\n\n\t\t// check landing at least once\n\t\tif (first) dragCtrl._skip = false;\n\n\t\tif (dragCtrl._skip)\n\t\t\tdragCtrl._skip = false;\n\t\telse {\n\t\t\tlet evobj = e;\n\t\t\tif (pointer === \"touch\"){\n\t\t\t\tconst scrollLeft = window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft;\n\t\t\t\tconst scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;\n\n\t\t\t\tconst context = env[pointer].context(e);\n\t\t\t\tconst target = document.elementFromPoint(context.x - scrollLeft, context.y - scrollTop);\n\t\t\t\tevobj = new Proxy(e, {\n\t\t\t\t\tget: function(obj, prop){\n\t\t\t\t\t\tif (prop === \"target\"){\n\t\t\t\t\t\t\treturn target;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst res = obj[prop];\n\t\t\t\t\t\tif (typeof res === \"function\"){\n\t\t\t\t\t\t\treturn res.bind(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn res;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tdragCtrl._checkLand((evobj.target), evobj);\n\t\t}\n\t\t\n\t\treturn preventEvent(e);\n\t},\n\t//check if item under mouse can be used as drop landing\n\t_checkLand:function(node,e){\n\t\twhile (node && node.tagName!=\"BODY\"){\n\t\t\tif (node.webix_drop){\t//if drop area registered\n\t\t\t\tif (this._last && (this._last!=node || node.webix_master))\t//if this area with complex dnd master\n\t\t\t\t\tthis.$dragOut(this._active,this._last,node,e);\t\t\t//inform master about possible mouse-out\n\t\t\t\tif (!this._last || this._last!=node || node.webix_master){\t//if this is new are or area with complex dnd master\n\t\t\t\t\tthis._last=null;\t\t\t\t\t\t\t\t\t\t//inform master about possible mouse-in\n\t\t\t\t\tthis._landing=this.$dragIn(DragControl._active,node,e);\n\t\t\t\t\tif (this._landing)\t//landing was rejected\n\t\t\t\t\t\tthis._last=node;\n\t\t\t\t\treturn;\t\t\t\t\n\t\t\t\t} \n\t\t\t\treturn;\n\t\t\t}\n\t\t\tnode=node.parentNode;\n\t\t}\n\t\tif (this._last)\t//mouse was moved out of previous landing, and without finding new one \n\t\t\tthis._last = this._landing = this.$dragOut(this._active,this._last,null,e);\n\t},\n\t//mostly useless for now, can be used to add cross-frame dnd\n\tsendSignal:function(signal){\n\t\tDragControl.active=(signal==\"start\");\n\t\tcallEvent(\"onDragMode\", [signal]);\n\t},\n\t\n\t//return master for html area\n\tgetMaster:function(t){\n\t\treturn this._drag_masters[t.webix_drag||t.webix_drop];\n\t},\n\t//return dhd-context object\n\tgetContext:function(){\n\t\treturn this._drag_context;\n\t},\n\tgetNode:function(){\n\t\treturn this._html;\n\t},\n\t//called when dnd is initiated, must create drag representation\n\tcreateDrag:function(e, pointer){\n\t\tvar a = DragControl._active;\n\n\t\tDragControl._drag_context = {};\n\t\tvar master = this._drag_masters[a.webix_drag];\n\t\tvar drag_container;\n\n\t\t//if custom method is defined - use it\n\t\tif (master.$dragCreate){\n\t\t\tdrag_container = master.$dragCreate(a,e,pointer);\n\t\t\tif (!drag_container) return false;\n\t\t\tthis._setDragOffset(e);\n\t\t\tdrag_container.style.position = \"absolute\";\n\t\t} else {\n\t\t//overvise use default one\n\t\t\tvar text = DragControl.$drag(a,e,pointer);\n\t\t\tDragControl._setDragOffset(e);\n\n\t\t\tif (!text) return false;\n\t\t\tdrag_container = document.createElement(\"DIV\");\n\t\t\tdrag_container.innerHTML=text;\n\t\t\tdrag_container.className=\"webix_drag_zone\";\n\t\t\tdocument.body.appendChild(drag_container);\n\n\t\t\tvar context = DragControl._drag_context;\n\t\t\tif (context.html){\n\t\t\t\tcontext.x_offset = -Math.round(drag_container.offsetWidth  * 0.5);\n\t\t\t\tcontext.y_offset = -Math.round(drag_container.offsetHeight * 0.75);\n\t\t\t}\n\t\t}\n\t\t/*\n\t\t\tdragged item must have topmost z-index\n\t\t\tin some cases item already have z-index\n\t\t\tso we will preserve it if possible\n\t\t*/\n\t\tdrag_container.style.zIndex = Math.max(drag_container.style.zIndex,zIndex());\n\n\t\tDragControl._skipDropH = event(drag_container, env[pointer].move, DragControl._skip_mark);\n\n\t\tif (!DragControl._drag_context.from)\n\t\t\tDragControl._drag_context = {source:a, from:a};\n\t\t\n\t\tDragControl._html = drag_container;\n\t\treturn true;\n\t},\n\t//helper, prevents unwanted mouse-out events\n\t_skip_mark:function(){\n\t\tDragControl._skip = true;\n\t},\n\t//after dnd end, remove all traces and used html elements\n\tdestroyDrag:function(e){\n\t\tvar a = DragControl._active;\n\t\tvar master = this._drag_masters[a.webix_drag];\n\n\t\tif (DragControl._skipDropH)\n\t\t\tDragControl._skipDropH = eventRemove(DragControl._skipDropH);\n\t\t\n\t\tif (master && master.$dragDestroy){\n\t\t\tif(DragControl._html)\n\t\t\t\tmaster.$dragDestroy(a,DragControl._html,e);\n\t\t} else\n\t\t\tremove(DragControl._html);\n\n\t\tif (master && master._auto_scroll_delay)\n\t\t\tmaster._auto_scroll_delay = window.clearTimeout(master._auto_scroll_delay);\n\n\t\tif (DragControl._dropHTML)\n\t\t\tremove(DragControl._dropHTML);\n\n\t\tDragControl._landing=DragControl._active=DragControl._last=DragControl._html=DragControl._dropHTML=null;\n\t\tDragControl._drag_context = null;\n\t},\n\t_getActiveDragMaster: function(){\n\t\treturn DragControl._drag_masters[DragControl._active.webix_drag];\n\t},\n\ttop:0,\t //relative position of drag marker to mouse cursor\n\tleft:0,\n\t_setDragOffset:function(e){\n\t\tconst pos = DragControl._start_pos;\n\t\tconst ctx = DragControl._drag_context;\n\n\t\tif(typeof ctx.x_offset != \"undefined\" && typeof ctx.y_offset != \"undefined\")\n\t\t\treturn null;\n\n\t\tctx.x_offset = ctx.y_offset = 0;\n\t\tconst m = DragControl._getActiveDragMaster();\n\t\tif (m._getDragItemPos && m !== this){\n\t\t\tconst itemPos = m._getDragItemPos(pos,e);\n\t\t\tif (itemPos){\n\t\t\t\tctx.x_offset = itemPos.x - pos.x;\n\t\t\t\tctx.y_offset = itemPos.y - pos.y;\n\t\t\t}\n\t\t}\n\t},\n\t$dragPos:function(pos, e){\n\t\tvar m=this._drag_masters[DragControl._active.webix_drag];\n\t\tif (m.$dragPos && m!=this){\n\t\t\tm.$dragPos(pos, e, DragControl._html);\n\t\t\treturn true;\n\t\t}\n\t},\n\t//called when mouse was moved in drop area\n\t$dragIn:function(s,t,e){\n\t\tvar m=this._drag_masters[t.webix_drop];\n\t\tif (m.$dragIn && m!=this) return m.$dragIn(s,t,e);\n\t\tt.className=t.className+\" webix_drop_zone\";\n\t\treturn t;\n\t},\n\t//called when mouse was moved out drop area\n\t$dragOut:function(s,t,n,e){\n\t\tvar m=this._drag_masters[t.webix_drop];\n\t\tif (m.$dragOut && m!=this) return m.$dragOut(s,t,n,e);\n\t\tt.className=t.className.replace(\"webix_drop_zone\",\"\");\n\t\treturn null;\n\t},\n\t//called when mouse was released over drop area\n\t$drop:function(s,t,e){\n\t\tvar m=this._drag_masters[t.webix_drop];\n\t\tDragControl._drag_context.from = DragControl.getMaster(s);\n\t\tif (m.$drop && m!=this) return m.$drop(s,t,e);\n\t\tt.appendChild(s);\n\t},\n\t//called when dnd just started\n\t$drag:function(s,e,p){\n\t\tvar m=this._drag_masters[s.webix_drag];\n\t\tif (m.$drag && m!=this) return m.$drag(s,e,p);\n\t\treturn \"<div style='\"+s.style.cssText+\"'>\"+s.innerHTML+\"</div>\";\n\t}\t\n};\n\n//global touch-drag handler\nattachEvent(\"onLongTouch\", function(ev){\n\tif(DragControl._active && !DragControl._touch_animation)\n\t\tDragControl._createTouchDrag(ev, \"touch\");\n});\n\n\nexport default DragControl;","import {pos as getPos, offset} from \"../webix/html\";\nimport {protoUI, ui, $$} from \"../ui/core\";\nimport animate from \"../webix/animate\";\nimport {$active} from \"../webix/skin\";\n\nimport state from \"../core/state\";\nimport env from \"../webix/env\";\nimport UIManager from \"../core/uimanager\";\nimport Destruction from \"../core/destruction\";\n\nimport {zIndex} from \"../ui/helpers\";\nimport {toNode, delay, clone, uid, extend} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport {assert} from \"../webix/debug\";\nimport {callEvent, attachEvent} from \"../webix/customevents\";\n\nimport EventSystem from \"../core/eventsystem\";\nimport Movable from \"../core/movable\";\nimport Modality from \"../core/modality\";\nimport ResizeArea from \"../core/resizearea\";\n\nimport baseview from \"./baseview\";\nimport base from \"./view\";\n\nconst api = {\n\tname:\"window\",\n\n\t$init:function(config){\n\t\tthis._viewobj.innerHTML = \"<div class='webix_win_content'><div class='webix_win_head'></div><div class='webix_win_body'></div></div>\";\n\n\t\tthis._contentobj = this._viewobj.firstChild;\n\t\tthis._headobj = this._contentobj.childNodes[0];\n\t\tthis._dataobj = this._bodyobj = this._contentobj.childNodes[1];\n\t\tthis._viewobj.className +=\" webix_window\";\n\n\t\tthis._viewobj.setAttribute(\"role\", \"dialog\");\n\t\tthis._viewobj.setAttribute(\"tabindex\", \"0\");\n\n\t\tthis._head_cell = this._body_cell = null;\n\t\tthis._settings._inner = {top:false, left:false, right:false, bottom:false }; //set border flags\n\t\tif (!config.id) config.id = uid();\n\n\t\t_event(this._contentobj, \"click\", this._ignore_clicks, {bind:this});\n\t\t_event(this._contentobj, \"click\", function(){\n\t\t\t// brings a window to the front of other windows\n\t\t\tif(!this._settings.zIndex && this._settings.toFront){\n\t\t\t\tthis._viewobj.style.zIndex = zIndex();\n\t\t\t}\n\t\t}, {bind:this, capture:true});\n\n\t\t// hidden_setter handling\n\t\tif(config.modal)\n\t\t\tthis._modal = true;\n\t\t// head_setter handling\n\t\tif(config.headHeight)\n\t\t\tthis._settings.headHeight = config.headHeight;\n\t\tif(config.close)\n\t\t\tthis._settings.close = config.close;\n\n\t\tthis.attachEvent(\"onViewMoveEnd\", function(){\n\t\t\tif(this._settings.position)\n\t\t\t\tdelete this._settings.position;\n\t\t});\n\t},\n\t_ignore_clicks:function(e){\n\t\tconst popups = state._popups;\n\t\tlet index = popups.find(this);\n\t\tif (index == -1)\n\t\t\tindex = popups.length - 1;\n\n\t\te.click_view = index;\n\t},\n\tgetChildViews:function(){\n\t\tif (this._head_cell)\n\t\t\treturn [this._head_cell, this._body_cell];\n\t\telse\n\t\t\treturn [this._body_cell];\n\t},\n\tzIndex_setter:function(value){\n\t\tthis._viewobj.style.zIndex = value;\n\t\treturn value;\n\t},\n\t_remove:function(){ \n\t\tthis.body_setter();\n\t},\n\t_replace:function(new_view, old_view){\n\t\told_view = old_view || this._body_cell;\n\t\tconst isBody = old_view == this._body_cell;\n\n\t\told_view.destructor();\n\n\t\tif(isBody)\n\t\t\tthis._body_cell = new_view;\n\t\telse \n\t\t\tthis._head_cell = new_view;\n\n\t\t(isBody ? this._bodyobj : this._headobj).appendChild(new_view._viewobj);\n\n\t\tconst cell = new_view._viewobj.style;\n\n\t\tlet settings = { top:true, left:true, right:true, bottom:true };\n\t\tlet size = \"0px\";\n\n\t\tif(new_view.config.borderless === false){\n\t\t\tsettings = clone(this._settings._inner);\n\t\t\tsize = \"1px\";\n\t\t}\n\t\tnew_view._settings._inner = settings;\n\t\tcell.borderTopWidth = cell.borderBottomWidth = cell.borderLeftWidth = cell.borderRightWidth = size;\n\n\t\tthis.resize(true);\n\t},\n\tshow:function(node, mode, point){\n\t\tif (node === true){\n\t\t\t//recursive call from some child item\n\t\t\tif (!this._settings.hidden)\n\t\t\t\treturn;\n\t\t\tnode = null;\n\t\t}\n\n\t\tif(!this.callEvent(\"onBeforeShow\",arguments))\n\t\t\treturn false;\n\n\t\tthis._settings.hidden = false;\n\t\tthis._viewobj.style.zIndex = zIndex(this._settings.zIndex);\n\t\tif (this._settings.modal || this._modal){\n\t\t\tthis._modal_set(true);\n\t\t\tthis._modal = null; // hidden_setter handling\n\t\t}\n\n\t\tlet elPos, dx, dy;\n\t\tmode = mode || {};\n\t\tif (!mode.pos)\n\t\t\tmode.pos = this._settings.relative;\n\n\t\t//get position of source html node\n\t\t//we need to show popup which pointing to that node\n\t\tif (node){\n\t\t\t//if event was provided - get node info from it\n\t\t\tif (typeof node == \"object\" && !node.tagName){\n\t\t\t\t/*below logic is far from ideal*/\n\t\t\t\tif (node.target){\n\t\t\t\t\telPos = getPos(node);\n\t\t\t\t\tdx = 20;\n\t\t\t\t\tdy = 5;\n\t\t\t\t} else\n\t\t\t\t\telPos = node;\n\t\t\t} else {\n\t\t\t\tnode = toNode(node);\n\t\t\t\tassert(node,\"Not existing target for window:show\");\n\t\t\t\telPos = offset(node);\n\t\t\t}\n\n\t\t\t//size of body, we need to fit popup inside\n\t\t\tconst x = Math.max(window.innerWidth || 0, document.body.offsetWidth);\n\t\t\tconst y = Math.max(window.innerHeight || 0, document.body.offsetHeight);\n\n\t\t\t//size of node, near which popup will be rendered\n\t\t\tdx = dx || node.offsetWidth  || 0;\n\t\t\tdy = dy || node.offsetHeight || 0;\n\t\t\t//size of popup element\n\t\t\tconst size = this._last_size;\n\n\t\t\tlet fin_x = elPos.x;\n\t\t\tlet fin_y = elPos.y;\n\t\t\tlet point_y = 0;\n\t\t\tlet point_x = 0;\n\t\t\tlet scrollLeft = 0, scrollTop = 0;\n\t\t\tconst fit = this._settings.autofit;\n\t\t\tif (fit){\n\t\t\t\tconst nochange = (fit === \"node\");\n\t\t\t\tlet delta_x = 6, delta_y = 6, delta_point = 6;\n\t\t\t\tif (!this._settings.point)\n\t\t\t\t\tdelta_x = delta_y = delta_point = 0;\n\n\t\t\t\t//default pointer position - top \n\t\t\t\tpoint = \"top\";\n\t\t\t\tfin_y=0; fin_x = 0;\n\n\t\t\t\tscrollLeft = window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft;\n\t\t\t\t//if we want to place menu at righ, but there is no place move it to left instead\n\t\t\t\tif (x - elPos.x - dx < size[0] && mode.pos == \"right\" && !nochange)\n\t\t\t\t\tmode.pos = \"left\";\n\n\t\t\t\tif (mode.pos == \"right\"){\n\t\t\t\t\tfin_x = elPos.x+delta_x+dx; \n\t\t\t\t\tdelta_y = -dy;\n\t\t\t\t\tpoint = \"left\";\n\t\t\t\t\tpoint_y = Math.round(elPos.y+dy/2);\n\t\t\t\t\tpoint_x = fin_x - delta_point;\n\t\t\t\t} else if (mode.pos == \"left\"){\n\t\t\t\t\tfin_x = elPos.x-delta_x-size[0]-1;\n\t\t\t\t\tdelta_y = -dy;\n\t\t\t\t\tpoint = \"right\";\n\t\t\t\t\tpoint_y = Math.round(elPos.y+dy/2);\n\t\t\t\t\tpoint_x = fin_x + size[0]+1;\n\t\t\t\t} else  {\n\t\t\t\t\t//left border of screen\n\t\t\t\t\tif (elPos.x < scrollLeft){\n\t\t\t\t\t\tfin_x = scrollLeft;\n\t\t\t\t\t//popup exceed the right border of screen\n\t\t\t\t\t} else if (x+scrollLeft-elPos.x > size[0]){\n\t\t\t\t\t\tfin_x = elPos.x; //aligned\n\t\t\t\t\t} else{\n\t\t\t\t\t\tfin_x = x+scrollLeft-delta_x-size[0]; //not aligned\n\t\t\t\t\t}\n\n\t\t\t\t\tpoint_x = Math.round(elPos.x+dx/2);\n\t\t\t\t\t//when we have a small popup, point need to be rendered at center of popup\n\t\t\t\t\tpoint_x = Math.min(point_x, fin_x + size[0] - delta_point*3);\n\t\t\t\t}\n\n\t\t\t\t//if height is not fixed - use default position\n\t\t\t\tscrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;\n\t\t\t\tif (((!size[1] || (y+scrollTop-dy-elPos.y-delta_y > size[1])) || nochange) && mode.pos != \"top\"){\n\t\t\t\t\t//bottom\t\n\t\t\t\t\tfin_y = dy+elPos.y+delta_y - (!this._settings.point ? 0: 4);\n\t\t\t\t\tif (!point_y){\n\t\t\t\t\t\tpoint = \"top\";\n\t\t\t\t\t\tpoint_y = fin_y-delta_point;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//top\n\t\t\t\t\tfin_y = elPos.y-delta_y - size[1];\n\t\t\t\t\tif (fin_y < 0){\n\t\t\t\t\t\tfin_y = 0; \n\t\t\t\t\t\t//left|right point can be used, but there is no place for top point\n\t\t\t\t\t\tif (point == \"top\") point = false;\n\t\t\t\t\t} else if (!point_y){\n\t\t\t\t\t\tpoint = \"bottom\";\n\t\t\t\t\t\tfin_y --;\n\t\t\t\t\t\tpoint_y = fin_y+size[1]+1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst deltax = (mode.x || 0);\n\t\t\tconst deltay = (mode.y || 0);\n\n\t\t\tconst fixed = this._checkFixedPosition();\n\t\t\tthis.$view.style.position = fixed ? \"fixed\" : \"absolute\";\n\t\t\tif (fixed){\n\t\t\t\tfin_y = fin_y - scrollTop;\n\t\t\t\tpoint_y = point_y - scrollTop;\n\t\t\t}\n\n\t\t\tthis.setPosition(fin_x+deltax, fin_y+deltay);\n\t\t\tif (this._set_point){\n\t\t\t\tif (point && this._settings.point)\n\t\t\t\t\tthis._set_point(point,point_x+deltax, point_y+deltay, fixed);\n\t\t\t\telse\n\t\t\t\t\tthis._hide_point();\n\t\t\t}\n\t\t} else\n\t\t\tthis._setPosition(this._settings.left, this._settings.top);\n\n\t\tthis._viewobj.style.display = \"block\";\n\t\tthis._hide_timer = 1;\n\t\tdelay(function(){ this._hide_timer = 0; }, this, [], (env.fastClick ? 100 : 400));\n\n\t\tthis._render_hidden_views();\n\n\t\tif (this.config.autofocus){\n\t\t\tthis._prev_focus = UIManager.getFocus();\n\t\t\tUIManager.setFocus(this);\n\t\t}\n\n\t\tif (-1 == state._popups.find(this))\n\t\t\tstate._popups.push(this);\n\n\t\tthis.callEvent(\"onShow\",[]);\n\t}, \n\t_hide:function(e){\n\t\t//do not hide modal windows\n\t\tif (this._settings.hidden || this._settings.modal || !this._settings.escHide || this._hide_timer) return;\n\t\t//do not hide submenu when clicking on menu folder\n\t\tif (e && e.showpopup && (e.showpopup == this._settings.id || (this.getTopMenu && this.getTopMenu()._settings.id == e.showpopup))) return;\n\t\t//do not hide popup, when starting dnd with a long touch\n\t\tif (e && env.touch && e.longtouch_drag) return;\n\t\t//do not hide popup, when we have modal layer above the popup\n\t\tif (state._modality.length && this._viewobj.style.zIndex <= Math.max(...state._modality)) return;\n\n\t\t//ignore inside clicks and clicks in child-popups\n\n\t\tif (e){\n\t\t\tlet index = e.click_view;\n\t\t\tif (!index && index !== 0) index = -1;\n\n\t\t\tconst myindex = state._popups.find(this);\n\n\t\t\tif (myindex <= index) return;\n\t\t}\n\n\t\tthis._hide_single();\n\t},\n\thidden_setter:function(value){\n\t\tif(value) \n\t\t\tthis.hide();\n\t\telse\n\t\t\tthis.show();\n\t\treturn !!value;\n\t},\n\thide:function(){\n\t\tconst index = this._hide_single();\n\t\tthis._hide_sub_popups(index);\n\t},\n\t_hide_single:function(){\n\t\tif (this.$destructed || this._settings.hidden) return;\n\n\t\tif (this._settings.modal)\n\t\t\tthis._modal_set(false);\n\n\t\tthis._hiding_process();\n\n\t\tif (this._settings.autofocus){\n\t\t\tconst el = document.activeElement;\n\t\t\t//as result of hotkey, we can have a activeElement set to document.body\n\t\t\tif (el && this._viewobj && (this._viewobj.contains(el) || el === document.body)){\n\t\t\t\tUIManager.setFocus(this._prev_focus);\n\t\t\t\tthis._prev_focus = null;\n\t\t\t}\n\t\t}\n\n\t\t// clear state\n\t\tconst index = state._popups.find(this);\n\t\tif (index > -1)\n\t\t\tstate._popups.removeAt(index);\n\n\t\treturn index;\n\t},\n\t_hiding_process:function(){\n\t\tif (this._settings.position == \"top\"){\n\t\t\tanimate(this._viewobj, {type: \"slide\", x:0, y:-(this._content_height+20), duration: 300,\n\t\t\t\tcallback:this._hide_callback, master:this});\n\t\t} else \n\t\t\tthis._hide_callback();\n\t},\n\t//hide all child-popups\n\t_hide_sub_popups:function(index){\n\t\tif (index > -1){\n\t\t\tconst order = state._popups;\n\t\t\tfor (let i=order.length-1; i>=index; i--)\n\t\t\t\tif (order[i]._hide_point)\t//hide only popups, skip windows\n\t\t\t\t\torder[i]._hide_single();\n\t\t}\n\t},\n\tdestructor: function() {\n\t\tthis.hide();\n\t\tDestruction.destructor.apply(this, []);\n\t},\n\t_hide_callback:function(){\n\t\tif (!this.$destructed){\n\t\t\tthis._viewobj.style.display = \"none\";\n\t\t\tthis._settings.hidden = true;\n\t\t\tthis.callEvent(\"onHide\",[]);\n\t\t}\n\t},\n\tclose:function(){\n\t\tthis.destructor(); \n\t},\n\t_inner_body_set:function(value){\n\t\tif (typeof value.borderless == \"undefined\")\n\t\t\tvalue.borderless = true;\n\t},\n\tbody_setter:function(value){\n\t\tif (typeof value != \"object\")\n\t\t\tvalue = {template:value };\n\t\tthis._inner_body_set(value);\n\n\t\tstate._parent_cell = this;\n\t\tthis._body_cell = ui._view(value);\n\n\t\tthis._bodyobj.appendChild(this._body_cell._viewobj);\n\t\treturn value;\n\t},\n\thead_setter:function(value){\n\t\tif (value === false) return value;\n\n\t\tconst height = this._settings.headHeight;\n\t\tconst text = typeof value == \"string\";\n\t\tconst config = { height, padding:0, css: \"webix_win_title\", type:\"header\", borderless:true };\n\t\tif(text){\n\t\t\tthis._viewobj.setAttribute(\"aria-label\", value);\n\t\t\tvalue = { template:value };\n\t\t}\n\t\tif(value.view == \"template\" || (!value.view && value.template)){\n\t\t\textend(value, config);\n\t\t}\n\t\tif(text && this.config.close){\n\t\t\tvalue = { padding:{ left: $active.inputHeight+2, right:2 }, cols:[\n\t\t\t\tvalue,\n\t\t\t\t{ height, view:\"icon\", icon:\"wxi-close\", click:()=>{\n\t\t\t\t\tthis.hide();\n\t\t\t\t}}\n\t\t\t]};\n\t\t}\n\t\telse\n\t\t\textend(value, {borderless:true});\n\n\t\tstate._parent_cell = this;\n\t\tthis._head_cell = ui._view(value);\n\n\t\tconst template = this._head_cell._viewobj.querySelector(\".webix_win_title>div\");\n\t\tif(template)\n\t\t\ttemplate.style.lineHeight = height + \"px\";\n\n\t\tthis._headobj.appendChild(this._head_cell._viewobj);\n\t\treturn value;\n\t},\n\tgetBody:function(){\n\t\treturn this._body_cell;\n\t},\n\tgetHead:function(){\n\t\treturn this._head_cell;\n\t},\n\tadjust:function(){ return this.resize(); },\n\tresizeChildren:function(){\n\t\tif (this._body_cell)\n\t\t\tthis.resize();\n\t},\n\tresize:function(){\n\t\tbaseview.api.adjust.call(this);\n\t\tcallEvent(\"onResize\", []);\n\t\tif (this.isVisible()){\n\t\t\tthis._setPosition(this._settings.left, this._settings.top);\n\t\t}\n\t},\n\t_checkFixedPosition: function() {\n\t\tif(this._settings.master) {\n\t\t\tconst top = $$(this._settings.master).getTopParentView().$view;\n\t\t\treturn top && top.style.position === \"fixed\";\n\t\t}\n\t\treturn false;\n\t},\n\t_setPosition:function(x,y){\n\t\tif ((this._settings.position || this._checkFixedPosition())){\n\t\t\tthis.$view.style.position = \"fixed\";\n\n\t\t\tconst width = this._content_width;\n\t\t\tconst height = this._content_height;\n\t\t\tif (width <= 0 || height <= 0) return;\n\n\t\t\tconst maxWidth = (window.innerWidth||document.documentElement.offsetWidth);\n\t\t\tconst maxHeight = (window.innerHeight||document.documentElement.offsetHeight);\n\t\t\tlet left = Math.round((maxWidth-width)/2);\n\t\t\tlet top = Math.round((maxHeight-height)/2);\n\n\t\t\tif (typeof this._settings.position == \"function\"){\n\t\t\t\tconst state = { \tleft:left, top:top, \n\t\t\t\t\twidth:width, height:height, \n\t\t\t\t\tmaxWidth:maxWidth, maxHeight:maxHeight };\n\t\t\t\tthis._settings.position.call(this, state);\n\t\t\t\tif (state.width != width || state.height != height){\n\t\t\t\t\tthis._settings.width = state.width;\n\t\t\t\t\tthis._settings.height = state.height;\n\t\t\t\t\tthis.$setSize(state.width, state.height);\n\t\t\t\t}\n\t\t\t\tthis.setPosition(state.left, state.top);\n\t\t\t} else {\n\t\t\t\tif (this._settings.position == \"top\"){\n\t\t\t\t\ttop = -1*height;\n\t\t\t\t}\n\t\t\t\t//popup inside a fixed win\n\t\t\t\tif(!this._settings.position){\n\t\t\t\t\tleft = this._settings.left || left;\n\t\t\t\t\ttop = this._settings.top || top;\n\t\t\t\t}\n\t\t\t\tthis.setPosition(left, top);\n\t\t\t}\n\n\t\t\tif (this._settings.position == \"top\")\n\t\t\t\tanimate(this._viewobj, {type: \"slide\", x:0, y:height-((this._settings.padding||0)*2), duration: 300 ,callback:this._topPositionCallback, master:this});\n\t\t} else \n\t\t\tthis.setPosition(x,y);\n\t},\n\t_topPositionCallback:function(node){\n\t\tanimate.clear(node);\n\t\tthis._settings.top=-((this._settings.padding||0)*2);\n\t\tthis.setPosition(this._settings.left, this._settings.top);\n\t},\n\tsetPosition:function(x,y){\n\t\tthis._viewobj.style.top = y+\"px\";\n\t\tthis._viewobj.style.left = x+\"px\";\n\t\tthis._settings.left = x; this._settings.top=y;\n\t},\n\t$getSize:function(dx, dy){\n\t\tconst _borders = this._settings._inner;\n\t\tif (_borders){\n\t\t\tdx += (_borders.left?0:1)+(_borders.right?0:1);\n\t\t\tdy += (_borders.top?0:1)+(_borders.bottom?0:1);\n\t\t}\n\t\t//line between head and body\n\t\tif (this._settings.head)\n\t\t\tdy += 1;\n\n\t\tconst size =  this._body_cell.$getSize(0,0);\n\t\tlet headMinWidth = 0;\n\t\tif (this._head_cell){\n\t\t\tconst head_size = this._head_cell.$getSize(0,0);\n\t\t\tif (head_size[3]==head_size[2])\n\t\t\t\tthis._settings.headHeight = head_size[3];\n\t\t\tdy += this._settings.headHeight;\n\t\t\theadMinWidth = head_size[0];\n\t\t}\n\n\t\tif (this._settings.fullscreen){\n\t\t\tconst width = window.innerWidth || document.body.clientWidth;\n\t\t\tconst height = window.innerHeight || document.body.clientHeight;\n\t\t\treturn [width, width, height, height];\n\t\t}\n\n\t\t//get layout sizes\n\t\tconst self_size = base.api.$getSize.call(this, 0, 0);\n\n\t\t//use child settings if layout's one was not defined\n\t\tif (headMinWidth && size[1] > 100000)\n\t\t\tsize[0] = Math.max(headMinWidth, size[0]);\n\n\t\tself_size[1] = Math.min(self_size[1],(size[1]>=100000&&self_size[1]>=100000?Math.max(size[0], self_size[0]):size[1])+dx);\n\t\tself_size[3] = Math.min(self_size[3],(size[3]>=100000&&self_size[3]>=100000?Math.max(size[2], self_size[2]):size[3])+dy);\n\n\t\tself_size[0] = Math.min(Math.max(self_size[0],size[0] + dx), self_size[1]);\n\t\tself_size[2] = Math.min(Math.max(self_size[2],size[2] + dy), self_size[3]);\n\n\t\treturn self_size;\n\t},\n\t$setSize:function(x,y){\n\t\tbase.api.$setSize.call(this,x,y);\n\t\tx = this._content_width;\n\t\ty = this._content_height;\n\t\tif (this._settings.head === false) {\n\t\t\tthis._headobj.style.display=\"none\";\n\t\t\tthis._body_cell.$setSize(x,y);\n\t\t} else { \n\t\t\tthis._head_cell.$setSize(x,this._settings.headHeight);\n\t\t\tthis._body_cell.$setSize(x,y-this._settings.headHeight);\n\t\t}\n\t},\n\t$skin:function(){\n\t\tthis.defaults.headHeight = $active.barHeight;\n\t},\n\tdefaults:{\n\t\ttop:0,\n\t\tleft:0,\n\t\tautofit:true,\n\t\trelative:\"bottom\",\n\t\tbody:\"\",\n\t\thead:\"\",\n\t\thidden: true,\n\t\tautofocus:true,\n\t\tminWidth:300,\n\t\tminHeight:200,\n\t\tescHide:true\n\t}\n};\n\n//global longtouch handler\nattachEvent(\"onLongTouch\", function(ev){\n\tif (!ev || !ev.target) return;\n\n\tlet view = $$(ev.target);\n\tif (view){\n\t\tview = view.queryView(a => !a.getParentView(), \"parent\")||view;\n\n\t\tconst popups = state._popups;\n\t\tconst index = popups.find(view);\n\t\tif (index !== -1) ev.click_view = index;\n\t}\n});\n\nconst view = protoUI(api, base.view, Movable, Modality, EventSystem, ResizeArea);\nexport default {api, view};","import state from \"../core/state\";\nimport UIManager from \"../core/uimanager\";\nimport {bind, delay} from \"../webix/helpers\";\nimport {event} from \"../webix/htmlevents\";\n\n\nconst clipbuffer = {\n\n\t_area: null,\n\t_blur_id: null,\n\t_ctrl: 0,\n\n\t/*! create textarea or returns existing\n\t **/\n\tinit: function() {\n\t\t// returns existing textarea\n\t\tif (this._area !== null)\n\t\t\treturn this._area;\n\n\t\tstate.destructors.push({ obj: this });\n\t\t// creates new textarea\n\t\tthis._area = document.createElement(\"textarea\");\n\t\tthis._area.className = \"webix_clipbuffer\";\n\t\tthis._area.setAttribute(/*@attr*/\"webixignore\", 1);\n\t\tthis._area.setAttribute(\"spellcheck\", \"false\");\n\t\tthis._area.setAttribute(\"autocapitalize\", \"off\");\n\t\tthis._area.setAttribute(\"autocorrect\", \"off\");\n\t\tthis._area.setAttribute(\"autocomplete\", \"off\");\n\t\tdocument.body.appendChild(this._area);\n\n\t\tevent(document.body, \"keydown\", bind(function(e){\n\t\t\tvar key = e.which || e.keyCode;\n\t\t\tvar ctrl = !!(e.ctrlKey || e.metaKey);\n\t\t\tif (key === 86 && ctrl){\n\t\t\t\tthis._area.value = \"\";\n\t\t\t\tdelay(this._paste, this, [e], 100);\n\t\t\t}\n\t\t}, this));\n\n\t\treturn this._area;\n\t},\n\tdestructor: function(){\n\t\tthis._area = null;\n\t},\n\t/*! set text into buffer\n\t **/\n\tset: function(text) {\n\t\tthis.init();\n\t\ttext = text === \"\" ? \"\\n\" : text;\n\t\tthis._area.value = text;\n\t\tthis.focus();\n\t},\n\t/*! select text in textarea\n\t **/\n\tfocus: function() {\n\t\t// if there is native browser selection, skip focus\n\t\tif(!this._isSelectRange()){\n\t\t\tthis.init();\n\t\t\tthis._area.focus();\n\t\t\tthis._area.select();\n\t\t}\n\n\t},\n\t/*! checks document selection\n\t **/\n\t_isSelectRange: function() {\n\t\tvar text = \"\";\n\t\tif (typeof window.getSelection != \"undefined\") {\n\t\t\ttext = window.getSelection().toString();\n\t\t} else if (typeof document.selection != \"undefined\" && document.selection.type == \"Text\") {\n\t\t\ttext = document.selection.createRange().text;\n\t\t}\n\t\treturn !!text;\n\t},\n\t/*! process ctrl+V pressing\n\t **/\n\t_paste: function(e) {\n\t\tvar trg = e.target;\n\t\tif (trg === this._area) {\n\t\t\tvar text = this._area.value;\n\t\t\tvar last_active = UIManager.getFocus();\n\t\t\tif (last_active && (!last_active.getEditor || !last_active.getEditor())){\n\t\t\t\tlast_active.callEvent(\"onPaste\", [text]);\n\t\t\t\tthis._area.select();\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default clipbuffer;","import {create, insertBefore, remove} from \"../webix/html\";\nimport env from \"../webix/env\";\nimport {extend, bind} from \"../webix/helpers\";\n\n\nconst CustomPrint = {\n\t$customPrint:function(options, htmlOnly){\n\t\tif(this._prePrint(options, htmlOnly))\n\t\t\treturn true;\n\n\t\tvar tableData = this._getTableArray(options);\n\t\tvar table = this._getTableHTML(tableData, options);\n\n\t\tif(htmlOnly)\n\t\t\treturn table;\n\n\t\tvar doc = create(\"div\", { \"class\":\"webix_ui_print\"});\n\t\tdoc.appendChild(table);\n\n\t\tinsertBefore(doc, options.docFooter, document.body);\n\t\twindow.print();\n\t\t\n\t\tremove(doc);\n\t},\n\t_prePrint:function(options, htmlOnly){\n\t\tif(!htmlOnly && (this.config.layout ==\"y\" || options.scroll || this.config.prerender || this.config.autoheight)) return true;\n\t\t\n\t\tif(this.config.layout ==\"x\")\n\t\t\textend(options || {}, {xCount:this.count(), nobreaks:true}, true);\n\t},\n\t_getPageWidth:function(options){\n\t\tvar size = options.size;\n\t\tvar width = size[options.mode == \"portrait\"?\"width\":\"height\"];\n\t\t\n\t\treturn Math.min(width*env.printPPI-2*env.printMargin);\n\t},\n\t_getTableArray:function(options, base, start){\n\t\tvar maxWidth = options.fit ==\"page\" ? Infinity : this._getPageWidth(options);\n\t\tvar xCount = options.xCount || this._getVisibleRange()._dx;\n\n\t\tvar tableArray = [];\n\t\tvar colrow = [];\n\t\tvar width = 0;\n\t\t\n\t\tvar newTableStart, rownum, colnum;\n\n\t\tstart = start || 0;\n\t\tbase = base || [];\n\n\t\tfor(var i = 0; i<this.data.order.length;){\n\t\t\tvar obj = this.data.pull[this.data.order[i]];\n\t\t\trownum = parseInt(i/xCount);\n\t\t\tcolnum = i-(rownum*xCount);\n\n\t\t\tif(obj && colnum>=start){\n\t\t\t\twidth += this.type.width;\n\t\t\t\t\n\t\t\t\t//start a new table, if cells do not fit page width\n\t\t\t\tif(width > maxWidth && colnum>start){ // 'colnum>start' ensures that a single long cell will have to fit the page\n\t\t\t\t\tnewTableStart = colrow.length+start;\n\t\t\t\t\ttableArray.push(colrow);\n\t\t\t\t\ti = i+(xCount-colrow.length);\n\t\t\t\t\tcolrow = [];\n\t\t\t\t\twidth = 0;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar cellValue = this.type.template(obj, this.type);\n\t\t\t\tvar className = this._itemClassName;\n\t\t\t\t\n\t\t\t\tvar style  = {\n\t\t\t\t\tdisplay:\"table-cell\",\n\t\t\t\t\theight:this.type.height + \"px\",\n\t\t\t\t\twidth:this.type.width + \"px\"\n\t\t\t\t};\n\t\t\t\t//push a cell to a row\n\t\t\t\tcolrow.push({\n\t\t\t\t\ttxt: cellValue,\n\t\t\t\t\tclassName: className+\" \"+(obj.$css || \"\"),\n\t\t\t\t\tstyle: style\n\t\t\t\t});\n\t\t\t\t//push a row to a table and start a new row\n\t\t\t\tif((i+1)%xCount === 0){\n\t\t\t\t\ttableArray.push(colrow);\n\t\t\t\t\tcolrow = [];\n\t\t\t\t\twidth = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\tbase.push(tableArray);\n\n\t\tif(newTableStart)\n\t\t\tthis._getTableArray(options, base, newTableStart);\t\n\n\t\treturn base;\n\t},\n\t_getTableHTML:function(tableData, options){\n\t\t\n\t\tvar container = create(\"div\");\n\n\t\ttableData.forEach(bind(function(table, i){\n\n\t\t\tvar tableHTML = create(\"table\", {\n\t\t\t\t\"class\":\"webix_table_print \"+this.$view.className,\n\t\t\t\t\"style\":\"border-collapse:collapse\"\n\t\t\t});\n\n\t\t\ttable.forEach(function(row){\n\t\t\t\tvar tr = create(\"tr\");\n\n\t\t\t\trow.forEach(function(column){\n\t\t\t\t\tvar td = create(\"td\");\n\n\n\t\t\t\t\tif (column.txt) td.innerHTML = column.txt;\n\t\t\t\t\tif (column.className) td.className = column.className;\n\t\t\t\t\tif (column.style) {\n\t\t\t\t\t\tvar keys = Object.keys(column.style);\n\t\t\t\t\t\tkeys.forEach(function(key){\n\t\t\t\t\t\t\tif (column.style[key])\n\t\t\t\t\t\t\t\ttd.style[key] = column.style[key];\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif(column.span){\n\t\t\t\t\t\tif(column.span.colspan > 1)\n\t\t\t\t\t\t\ttd.colSpan = column.span.colspan;\n\t\t\t\t\t\tif(column.span.rowspan > 1)\n\t\t\t\t\t\t\ttd.rowSpan = column.span.rowspan;\n\t\t\t\t\t}\n\t\t\t\t\ttr.appendChild(td);\n\t\t\t\t});\n\t\t\t\ttableHTML.appendChild(tr);\n\t\t\t});\n\t\t\tcontainer.appendChild(tableHTML);\n\n\t\t\tif(!options.nobreaks && i+1 < tableData.length){\n\t\t\t\tvar br = create(\"DIV\", {\"class\":\"webix_print_pagebreak\"});\n\t\t\t\tcontainer.appendChild(br);\n\t\t\t}\n\t\t\t\n\t\t}, this));\n\n\t\treturn container;\n\t}\n};\n\nexport default CustomPrint;","import {assert} from \"../webix/debug\";\nimport {copy, isUndefined, bind, isArray} from \"../webix/helpers\";\nimport {callEvent} from \"../webix/customevents\";\nimport {define} from \"../services\";\n\nimport {$$, proto} from \"../ui/core\";\n\nimport {ajax} from \"../load/ajax\";\nimport proxy from \"../load/proxy\";\nimport promise from \"../thirdparty/promiz\";\n\nimport Settings from \"../core/settings\";\nimport EventSystem from \"../core/eventsystem\";\nimport ValidateData from \"../core/validatedata\";\n\nconst _pull = {};\n\nexport function dp(name,getOnly){\n\tif (typeof name == \"object\" && name._settings)\n\t\tname = name._settings.id;\n\tif (_pull[name] || getOnly)\n\t\treturn _pull[name];\n\n\tif (typeof name == \"string\"||typeof name == \"number\")\n\t\tname = { master:$$(name) };\n\n\tvar dp = new DataProcessor(name);\n\tvar masterId = dp._settings.master._settings.id;\n\t_pull[masterId]=dp;\n\n\t$$(masterId).attachEvent(\"onDestruct\",function(){\n\t\t_pull[this._settings.id] = null;\n\t\tdelete _pull[this._settings.id];\n\t});\n\n\treturn dp;\n}\n\ndefine(\"dp\", dp);\n\ndp.$$ = function(id){\n\treturn _pull[id];\n};\n\n\nexport const DataProcessor = proto({\n\tdefaults: {\n\t\tautoupdate:true,\n\t\tupdateFromResponse:false,\n\t\tmode:\"post\",\n\t\toperationName:\"webix_operation\",\n\t\ttrackMove:false\n\t},\n\n\n\t/*! constructor\n\t **/\n\t$init: function() {\n\t\tthis.reset();\n\t\tthis._ignore = false;\n\t\tthis.name = \"DataProcessor\";\n\t\tthis.$ready.push(this._after_init_call);\n\t},\n\treset:function(){\n\t\tthis._updates = [];\n\t},\n\turl_setter:function(value){\n\t\t/*\n\t\t\twe can use simple url or mode->url\n\t\t*/\n\t\tvar mode = \"\";\n\t\tif (typeof value == \"string\"){\n\t\t\tvar parts = value.split(\"->\");\n\t\t\tif (parts.length > 1){\n\t\t\t\tvalue = parts[1];\n\t\t\t\tmode = parts[0];\n\t\t\t}\n\t\t} else if (value && value.mode){\n\t\t\tmode = value.mode;\n\t\t\tvalue = value.url;\n\t\t}\n\n\t\tif (mode)\n\t\t\treturn proxy(mode, value);\n\n\t\treturn value;\n\t},\n\tmaster_setter:function(value){\n\t\tvar store = value;\n\t\tif (value.name != \"DataStore\")\n\t\t\tstore = value.data;\n\n\t\tthis._settings.store = store;\n\t\treturn value;\n\t},\n\t_promise:function(handler){\n\t\tconst prev = this._waitSave;\n\t\tthis._waitSave = [];\n\t\t\n\t\thandler();\n\t\tconst result = Promise.all(this._waitSave);\n\n\t\tthis._waitSave = prev;\n\t\tif (prev)\n\t\t\tprev.push(result);\n\n\t\treturn result;\n\t},\n\t/*! attaching onStoreUpdated event\n\t **/\n\t_after_init_call: function(){\n\t\tconst store = this._settings.store;\n\t\tif (store){\n\t\t\tstore.attachEvent(\"onStoreUpdated\", bind(this._onStoreUpdated, this));\n\t\t\tstore.attachEvent(\"onDataMove\", bind(this._onDataMove, this));\n\t\t}\n\t},\n\tignore:function(code,master){\n\t\tvar temp = this._ignore;\n\t\tthis._ignore = true;\n\t\tcode.call((master||this));\n\t\tthis._ignore = temp;\n\t},\n\toff:function(){\n\t\tthis._ignore = true;\n\t},\n\ton:function(){\n\t\tthis._ignore = false;\n\t},\n\n\t_copy_data:function(source){\n\t\tvar obj = {};\n\t\tfor (var key in source)\t\n\t\t\tif (key.indexOf(\"$\")!==0)\n\t\t\t\tobj[key]=source[key];\n\t\treturn obj;\n\t},\n\tsave:function(id, operation, obj){\n\t\toperation = operation || \"update\";\n\t\treturn this._save_inner(id, obj, operation, true);\n\t},\n\t_save_inner:function(id, obj, operation, now){\n\t\tif (typeof id == \"object\") id = id.toString();\n\t\tif (!id || this._ignore === true || !operation || operation == \"paint\") return;\n\n\t\tvar store = this._settings.store;\n\t\tif (store){\n\t\t\tobj = obj || this._settings.store.getItem(id);\n\t\t\tif (store._scheme_serialize)\n\t\t\t\tobj = store._scheme_serialize(obj);\n\t\t}\n\n\t\tvar update = { id: id, data:this._copy_data(obj), operation:operation };\n\t\t//save parent id\n\t\tif (!isUndefined(obj.$parent)) update.data.parent = obj.$parent;\n\n\t\tif (update.operation != \"delete\"){\n\t\t\t//prevent saving of not-validated records\n\t\t\tvar master = this._settings.master;\n\t\t\tif (master && master.data && master.data.getMark && master.data.getMark(id, \"webix_invalid\"))\n\t\t\t\tupdate._invalid = true;\n\n\t\t\tif (!this.validate(null, update.data))\n\t\t\t\tupdate._invalid = true;\n\t\t}\n\n\t\tif (this._check_unique(update))\n\t\t\tthis._updates.push(update);\n\n\t\tif (this._settings.autoupdate || now)\n\t\t\treturn this._sendData(id);\n\t\t\t\n\t\treturn;\n\t},\n\t_onDataMove:function(sid, tindex, parent, targetid){\n\t\tif (this._settings.trackMove){\n\t\t\tvar obj = copy(this._settings.store.getItem(sid));\n\n\t\t\tobj.webix_move_index = tindex;\n\t\t\tobj.webix_move_id = targetid;\n\t\t\tobj.webix_move_parent = parent;\n\t\t\tthis._save_inner(sid, obj, \"order\");\n\t\t}\n\t},\n\t_onStoreUpdated: function(id, obj, operation){\n\t\tswitch (operation) {\n\t\t\tcase \"save\":\n\t\t\t\toperation = \"update\";\n\t\t\t\tbreak;\n\t\t\tcase \"update\":\n\t\t\t\toperation = \"update\";\n\t\t\t\tbreak;\n\t\t\tcase \"add\":\n\t\t\t\toperation = \"insert\";\n\t\t\t\tbreak;\n\t\t\tcase \"delete\":\n\t\t\t\toperation = \"delete\";\t\t\t\t\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t\treturn this._save_inner(id, obj, operation);\n\t},\n\t_check_unique:function(check){\n\t\tfor (var i = 0; i < this._updates.length; i++){\n\t\t\tvar one = this._updates[i];\n\t\t\tif (one.id == check.id && !one._in_progress){\n\t\t\t\tif (check.operation == \"delete\"){\n\t\t\t\t\tif (one.operation == \"insert\")\n\t\t\t\t\t\tthis._updates.splice(i,1);\n\t\t\t\t\telse \n\t\t\t\t\t\tone.operation = \"delete\";\n\t\t\t\t}\n\t\t\t\tone.data = check.data;\n\t\t\t\tone._invalid = check._invalid;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tsend:function(){\n\t\treturn this._sendData();\n\t},\n\t_sendData: function(triggerId){\n\t\tif (!this._settings.url)\n\t\t\treturn;\n\n\t\tvar wait;\n\t\tvar marked = this._updates;\n\t\tvar to_send = [];\n\t\tvar url = this._settings.url;\n\n\t\tfor (let i = 0; i < marked.length; i++) {\n\t\t\tvar tosave = marked[i];\n\n\t\t\tif (tosave._in_progress) continue;\n\t\t\tif (tosave._invalid) continue;\n\n\t\t\tvar id = tosave.id;\n\t\t\t// call to .save(id) without autoupdate mode will send the specific object only\n\t\t\tif (!this._settings.autoupdate && triggerId && triggerId != id)\n\t\t\t\tcontinue;\n\n\t\t\tvar operation = tosave.operation;\n\t\t\tvar precise_url = proxy.$parse((typeof url == \"object\" && !url.$proxy) ? url[operation] : url);\n\t\t\tvar custom = precise_url && (precise_url.$proxy || typeof precise_url === \"function\");\n\n\t\t\tif (!precise_url) continue;\n\n\t\t\tconst store = this._settings.store;\n\t\t\tif (store && store._scheme_save)\n\t\t\t\tstore._scheme_save(tosave.data);\n\n\t\t\tif (!this.callEvent(\"onBefore\"+operation, [id, tosave]))\n\t\t\t\tcontinue;\n\t\t\ttosave._in_progress = true;\n\n\t\t\tif (!this.callEvent(\"onBeforeDataSend\", [tosave])) return;\n\n\t\t\ttosave.data = this._updatesData(tosave.data);\n\n\t\t\tlet result;\n\t\t\tif (precise_url.$proxy){\n\t\t\t\tif (precise_url.save){\n\t\t\t\t\t//proxy\n\t\t\t\t\tresult = precise_url.save(this.config.master, tosave, this);\n\t\t\t\t}\n\t\t\t\tto_send.push(tosave);\n\t\t\t} else {\n\t\t\t\tif (operation == \"insert\")\n\t\t\t\t\tdelete tosave.data.id;\n\t\t\t\t\n\t\t\t\tif (custom){\n\t\t\t\t\t//save function\n\t\t\t\t\tresult = precise_url.call(this.config.master, tosave.id, tosave.operation, tosave.data);\n\t\t\t\t} else {\n\t\t\t\t\t//normal url\n\t\t\t\t\ttosave.data[this._settings.operationName] = operation;\n\n\t\t\t\t\tresult = this._send(precise_url, tosave.data, this._settings.mode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (result){\n\t\t\t\tresult = this._proxy_on_save(result, { id: tosave.id, status: tosave.operation });\n\t\t\t\tif (triggerId && id === triggerId){\n\t\t\t\t\twait = result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.callEvent(\"onAfterDataSend\", [tosave]);\n\t\t}\n\n\t\tif (url.$proxy && url.saveAll && to_send.length){\n\t\t\tlet result = url.saveAll(this.config.master, to_send, this);\n\t\t\tif (result){\n\t\t\t\tresult = this._proxy_on_save(result, null);\n\t\t\t\tif (!wait)\n\t\t\t\t\twait = result;\n\t\t\t}\n\t\t}\n\n\t\treturn wait;\n\t},\n\t_proxy_on_save:function(result, state){\n\t\tif(result){\n\t\t\tif(!result.then)\n\t\t\t\tresult = promise.resolve(result);\n\n\t\t\tresult = result.then((data) => {\n\t\t\t\tif (data && typeof data.json == \"function\")\n\t\t\t\t\tdata = data.json();\n\n\t\t\t\tvar processed;\n\t\t\t\tif (state === null){\n\t\t\t\t\tprocessed = this._processResult(data); //array of responses\n\t\t\t\t} else {\n\t\t\t\t\tprocessed = this._processResult(state, \"\", data, -1); //text, data, loader\n\t\t\t\t}\n\n\t\t\t\tif (!processed)\n\t\t\t\t\tthrow processed; // trigger rejection\n\n\t\t\t\treturn processed;\n\t\t\t}, (x) => {\n\t\t\t\tthis._processError(state, \"\", null, x);\n\t\t\t\tthrow x;\n\t\t\t});\n\n\t\t\tif (this._waitSave)\n\t\t\t\tthis._waitSave.push(result);\n\n\t\t\treturn result;\n\t\t}\n\t},\n\n\t/*! process updates list to POST and GET params according dataprocessor protocol\n\t *\t@param updates\n\t *\t\tlist of objects { id: \"item id\", data: \"data hash\", operation: \"type of operation\"}\n\t *\t@return\n\t *\t\tobject { post: { hash of post params as name: value }, get: { hash of get params as name: value } }\n\t **/\n\n\n\n\t_updatesData:function(source){\n\t\tvar target = {};\n\t\tfor (var j in source){\n\t\t\tif (j.indexOf(\"$\")!==0)\n\t\t\t\ttarget[j] = source[j];\n\t\t}\n\t\treturn target;\n\t},\n\n\n\n\t/*! send dataprocessor query to server\n\t *\tand attach event to process result\n\t *\t@param url\n\t *\t\tserver url\n\t *\t@param get\n\t *\t\thash of get params\n\t *\t@param post\n\t *\t\thash of post params\n\t *\t@mode\n\t *\t\t'post' or 'get'\n\t **/\n\t_send: function(url, post, mode) {\n\t\tassert(url, \"url was not set for DataProcessor\");\n\t\treturn ajax()[mode](url, post);\n\t},\n\tattachProgress:function(start, end, error){\n\t\tthis.attachEvent(\"onBeforeDataSend\", start);\n\t\tthis.attachEvent(\"onAfterSync\", end);\n\t\tthis.attachEvent(\"onAfterSaveError\", error);\n\t\tthis.attachEvent(\"onLoadError\", error);\n\t},\n\t_processError:function(id, text, data, loader){\n\t\tif (id)\n\t\t\tthis._innerProcessResult(true, id.id, false, id.status, false, {text:text, data:data, loader:loader});\n\t\telse {\n\t\t\tthis.callEvent(\"onLoadError\", arguments);\n\t\t\tcallEvent(\"onLoadError\", [text, data, loader, this]);\n\t\t}\n\t},\n\t_innerProcessResult:function(error, id, newid, status, obj, details){\n\t\tvar master = this._settings.master;\n\t\tvar update = this.getItemState(id);\n\t\tupdate._in_progress = false;\n\n\n\n\t\tif (error){\n\t\t\tif (this.callEvent(\"onBeforeSaveError\", [id, status, obj, details])){\n\t\t\t\tupdate._invalid = true;\n\t\t\t\tif(this._settings.undoOnError && master._settings.undo){\n\t\t\t\t\tthis.ignore(function(){\n\t\t\t\t\t\tmaster.undo(id);\n\t\t\t\t\t});\n\t\t\t\t\tthis.setItemState(id, false);\n\t\t\t\t}\n\t\t\t\tthis.callEvent(\"onAfterSaveError\", [id, status, obj, details]);\n\t\t\t}\n\t\t\treturn;\n\t\t} else\n\t\t\tthis.setItemState(id, false);\n\n\t\tconst store = this._settings.store;\n\t\tif (store && store.exists(id)){\n\t\t\t//update from response\n\t\t\tif (newid && id != newid)\n\t\t\t\tstore.changeId(id, newid);\n\n\t\t\tif (obj && status != \"delete\" && this._settings.updateFromResponse)\n\t\t\t\tthis.ignore(function(){\t\t\t\t\n\t\t\t\t\tstore.updateItem(newid || id, obj);\n\t\t\t\t});\n\t\t}\n\t\t\t\n\n\t\t//clean undo history, for the saved record\n\t\tif(this._settings.undoOnError && master._settings.undo)\n\t\t\tmaster.removeUndo(newid||id);\n\n\t\tthis.callEvent(\"onAfterSave\",[obj, id, details]);\n\t\tthis.callEvent(\"onAfter\"+status, [obj, id, details]);\n\n\t\treturn obj || {};\n\t},\n\tprocessResult: function(state, hash, details){\n\t\t//compatibility with custom json response\n\t\tvar error = (hash && (hash.status == \"error\" || hash.status == \"invalid\"));\n\t\tvar newid = (hash ? ( hash.newid || hash.id ) : false);\n\n\t\treturn this._innerProcessResult(error, state.id, newid, state.status, hash, details);\n\t},\n\t// process saving from result\n\t_processResult: function(state, text, data, loader){\n\t\tvar finalResult;\n\t\tthis.callEvent(\"onBeforeSync\", [state, text, data, loader]);\n\n\t\tif(isArray(state)){ //saveAll results\n\t\t\tfinalResult = [];\n\t\t\tstate.forEach((one) => {\n\t\t\t\tfinalResult.push(this.processResult(one, one, {}));\n\t\t\t});\n\t\t}\n\t\telse{\n\t\t\tif (loader === -1){\n\t\t\t\t//callback from promise\n\t\t\t\tfinalResult = this.processResult(state, data, {});\n\t\t\t} else {\n\t\t\t\tvar proxy = this._settings.url;\n\t\t\t\tif (proxy.$proxy && proxy.result){\n\t\t\t\t\tfinalResult = proxy.result(state, this._settings.master, this, text,  data, loader) || {};\n\t\t\t\t} else {\n\t\t\t\t\tvar hash;\n\t\t\t\t\tif (text){\n\t\t\t\t\t\thash = data.json();\n\t\t\t\t\t\t//invalid response\n\t\t\t\t\t\tif (text && (hash === null || typeof hash == \"undefined\"))\n\t\t\t\t\t\t\thash = { status:\"error\" };\n\t\t\t\t\t}\n\t\t\t\t\tfinalResult = this.processResult(state, hash,  {text:text, data:data, loader:loader});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.callEvent(\"onAfterSync\", [state, text, data, loader]);\n\t\treturn finalResult;\n\t},\n\n\n\t/*! if it's defined escape function - call it\n\t *\t@param value\n\t *\t\tvalue to escape\n\t *\t@return\n\t *\t\tescaped value\n\t **/\n\tescape: function(value) {\n\t\tif (this._settings.escape)\n\t\t\treturn this._settings.escape(value);\n\t\telse\n\t\t\treturn encodeURIComponent(value);\n\t},\n\tgetState:function(){\n\t\tif (!this._updates.length) return false;\n\t\tfor (var i = this._updates.length - 1; i >= 0; i--)\n\t\t\tif (this._updates[i]._in_progress)\n\t\t\t\treturn \"saving\";\n\n\t\treturn true;\n\t},\n\tgetItemState:function(id){\n\t\tvar index = this._get_stack_index(id);\n\t\treturn this._updates[index] || null;\n\t},\n\tsetItemState:function(id, state){\n\t\tif (state){\n\t\t\tthis._save_inner(id, null, \"update\");\n\t\t} else{\n\t\t\tvar index = this._get_stack_index(id);\n\t\t\tif (index > -1)\n\t\t\t\tthis._updates.splice(index, 1);\n\t\t}\n\t},\n\t_get_stack_index: function(id) {\n\t\tvar index = -1;\n\t\tfor (var i=0; i < this._updates.length; i++)\n\t\t\tif (this._updates[i].id == id) {\n\t\t\t\tindex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\treturn index;\n\t}\n\n}, Settings, EventSystem, ValidateData);","import {extend, _to_array, uid, isUndefined, copy, isArray, bind} from \"../webix/helpers\";\nimport {$$} from \"../ui/core\";\nimport {assert} from \"../webix/debug\";\nimport {callEvent} from \"../webix/customevents\";\nimport i18n from \"../webix/i18n\";\n\nimport EventSystem from \"./eventsystem\";\nimport DataDriver from \"../load/drivers/index\";\n\n/*\n\tDataStore is not a behavior, it standalone object, which represents collection of data.\n\tCall provideAPI to map data API\n\n\t@export\n\t\texists\n\t\tgetIdByIndex\n\t\tgetIndexById\n\t\tget\n\t\tset\n\t\trefresh\n\t\tcount\n\t\tsort\n\t\tfilter\n\t\tnext\n\t\tprevious\n\t\tclearAll\n\t\tfirst\n\t\tlast\n*/\n\nfunction DataStore(){\n\tthis.name = \"DataStore\";\n\t\n\textend(this, EventSystem);\n\n\tthis.setDriver(\"json\");\t//default data source is an\n\tthis.pull = {};\t\t\t\t\t\t//hash of IDs\n\tthis.order = _to_array();\t\t//order of IDs\n\tthis._marks = {};\n}\n\nDataStore.prototype={\n\t//defines type of used data driver\n\t//data driver is an abstraction other different data formats - xml, json, csv, etc.\n\tsetDriver:function(type){\n\t\tassert(DataDriver[type],\"incorrect DataDriver\");\n\t\tthis.driver = DataDriver[type];\n\t},\n\t//process incoming raw data\n\t_parse:function(data){\n\t\tthis.callEvent(\"onParse\", [this.driver, data]);\n\n\t\tif (this._filter_order)\n\t\t\tthis.filter();\n\t\n\t\t//get size and position of data\n\t\tvar info = this.driver.getInfo(data);\n\n\t\tif (info.config)\n\t\t\tthis.callEvent(\"onServerConfig\",[info.config]);\n\n\t\tvar options = this.driver.getOptions(data);\n\t\tif (options)\n\t\t\tthis.callEvent(\"onServerOptions\", [options]);\n\n\t\t//get array of records\n\t\tvar recs = this.driver.getRecords(data);\n\n\t\tthis._inner_parse(info, recs);\n\n\t\t//in case of tree store we may want to group data\n\t\tif (this._scheme_group && this._group_processing && !this._not_grouped_order)\n\t\t\tthis._group_processing(this._scheme_group);\n\n\t\t//optional data sorting\n\t\tif (this._scheme_sort){\n\t\t\tthis.blockEvent();\n\t\t\tthis.sort(this._scheme_sort);\n\t\t\tthis.unblockEvent();\n\t\t}\n\n\t\tthis.callEvent(\"onStoreLoad\",[this.driver, data]);\n\t\t//repaint self after data loading\n\t\tthis.refresh();\n\t},\n\t_inner_parse:function(info, recs){\n\t\tvar from = info.from;\n\t\tvar subload = true;\n\t\tvar marks = false;\n\n\t\t//some data is loaded and new data doesn't have \"pos\" - assuming update\n\t\tif (!from && from !== 0 && this.order[0]){\n\t\t\tif (this._removeMissed){\n\t\t\t\t//update mode, create kill list\n\t\t\t\tmarks = {};\n\t\t\t\tfor (let i=0; i<this.order.length; i++)\n\t\t\t\t\tmarks[this.order[i]]=true;\n\t\t\t}\n\t\t\t\n\t\t\tsubload = false;\n\t\t\tfrom = this.order.length;\n\t\t} else \n\t\t\tfrom = (from || 0)*1;\n\n\t\tvar j=0;\n\t\tfor (let i=0; i<recs.length; i++){\n\t\t\t//get hash of details for each record\n\t\t\tvar temp = this.driver.getDetails(recs[i]);\n\t\t\tvar id = this.id(temp); \t//generate ID for the record\n\t\t\tif (!this.pull[id]){\t\t//if such ID already exists - update instead of insert\n\t\t\t\tthis.order[j+from]=id;\t\n\t\t\t\tj++;\n\t\t\t} else if (subload && this.order[j+from])\n\t\t\t\tj++;\n\n\t\t\tif(this.pull[id]){\n\t\t\t\textend(this.pull[id],temp,true);//add only new properties\n\t\t\t\tif (this._scheme_update)\n\t\t\t\t\tthis._scheme_update(this.pull[id]);\n\t\t\t\t//update mode, remove item from kill list\n\t\t\t\tif (marks)\n\t\t\t\t\tdelete marks[id];\n\t\t\t} else{\n\t\t\t\tthis.pull[id] = temp;\n\t\t\t\tif (this._scheme_init)\n\t\t\t\t\tthis._scheme_init(temp);\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\t//update mode, delete items which are not existing in the new xml\n\t\tif (marks){\n\t\t\tthis.blockEvent();\n\t\t\tfor (var delid in marks)\n\t\t\t\tthis.remove(delid);\n\t\t\tthis.unblockEvent();\n\t\t}\n\n\t\tvar endpos = info.size * 1;\n\t\tif (endpos) {\n\t\t\tif (!this.order[endpos-1])\n\t\t\t\tthis.order[endpos-1] = undefined;\n\t\t\tif (endpos < this.order.length)\n\t\t\t\tthis.order = _to_array(this.order.slice(0, endpos));\n\t\t}\n\t},\n\t//generate id for data object\n\tid:function(data){\n\t\treturn data.id||(data.id=uid());\n\t},\n\tchangeId:function(old, newid){\n\t\t//assert(this.pull[old],\"Can't change id, for non existing item: \"+old);\n\t\tif(old == newid) return;\n\t\t\n\t\tif(this.pull[old])\n\t\t\tthis.pull[newid] = this.pull[old];\n\t\t\n\t\tthis.pull[newid].id = newid;\n\t\tthis.order[this.order.find(old)]=newid;\n\t\tif (this._filter_order)\n\t\t\tthis._filter_order[this._filter_order.find(old)]=newid;\n\t\tif (this._marks[old]){\n\t\t\tthis._marks[newid] = this._marks[old];\n\t\t\tdelete this._marks[old];\n\t\t}\n\n\n\t\tthis.callEvent(\"onIdChange\", [old, newid]);\n\t\tif (this._render_change_id)\n\t\t\tthis._render_change_id(old, newid);\n\t\tdelete this.pull[old];\n\t},\n\t//get data from hash by id\n\tgetItem:function(id){\n\t\treturn this.pull[id];\n\t},\n\t//assigns data by id\n\tupdateItem:function(id, update, mode){\n\t\tif (typeof id === \"object\")\n\t\t\tid = id.toString();\n\n\t\tvar data = this.getItem(id);\n\t\tvar old = null;\n\n\t\t//check is change tracking active\n\t\tvar changeTrack = this.hasEvent(\"onDataUpdate\");\n\t\n\t\tassert(data, \"Invalid ID for updateItem\");\n\t\tassert(!update || !update.id || update.id == id, \"Attempt to change ID in updateItem\");\n\t\tif (!isUndefined(update) && data !== update){\n\t\t\t//preserve original object\n\t\t\tif (changeTrack)\n\t\t\t\told = copy(data);\n\n\t\t\tid = data.id;\t//preserve id\n\t\t\textend(data, update, true);\n\t\t\tdata.id = id;\n\t\t}\n\n\t\tif (this._scheme_update)\n\t\t\tthis._scheme_update(data);\n\n\t\tthis.callEvent(\"onStoreUpdated\",[id, data, (mode||\"update\")]);\n\n\t\tif (changeTrack)\n\t\t\tthis.callEvent(\"onDataUpdate\", [id, data, old]);\n\t},\n\t//sends repainting signal\n\trefresh:function(id){\n\t\tif (this._skip_refresh) return; \n\t\t\n\t\tif (id){\n\t\t\tif (this.exists(id))\n\t\t\t\tthis.callEvent(\"onStoreUpdated\",[id, this.pull[id], \"paint\"]);\n\t\t}else\n\t\t\tthis.callEvent(\"onStoreUpdated\",[null,null,null]);\n\t},\n\tsilent:function(code, master){\n\t\tthis._skip_refresh = true;\n\t\tcode.call(master||this);\n\t\tthis._skip_refresh = false;\n\t},\n\t//converts range IDs to array of all IDs between them\n\tgetRange:function(from,to){\t\t\n\t\t//if some point is not defined - use first or last id\n\t\t//BEWARE - do not use empty or null ID\n\t\tif (from)\n\t\t\tfrom = this.getIndexById(from);\n\t\telse \n\t\t\tfrom = (this.$min||this.startOffset)||0;\n\t\tif (to)\n\t\t\tto = this.getIndexById(to);\n\t\telse {\n\t\t\tto = this.$max === 0 ? 0 : Math.min((this.$max?this.$max-1:(this.endOffset||Infinity)),(this.count()-1));\n\t\t\tif (to<0) to = 0; //we have not data in the store\n\t\t}\n\n\t\tif (from>to){ //can be in case of backward shift-selection\n\t\t\tvar a=to; to=from; from=a;\n\t\t}\n\n\t\treturn this.getIndexRange(from,to);\n\t},\n\t//converts range of indexes to array of all IDs between them\n\tgetIndexRange:function(from,to){\n\t\tto=Math.min((to === 0 ? 0 :(to||Infinity)),this.count()-1);\n\t\t\n\t\tvar ret=_to_array(); //result of method is rich-array\n\t\tfor (var i=(from||0); i <= to; i++)\n\t\t\tret.push(this.getItem(this.order[i]));\n\t\treturn ret;\n\t},\n\t//returns total count of elements\n\tcount:function(){\n\t\treturn this.order.length;\n\t},\n\t//returns truy if item with such ID exists\n\texists:function(id){\n\t\treturn !!(this.pull[id]);\n\t},\n\t//nextmethod is not visible on component level, check DataMove.move\n\t//moves item from source index to the target index\n\tmove:function(sindex,tindex){\n\t\tassert(sindex>=0 && tindex>=0, \"DataStore::move\",\"Incorrect indexes\");\n\t\tif (sindex == tindex) return;\n\n\t\tvar id = this.getIdByIndex(sindex);\n\t\tvar obj = this.getItem(id);\n\n\t\tif (this._filter_order)\n\t\t\tthis._move_inner(this._filter_order, 0, 0, this.getIdByIndex(sindex), this.getIdByIndex(tindex));\n\n\t\tthis._move_inner(this.order, sindex, tindex);\n\t\t\n\t\t\n\t\t//repaint signal\n\t\tthis.callEvent(\"onStoreUpdated\",[id,obj,\"move\"]);\n\t},\n\t_move_inner:function(col, sindex, tindex, sid, tid){\n\t\tif (sid||tid){\n\t\t\tsindex = tindex = -1;\n\t\t\tfor (var i=0; i<col.length; i++){\n\t\t\t\tif (col[i] == sid && sindex<0)\n\t\t\t\t\tsindex = i;\n\t\t\t\tif (col[i] == tid && tindex<0)\n\t\t\t\t\ttindex = i;\n\t\t\t}\n\t\t}\n\t\tvar id = col[sindex];\n\t\tcol.removeAt(sindex);\t//remove at old position\n\t\tcol.insertAt(id,Math.min(col.length, tindex));\t//insert at new position\n\t},\n\tscheme:function(config){\n\t\tthis._scheme = {};\n\t\tthis._scheme_save = config.$save;\n\t\tthis._scheme_init = config.$init||config.$change;\n\t\tthis._scheme_update = config.$update||config.$change;\n\t\tthis._scheme_serialize = config.$serialize;\n\t\tthis._scheme_group = config.$group;\n\t\tthis._scheme_sort = config.$sort;\n\t\tthis._scheme_export = config.$export;\n\n\t\t//ignore $-starting properties, as they have special meaning\n\t\tfor (var key in config)\n\t\t\tif (key.substr(0,1) != \"$\")\n\t\t\t\tthis._scheme[key] = config[key];\n\t},\n\timportData:function(target, silent){\n\t\tvar data = target ? (target.data || target) : [];\n\t\tthis._filter_order = null;\n\n\t\tif (typeof data.serialize == \"function\"){\n\t\t\tthis.order = _to_array([].concat(data.order));\n\n\t\t\t//make full copy, to preserve object properties\n\t\t\t//[WE-CAN-DO-BETTER]\n\t\t\tif (this._make_full_copy){\n\t\t\t\tthis._make_full_copy = false;\n\t\t\t\tvar oldpull = this.pull;\n\t\t\t\tthis.pull = {};\n\t\t\t\tfor (let key in data.pull){\n\t\t\t\t\tvar old = oldpull[key];\n\t\t\t\t\tthis.pull[key] = copy(data.pull[key]);\n\t\t\t\t\tif (old && old.open) this.pull[key].open = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.pull = {};\n\t\t\t\tfor (let key in data.pull)\n\t\t\t\t\tthis.pull[key] = data.pull[key];\n\t\t\t}\n\n\t\t\tif (data.branch && this.branch){\n\t\t\t\tthis.branch = copy(data.branch);\n\t\t\t\tthis._filter_branch = null;\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis.order = _to_array();\n\t\t\tthis.pull = {};\n\t\t\tvar id, obj;\n\n\t\t\tif (isArray(target))\n\t\t\t\tfor (let key=0; key<target.length; key++){\n\t\t\t\t\tobj = id = target[key];\n\t\t\t\t\tif (typeof obj == \"object\")\n\t\t\t\t\t\tobj.id  = obj.id || uid();\n\t\t\t\t\telse\n\t\t\t\t\t\tobj = { id:id, value:id };\n\n\t\t\t\t\tthis.order.push(obj.id);\n\t\t\t\t\tif (this._scheme_init)\n\t\t\t\t\t\tthis._scheme_init(obj);\n\t\t\t\t\tthis.pull[obj.id] = obj;\n\t\t\t\t}\n\t\t\telse\n\t\t\t\tfor (let key in data){\n\t\t\t\t\tthis.order.push(key);\n\t\t\t\t\tthis.pull[key] = { id:key, value: data[key] };\n\t\t\t\t}\n\t\t}\n\t\tif (this._extraParser && !data.branch){\n\t\t\tthis.branch = { 0:[]};\n\t\t\tif (!this._datadriver_child)\n\t\t\t\tthis._set_child_scheme(\"data\");\n\n\t\t\tfor (var i = 0; i<this.order.length; i++){\n\t\t\t\tvar key = this.order[i];\n\t\t\t\tthis._extraParser(this.pull[key], 0, 0, false);\n\t\t\t}\n\t\t}\n\n\t\tthis.callEvent(\"onStoreLoad\",[]);\n\t\tif (!silent)\n\t\t\tthis.callEvent(\"onStoreUpdated\",[]);\n\t},\n\tsync:function(source, filter, silent){\n\t\tthis.unsync();\n\n\t\tvar type = typeof source;\n\t\tif (type == \"string\")\n\t\t\tsource = $$(source);\n\n\t\tif (type != \"function\" && type != \"object\"){\n\t\t\tsilent = filter;\n\t\t\tfilter = null;\n\t\t}\n\t\t\n\t\tif (source.name != \"DataStore\" && source.name != \"TreeStore\"){\n\t\t\tif (source.data && (source.data.name === \"DataStore\" || source.data.name === \"TreeStore\"))\n\t\t\t\tsource = source.data;\n\t\t\telse {\n\t\t\t\tthis._sync_source = source;\n\t\t\t\treturn callEvent(\"onSyncUnknown\", [this, source, filter]);\n\t\t\t}\n\t\t}\n\n\t\tvar\tsync_logic = bind(function(id, data, mode){\n\t\t\tif (this._skip_next_sync) return;\n\n\t\t\t//sync of tree-structure with after-filtering\n\t\t\t//we need to make a full copy, to preserve $count\n\t\t\t//[WE-CAN-DO-BETTER]\n\t\t\tif (filter && this.branch) this._make_full_copy = true;\n\t\t\tthis.importData(source, true);\n\t\t\t\n\t\t\tif (filter)\n\t\t\t\tthis.silent(filter);\n\t\t\tif (this._on_sync)\n\t\t\t\tthis._on_sync();\n\n\t\t\tif(!(id && data && mode) && !this.count())//clearall\n\t\t\t\tthis._marks = {};\n\t\t\tif(mode ==\"delete\" && this._marks[id])\n\t\t\t\tdelete this._marks[id];\n\n\t\t\tthis.callEvent(\"onSyncApply\",[]);\n\n\t\t\tif (!silent) \n\t\t\t\tthis.refresh();\n\t\t\telse\n\t\t\t\tsilent = false;\n\t\t}, this);\n\n\n\n\t\tthis._sync_events = [\n\t\t\tsource.attachEvent(\"onStoreUpdated\", sync_logic),\n\t\t\tsource.attachEvent(\"onIdChange\", bind(function(old, nid){ this.changeId(old, nid); this.refresh(nid); }, this))\n\t\t];\n\t\tthis._sync_source = source;\n\n\t\t//backward data saving\n\t\tthis._back_sync_handler = this.attachEvent(\"onStoreUpdated\", function(id, data, mode){\n\t\t\tif (mode == \"update\" || mode == \"save\"){\n\t\t\t\tthis._skip_next_sync = 1;\n\t\t\t\tsource.updateItem(id, data);\n\t\t\t\tthis._skip_next_sync = 0;\n\t\t\t}\n\t\t});\n\n\t\tsync_logic();\n\t},\n\tunsync:function(){\n\t\tif (this._sync_source){\n\t\t\tvar source = this._sync_source;\n\n\t\t\tif ((source.name != \"DataStore\" && source.name != \"TreeStore\") &&\n\t\t\t\t\t(!source.data || source.data.name != \"DataStore\" || source.data.name != \"TreeStore\")){\n\t\t\t\t//data sync with external component\n\t\t\t\tcallEvent(\"onUnSyncUnknown\", [this, source]);\n\t\t\t} else {\n\t\t\t\t//data sync with webix component\n\t\t\t\tfor (var i = 0; i < this._sync_events.length; i++)\n\t\t\t\t\tsource.detachEvent(this._sync_events[i]);\n\t\t\t\tthis.detachEvent(this._back_sync_handler);\n\t\t\t}\n\n\t\t\tthis._sync_source = null;\n\t\t}\n\t},\n\tdestructor:function(){\n\t\tthis.unsync();\n\n\t\tthis.pull = this.order = this._marks = null;\n\t\tthis._evs_events = this._evs_handlers = {};\n\t},\n\t//adds item to the store\n\tadd:function(obj,index){\n\t\t//default values\t\t\n\t\tif (this._scheme)\n\t\t\tfor (var key in this._scheme)\n\t\t\t\tif (isUndefined(obj[key]))\n\t\t\t\t\tobj[key] = this._scheme[key];\n\t\t\n\t\tif (this._scheme_init)\n\t\t\tthis._scheme_init(obj);\n\t\t\n\t\t//generate id for the item\n\t\tvar id = this.id(obj);\n\n\t\t//in case of treetable order is sent as 3rd parameter\n\t\tvar order = arguments[2]||this.order;\n\t\t\n\t\t//by default item is added to the end of the list\n\t\tvar data_size = order.length;\n\t\t\n\t\tif (isUndefined(index) || index < 0)\n\t\t\tindex = data_size; \n\t\t//check to prevent too big indexes\t\t\t\n\t\tif (index > data_size){\n\t\t\tassert(0, \"Warning\",\"DataStore:add\",\"Index of out of bounds\");\n\t\t\tindex = Math.min(order.length,index);\n\t\t}\n\t\tif (this.callEvent(\"onBeforeAdd\", [id, obj, index]) === false) return false;\n\n\t\tassert(!this.exists(id), \"Not unique ID\");\n\t\t\n\t\tthis.pull[id]=obj;\n\t\torder.insertAt(id,index);\n\t\tif (this._filter_order){\t//adding during filtering\n\t\t\t//we can't know the location of new item in full dataset, making suggestion\n\t\t\t//put at end of original dataset by default\n\t\t\tvar original_index = this._filter_order.length;\n\t\t\t//if some data exists, put at the same position in original and filtered lists\n\t\t\tif (this.order.length)\n\t\t\t\toriginal_index = Math.min((index || 0), original_index);\n\n\t\t\tthis._filter_order.insertAt(id,original_index);\n\t\t}\n\t\t\n\t\t//repaint signal\n\t\tthis.callEvent(\"onStoreUpdated\",[id,obj,\"add\"]);\n\t\tthis.callEvent(\"onAfterAdd\",[id,index]);\n\n\t\treturn obj.id;\n\t},\n\t\n\t//removes element from datastore\n\tremove:function(id){\n\t\t//id can be an array of IDs - result of getSelect, for example\n\t\tif (isArray(id)){\n\t\t\tfor (var i=0; i < id.length; i++)\n\t\t\t\tthis.remove(id[i]);\n\t\t\treturn;\n\t\t}\n\t\tif (this.callEvent(\"onBeforeDelete\",[id]) === false) return false;\n\t\t\n\t\tassert(this.exists(id), \"Not existing ID in remove command\"+id);\n\n\t\tvar obj = this.getItem(id);\t//save for later event\n\t\t//clear from collections\n\t\tthis.order.remove(id);\n\t\tif (this._filter_order) \n\t\t\tthis._filter_order.remove(id);\n\t\t\t\n\t\tdelete this.pull[id];\n\t\tif (this._marks[id])\n\t\t\tdelete this._marks[id];\n\n\t\t//repaint signal\n\t\tthis.callEvent(\"onStoreUpdated\",[id,obj,\"delete\"]);\n\t\tthis.callEvent(\"onAfterDelete\",[id]);\n\t},\n\t//deletes all records in datastore\n\tclearAll:function(soft){\n\t\t//instead of deleting one by one - just reset inner collections\n\t\tthis.pull = {};\n\t\tthis._marks = {};\n\t\tthis.order = _to_array();\n\t\t//this.feed = null;\n\t\tthis._filter_order = null;\n\t\tif (!soft)\n\t\t\tthis.url = null;\n\t\tthis.callEvent(\"onClearAll\",[soft]);\n\t\tthis.refresh();\n\t},\n\t//converts index to id\n\tgetIdByIndex:function(index){\n\t\tassert(index >= 0,\"DataStore::getIdByIndex Incorrect index\");\n\t\treturn this.order[index];\n\t},\n\t//converts id to index\n\tgetIndexById:function(id){\n\t\tif (!this.pull[id])\n\t\t\treturn -1;\n\t\telse\n\t\t\treturn this.order.find(id);\t//slower than getIdByIndex\n\t},\n\t//returns ID of next element\n\tgetNextId:function(id,step){\n\t\treturn this.order[this.getIndexById(id)+(step||1)];\n\t},\n\t//returns ID of first element\n\tgetFirstId:function(){\n\t\treturn this.order[0];\n\t},\n\t//returns ID of last element\n\tgetLastId:function(){\n\t\treturn this.order[this.order.length-1];\n\t},\n\t//returns ID of previous element\n\tgetPrevId:function(id,step){\n\t\treturn this.order[this.getIndexById(id)-(step||1)];\n\t},\n\t/*\n\t\tsort data in collection\n\t\t\tby - settings of sorting\n\n\t\tor\n\t\t\tby - array of settings\n\n\t\tor\n\n\t\t\tby - sorting function\n\t\t\tdir - \"asc\" or \"desc\"\n\n\t\tor\n\n\t\t\tby - property\n\t\t\tdir - \"asc\" or \"desc\"\n\t\t\tas - type of sortings\n\n\t\tSorting function will accept 2 parameters and must return 1,0,-1, based on desired order\n\n\t\treturns true if sorting was successful, false otherwise\n\t*/\n\tsort:function(by, dir, as){\n\t\tlet parameters;\n\t\tlet sort = by;\n\n\t\tif (isArray(sort)){\n\t\t\tsort = sort.map(a => this._sort_init(a));\n\t\t\tparameters = [sort];\n\t\t} else {\n\t\t\tsort = this._sort_init(by, dir, as);\n\t\t\tparameters = [sort.by, sort.dir, sort.as, sort];\n\t\t}\n\n\t\tif (!this.callEvent(\"onBeforeSort\", parameters)) return false;\n\t\tconst sorter = this.sorting.create(sort);\n\n\t\tthis.order = this._sort_core(sorter, this.order);\n\t\tif (this._filter_order)\n\t\t\tthis._filter_order = this._sort_core(sorter, this._filter_order);\n\n\t\t//repaint self\n\t\tthis.refresh();\n\n\t\tthis.callEvent(\"onAfterSort\", parameters);\n\t\treturn true;\n\t},\n\t_sort_init:function(by, dir, as){\n\t\tlet sort = by;\n\n\t\tif (typeof by == \"function\")\n\t\t\tsort = {as:by, dir:dir};\n\t\telse if (typeof by == \"string\")\n\t\t\tsort = {by:by, dir:dir, as:as};\n\n\t\tif (typeof sort.by == \"string\")\n\t\t\tsort.by = sort.by.replace(/#/g,\"\");\n\n\t\treturn sort;\n\t},\n\t_sort_core:function(sorter, order){\n\t\tif (this.order.length){\n\t\t\tvar pre = order.splice(0, this.$freeze);\n\t\t\t//get array of IDs\n\t\t\tvar neworder = _to_array();\n\t\t\tfor (var i=order.length-1; i>=0; i--)\n\t\t\t\tneworder[i] = this.pull[order[i]];\n\n\t\t\tneworder.sort(sorter);\n\t\t\treturn _to_array(pre.concat(neworder.map(function(obj){ \n\t\t\t\tassert(obj, \"Client sorting can't be used with dynamic loading\");\n\t\t\t\treturn this.id(obj);\n\t\t\t},this)));\n\t\t}\n\t\treturn order;\n\t},\n\t/*\n\t\tFilter datasource\n\t\t\n\t\ttext - property, by which filter\n\t\tvalue - filter mask\n\t\t\n\t\tor\n\t\t\n\t\ttext  - filter method\n\t\t\n\t\tFilter method will receive data object and must return true or false\n\t*/\n\t_filter_reset:function(preserve){\n\t\t//remove previous filtering , if any\n\t\tif (this._filter_order && !preserve){\n\t\t\tthis.order = this._filter_order;\n\t\t\tdelete this._filter_order;\n\t\t}\n\t},\n\t_filter_core:function(filter, value, preserve){\n\t\tvar neworder = _to_array();\n\t\tvar freeze = this.$freeze || 0;\n\t\t\n\t\tfor (var i=0; i < this.order.length; i++){\n\t\t\tvar id = this.order[i];\n\t\t\tif (i < freeze || filter(this.getItem(id),value))\n\t\t\t\tneworder.push(id);\n\t\t}\n\t\t//set new order of items, store original\n\t\tif (!preserve ||  !this._filter_order)\n\t\t\tthis._filter_order = this.order;\n\t\tthis.order = neworder;\n\t},\n\tfind:function(config, first){\n\t\tvar result = [];\n\n\t\tfor(var i in this.pull){\n\t\t\tvar data = this.pull[i];\n\n\t\t\tvar match = true;\n\t\t\tif (typeof config == \"object\"){\n\t\t\t\tfor (var key in config)\n\t\t\t\t\tif (data[key] != config[key]){\n\t\t\t\t\t\tmatch = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t} else if (!config(data))\n\t\t\t\tmatch = false;\n\n\t\t\tif (match)\n\t\t\t\tresult.push(data);\n\t\t\t\n\t\t\tif (first && result.length)\n\t\t\t\treturn result[0];\n\t\t}\n\n\t\treturn first ? null : result;\n\t},\n\tfilter:function(text,value,preserve){\n\t\t//unfilter call but we already in not-filtered state\n\t\tif (!text && !this._filter_order && !this._filter_branch) return;\n\t\tif (!this.callEvent(\"onBeforeFilter\", [text, value])) return;\n\t\t\n\t\tthis._filter_reset(preserve);\n\t\tif (!this.order.length) return;\n\t\t\n\t\t//if text not define -just unfilter previous state and exit\n\t\tif (text){\n\t\t\tvar filter = text;\n\t\t\tvalue = value||\"\";\n\t\t\tif (typeof text == \"string\"){\n\t\t\t\ttext = text.replace(/#/g,\"\");\n\t\t\t\tif (typeof value == \"function\")\n\t\t\t\t\tfilter = function(obj){\n\t\t\t\t\t\treturn value(obj[text]);\n\t\t\t\t\t};\n\t\t\t\telse{\n\t\t\t\t\tvalue = value.toString().toLowerCase();\n\t\t\t\t\tfilter = function(obj,value){\t//default filter - string start from, case in-sensitive\n\t\t\t\t\t\tassert(obj, \"Client side filtering can't be used with dynamic loading\");\n\t\t\t\t\t\treturn (obj[text]||\"\").toString().toLowerCase().indexOf(value)!=-1;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._filter_core(filter, value, preserve, this._filterMode);\n\t\t}\n\t\t//repaint self\n\t\tthis.refresh();\n\t\t\n\t\tthis.callEvent(\"onAfterFilter\", []);\n\t},\n\t/*\n\t\tIterate through collection\n\t*/\n\t_obj_array:function(){\n\t\tvar data = [];\n\t\tfor (var i = this.order.length - 1; i >= 0; i--)\n\t\t\tdata[i]=this.pull[this.order[i]];\n\n\t\treturn data;\n\t},\n\teach:function(method, master, all){\n\t\tvar order = this.order;\n\t\tif (all)\n\t\t\torder = this._filter_order || order;\n\n\t\tfor (var i=0; i<order.length; i++){\n\t\t\tif(order[i])\n\t\t\t\tmethod.call((master||this), this.getItem(order[i]), i);\n\t\t}\n\t},\n\t_methodPush:function(object,method){\n\t\treturn function(){ return object[method].apply(object,arguments); };\n\t},\n\t/*\n\t\tmap inner methods to some distant object\n\t*/\n\tprovideApi:function(target,eventable){\n\t\t\t\n\t\tif (eventable){\n\t\t\tthis.mapEvent({\n\t\t\t\tonbeforesort:\ttarget,\n\t\t\t\tonaftersort:\ttarget,\n\t\t\t\tonbeforeadd:\ttarget,\n\t\t\t\tonafteradd:\t\ttarget,\n\t\t\t\tonbeforedelete:\ttarget,\n\t\t\t\tonafterdelete:\ttarget,\n\t\t\t\tondataupdate:\ttarget/*,\n\t\t\t\tonafterfilter:\ttarget,\n\t\t\t\tonbeforefilter:\ttarget*/\n\t\t\t});\n\t\t}\n\t\t\t\n\t\tvar list = [\"sort\",\"add\",\"remove\",\"exists\",\"getIdByIndex\",\"getIndexById\",\"getItem\",\"updateItem\",\"refresh\",\"count\",\"filter\",\"find\",\"getNextId\",\"getPrevId\",\"clearAll\",\"getFirstId\",\"getLastId\",\"serialize\",\"sync\"];\n\t\tfor (var i=0; i < list.length; i++)\n\t\t\ttarget[list[i]] = this._methodPush(this,list[i]);\n\t},\n\taddMark:function(id, mark, css, value, silent){\n\t\tvar obj = this._marks[id]||{};\n\t\tthis._marks[id] = obj;\n\t\tif (!obj[mark]){\n\t\t\tobj[mark] = value||true;\t\n\t\t\tif (css){\n\t\t\t\tvar old_css = obj.$css||\"\";\n\t\t\t\tobj.$css = old_css+\" \"+mark;\n\t\t\t}\n\t\t\tif (!silent)\n\t\t\t\tthis.refresh(id);\n\t\t}\n\t\treturn obj[mark];\n\t},\n\tremoveMark:function(id, mark, css, silent){\n\t\tvar obj = this._marks[id];\n\t\tif (obj){\n\t\t\tif (obj[mark])\n\t\t\t\tdelete obj[mark];\n\t\t\tif (css){\n\t\t\t\tvar current_css = obj.$css;\n\t\t\t\tif (current_css){\n\t\t\t\t\tobj.$css = current_css.replace(mark, \"\").replace(\"  \",\" \");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!silent) \n\t\t\t\tthis.refresh(id);\n\t\t}\n\t},\n\tgetMark:function(id, mark){\n\t\tvar obj = this._marks[id];\n\t\treturn (obj?obj[mark]:false);\n\t},\n\tclearMark:function(name, css, silent){\n\t\tfor (var id in this._marks){\n\t\t\tvar obj = this._marks[id];\n\t\t\tif (obj[name]){\n\t\t\t\tdelete obj[name];\n\t\t\t\tif (css && obj.$css)\n\t\t\t\t\tobj.$css = obj.$css.replace(name, \"\").replace(\"  \",\" \");\n\t\t\t\tif (!silent)\n\t\t\t\t\tthis.refresh(id);\n\t\t\t}\n\t\t}\n\t},\t\n\t/*\n\t\tserializes data to a json object\n\t*/\n\tserialize: function(all){\n\t\tvar ids = this.order;\n\t\tif (all && this._filter_order)\n\t\t\tids = this._filter_order;\n\n\t\tvar result = [];\n\t\tfor(var i=0; i< ids.length;i++) {\n\t\t\tvar el = this.pull[ids[i]];\n\t\t\tif (this._scheme_serialize){\n\t\t\t\tel = this._scheme_serialize(el);\n\t\t\t\tif (el===false) continue;\n\t\t\t}\n\t\t\tresult.push(el);\n\t\t}\n\t\treturn result;\n\t},\n\tsorting:{\n\t\tcreate:function(config){\n\t\t\tif (isArray(config))\n\t\t\t\treturn this._multi(config);\n\t\t\treturn this._dir(config.dir, this._by(config.by, config.as));\n\t\t},\n\t\tas:{\n\t\t\t//handled by dataFeed\n\t\t\t\"server\":function(){\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\t\"date\":function(a,b){\n\t\t\t\ta = a-0; b = b-0;\n\t\t\t\tif (isNaN(b)) return 1;\n\t\t\t\tif (isNaN(a)) return -1;\n\n\t\t\t\treturn a>b?1:(a<b?-1:0);\n\t\t\t},\n\t\t\t\"int\":function(a,b){\n\t\t\t\ta = a*1; b = b*1;\n\t\t\t\tif (isNaN(b)) return 1;\n\t\t\t\tif (isNaN(a)) return -1;\n\n\t\t\t\treturn a>b?1:(a<b?-1:0);\n\t\t\t},\n\t\t\t\"string_strict\":function(a,b){\n\t\t\t\tif (!b) return 1;\n\t\t\t\tif (!a) return -1;\n\n\t\t\t\ta = a.toString(); b = b.toString();\n\t\t\t\treturn a>b?1:(a<b?-1:0);\n\t\t\t},\n\t\t\t\"string\":function(a,b){\n\t\t\t\tif (!b) return 1;\n\t\t\t\tif (!a) return -1;\n\n\t\t\t\ta = a.toString().toLowerCase(); b = b.toString().toLowerCase();\n\t\t\t\treturn a>b?1:(a<b?-1:0);\n\t\t\t},\n\t\t\t\"string_locale_strict\":function(a,b){\n\t\t\t\tif (!b) return 1;\n\t\t\t\tif (!a) return -1;\n\n\t\t\t\ta = a.toString(); b = b.toString();\n\t\t\t\treturn a.localeCompare(b, i18n.locale);\n\t\t\t},\n\t\t\t\"string_locale\":function(a,b){\n\t\t\t\tif (!b) return 1;\n\t\t\t\tif (!a) return -1;\n\n\t\t\t\ta = a.toString().toLowerCase(); b = b.toString().toLowerCase();\n\t\t\t\treturn a.localeCompare(b, i18n.locale);\n\t\t\t},\n\t\t\t\"raw\":function(a,b){\n\t\t\t\treturn a>b?1:(a<b?-1:0);\n\t\t\t}\n\t\t},\n\t\t_multi:function(methods){\n\t\t\tmethods = methods.map(c => this._dir(c.dir, this._by(c.by, c.as)));\n\n\t\t\treturn function(a,b){\n\t\t\t\tlet result, i = 0;\n\t\t\t\tdo {\n\t\t\t\t\tresult = methods[i](a,b);\n\t\t\t\t} while(!result && methods[++i]);\n\t\t\t\treturn result;\n\t\t\t};\n\t\t},\n\t\t_by:function(prop, method){\n\t\t\tlet customMethod;\n\n\t\t\tif (typeof method != \"function\")\n\t\t\t\tmethod = this.as[method||\"string\"];\n\t\t\telse\n\t\t\t\tcustomMethod = true;\n\n\t\t\tassert(method, \"Invalid sorting method\");\n\t\t\treturn function(a,b){\n\t\t\t\tif(!customMethod){\n\t\t\t\t\ta = a[prop];\n\t\t\t\t\tb = b[prop];\n\t\t\t\t}\n\t\t\t\treturn method(a, b, prop);\n\t\t\t};\n\t\t},\n\t\t_dir:function(prop, method){\n\t\t\tif (prop == \"asc\" || !prop)\n\t\t\t\treturn method;\n\t\t\treturn function(a,b){\n\t\t\t\treturn method(a,b)*-1;\n\t\t\t};\n\t\t}\n\t}\n};\n\n\nexport default DataStore;","import {ajax} from \"../load/ajax\";\nimport {bind, delay, extend, toFunctor, isArray} from \"../webix/helpers\";\nimport {proto} from \"../ui/core\";\n\nimport {dp} from \"../load/dataprocessor\";\nimport proxy from \"../load/proxy\";\nimport promise from \"../thirdparty/promiz\";\n\nimport DataStore from \"../core/datastore\";\nimport AtomDataLoader from \"../core/atomdataloader\";\n\n\n/*\n\tBehavior:DataLoader - load data in the component\n\t\n\t@export\n\t\tload\n\t\tparse\n*/\nconst DataLoader =proto({\n\t$init:function(config){\n\t\t//prepare data store\n\t\tconfig = config || \"\";\n\n\t\tthis._feed_last = {};\n\t\tthis._data_generation = 0;\n\n\t\tthis.data = new DataStore();\n\t\tthis.data.attachEvent(\"onClearAll\", bind(this._call_onclearall, this));\n\t\tthis.data.attachEvent(\"onServerConfig\", bind(this._call_on_config, this));\n\t\tthis.attachEvent(\"onDestruct\", this._call_onclearall);\n\n\t\tthis.data.feed = this._feed;\n\t\tthis.data.owner = config.id;\n\t},\n\t_feed:function(from, count, callback, defer, clear){\n\t\t//allow only single request at same time\n\t\tif (this._load_count){\n\t\t\tdefer = promise.defer();\n\t\t\tthis._load_count = [from,count,callback,defer,clear];\t//save last ignored request\n\t\t\treturn defer;\n\t\t} else\n\t\t\tthis._load_count = true;\n\t\tthis._feed_last.from = from;\n\t\tthis._feed_last.count = count;\n\t\treturn this._feed_common.call(this, from, count, callback, defer, false, clear);\n\t},\n\t_feed_common:function(from, count, callback, defer, details, clear){\n\t\tlet url = this.data.url;\n\t\tif (from < 0) from = 0;\n\n\t\tif(!details)\n\t\t\tdetails = { start: from, count:count };\n\n\t\tif(this.count())\n\t\t\tdetails[\"continue\"] = \"true\";\n\n\t\tconst state = this.getState ? this.getState() : null;\n\t\t// proxy\n\t\tif (url && typeof url != \"string\"){\n\t\t\tif (state){\n\t\t\t\tif (state.sort)\n\t\t\t\t\tdetails.sort = state.sort;\n\t\t\t\tif (state.filter)\n\t\t\t\t\tdetails.filter = state.filter;\n\t\t\t}\n\t\t\treturn this.load(url, 0, details, clear).then(\n\t\t\t\tdata => this._feed_on_load(data, callback, defer),\n\t\t\t\t() => this._feed_callback()\n\t\t\t);\n\t\t} else { // GET\n\t\t\turl = url+((url.indexOf(\"?\")==-1)?\"?\":\"&\");\n\n\t\t\tvar params = [];\n\t\t\tfor(var d in details){\n\t\t\t\tparams.push(d+\"=\"+details[d]);\n\t\t\t}\n\t\t\tif (state){\n\t\t\t\tif (state.sort){\n\t\t\t\t\tvar sort = isArray(state.sort) ? state.sort : [state.sort];\n\t\t\t\t\tfor (var i=0; i<sort.length; i++)\n\t\t\t\t\t\tparams.push(\"sort[\"+sort[i].id+\"]=\"+encodeURIComponent(sort[i].dir));\n\t\t\t\t}\n\t\t\t\tif (state.filter)\n\t\t\t\t\tfor (var key in state.filter){\n\t\t\t\t\t\tvar filterValue = state.filter[key];\n\t\t\t\t\t\tif(typeof filterValue == \"object\")\n\t\t\t\t\t\t\tfilterValue = ajax().stringify(filterValue); //server daterangefilter\n\t\t\t\t\t\tparams.push(\"filter[\"+key+\"]=\"+encodeURIComponent(filterValue));\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\turl += params.join(\"&\");\n\t\t\tif (this._feed_last.url !== url){\n\t\t\t\tthis._feed_last.url = url;\n\t\t\t\treturn this.load(url, 0, null, clear).then(\n\t\t\t\t\tdata => this._feed_on_load(data, callback, defer),\n\t\t\t\t\t() => this._feed_callback()\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis._load_count = false;\n\t\t\t\treturn promise.reject();\n\t\t\t}\n\t\t}\n\t},\n\t_feed_on_load:function(data, callback, defer){\n\t\tdelay(()=> this._feed_callback(), \"\", \"\", 100);\n\t\tif(callback)\n\t\t\tajax.$callback(this, callback, data);\n\t\tif(defer)\n\t\t\tdefer.resolve(data);\n\t\treturn data;\n\t},\n\t_feed_callback:function(){\n\t\t//after loading check if we have some ignored requests\n\t\tvar temp = this._load_count;\n\t\tthis._load_count = false;\n\t\tif (typeof temp ==\"object\")\n\t\t\tthis.data.feed.apply(this, temp);\t//load last ignored request\n\t},\n\t//loads data from external URL\n\tload:function(url){\n\t\turl = proxy.$parse(url);\n\t\tvar ajax = AtomDataLoader.load.apply(this, arguments);\n\n\t\t//prepare data feed for dyn. loading\n\t\tif (!this.data.url)\n\t\t\tthis.data.url = url;\n\n\t\treturn ajax;\n\t},\n\t//load next set of data rows\n\tloadNext:function(count, start, callback, url, now, clear){\n\t\tvar config = this._settings;\n\t\tif (config.datathrottle && !now){\n\t\t\tif (this._throttle_request)\n\t\t\t\twindow.clearTimeout(this._throttle_request);\n\n\t\t\tlet defer = promise.defer();\n\t\t\tthis._throttle_request = delay(function(){\n\t\t\t\tdefer.resolve(this.loadNext(count, start, callback, url, true, clear));\n\t\t\t},this, 0, config.datathrottle);\n\t\t\treturn defer;\n\t\t}\n\n\t\tif (!start && start !== 0) start = this.count();\n\t\tif (!count)\n\t\t\tcount = config.datafetch || this.count();\n\n\t\tthis.data.url = url || this.data.url;\n\t\tif (this.callEvent(\"onDataRequest\", [start,count,callback,url]) && this.data.url)\n\t\t\treturn this.data.feed.call(this, start, count, callback, false, clear);\n\t\treturn promise.reject();\n\t},\n\t_maybe_loading_already:function(count, from){\n\t\tvar last = this._feed_last;\n\t\tif(this._load_count && last.url){\n\t\t\tif (last.from<=from && (last.count+last.from >= count + from )) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tremoveMissed_setter:function(value){\n\t\treturn (this.data._removeMissed = value);\n\t},\n\t//init of dataprocessor delayed after all settings processing\n\t//because it need to be the last in the event processing chain\n\t//to get valid validation state\n\t_init_dataprocessor:function(){\n\t\tvar url = this._settings.save;\n\n\t\tif (url === true)\n\t\t\turl = this._settings.save = this._settings.url;\n\n\t\tvar obj = { master: this };\n\t\t\n\t\tif (url && url.url)\n\t\t\textend(obj, url);\n\t\telse\n\t\t\tobj.url = url;\n\n\t\tdp(obj);\n\t},\n\tsave_setter:function(value){\n\t\tif (value)\n\t\t\tthis.$ready.push(this._init_dataprocessor);\n\n\t\treturn value;\n\t},\n\twaitSave:function(handler){\n\t\treturn dp(this)._promise(() => {\n\t\t\thandler.call(this);\n\t\t}).then(many => many.length == 1 ? many[0] : many);\n\t},\n\tscheme_setter:function(value){\n\t\tthis.data.scheme(value);\n\t},\n\tdataFeed_setter:function(value){\n\t\tvalue = proxy.$parse(value);\n\n\t\tthis.data.attachEvent(\"onBeforeFilter\", bind(function(text, filtervalue){\n\t\t\tvar result;\n\n\t\t\t//complex filtering, can't be routed to dataFeed\n\t\t\tif (typeof text == \"function\") return true;\n\n\t\t\t//we have dataFeed and some text\n\t\t\tif (this._settings.dataFeed && (text || filtervalue)){\n\t\t\t\ttext = text || \"id\";\n\t\t\t\tif (filtervalue && typeof filtervalue == \"object\")\n\t\t\t\t\tfiltervalue = filtervalue.id;\n\n\t\t\t\tvar url = this._settings.dataFeed;\n\n\t\t\t\t//url data feed\n\t\t\t\tif(typeof url ==\"string\"){\n\t\t\t\t\tvar urldata = \"filter[\"+text+\"]=\"+encodeURIComponent(filtervalue);\n\t\t\t\t\tresult = this._fetch(\n\t\t\t\t\t\turl+(url.indexOf(\"?\")<0?\"?\":\"&\")+urldata,\n\t\t\t\t\t\tthis._settings.datatype\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t//js data feed\n\t\t\t\telse{\n\t\t\t\t\tvar filter = {};\n\t\t\t\t\tfilter[text] = filtervalue;\n\t\t\t\t\tif (typeof url == \"function\"){\n\t\t\t\t\t\tresult = url.call(this, filtervalue, filter);\n\t\t\t\t\t} else if (url.$proxy && url.load) {\n\t\t\t\t\t\tresult = url.load(this, { filter });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (result){\n\t\t\t\t\tif (!result.then)\n\t\t\t\t\t\tresult = promise.resolve(result);\n\n\t\t\t\t\tresult.then(\n\t\t\t\t\t\tdata => {\n\t\t\t\t\t\t\tthis._onLoad(data, true);\n\t\t\t\t\t\t\tthis.data.callEvent(\"onAfterFilter\", []);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tx => this._onLoadError(x)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},this));\n\t\treturn value;\n\t},\n\t_call_onready:function(){\n\t\tif (this._settings.ready && !this._ready_was_used){\n\t\t\tvar code = toFunctor(this._settings.ready, this.$scope);\n\t\t\tif (code)\n\t\t\t\tdelay(code, this, arguments);\n\t\t\tif (this.callEvent)\n\t\t\t\tdelay(this.callEvent, this, [\"onReady\", []]);\n\t\t\tthis._ready_was_used = true;\n\t\t}\n\t},\n\t_call_onclearall:function(soft){\n\t\tthis._data_generation++;\n\t\tif (!soft){\n\t\t\tthis._load_count = false;\n\t\t\tthis._feed_last = {};\n\t\t\tthis.waitData = promise.defer();\n\t\t}\n\t},\n\t_call_on_config:function(config){\n\t\tthis._parseSeetingColl(config);\n\t}\n},AtomDataLoader);\n\n\n\nexport default DataLoader;","import {isArray, _to_array} from \"../webix/helpers\";\n\nconst DataState = {\n\tgetState:function(){\n\t\tvar cols_n = this.config.columns.length;\n\t\tvar columns = this.config.columns;\n\t\tvar settings = { \n\t\t\tids:[],\n\t\t\tsize:[],\n\t\t\tselect:this.getSelectedId(true),\n\t\t\tscroll:this.getScrollState()\n\t\t};\n\t\tfor(var i = 0; i < cols_n; i++){\n\t\t\tvar col = columns[i];\n\t\t\tsettings.ids.push(col.id);\n\t\t\tsettings.size.push((col.fillspace || col.adjust) ? -1 : col.width);\n\t\t}\n\n\t\tsettings.order = [].concat(this._hidden_column_order.length ? this._hidden_column_order : settings.ids);\n\n\t\tif (this._last_order.length){\n\t\t\tvar sort = this._last_order.map(id => {\n\t\t\t\treturn { id:id, dir:this._last_sorted[id].dir };\n\t\t\t});\n\t\t\tsettings.sort = (sort.length == 1) ? sort[0] : sort;\n\t\t}\n\n\t\t//this method will try to access the rendered values\n\t\t//just ignore it if grid is not rendered yet\n\t\tif (this._filter_elements && this._dtable_fully_ready) {\n\t\t\tvar filter = {};\n\t\t\tvar any_filter = 0;\n\t\t\tfor (let key in this._filter_elements) {\n\t\t\t\tif (this._hidden_column_hash[key]) continue;\n\n\t\t\t\tvar f = this._filter_elements[key];\n\t\t\t\tf[1].value = filter[key] = f[2].getValue(f[0]);\n\t\t\t\tany_filter = 1;\n\t\t\t}\n\t\t\tif (any_filter)\n\t\t\t\tsettings.filter=filter;\n\t\t}\n\n\t\tsettings.hidden = [];\n\t\tfor (let key in this._hidden_column_hash)\n\t\t\tsettings.hidden.push(key);\n\t\t\n\t\treturn settings;\n\t},\n\tsetState:function(obj){\n\t\tconst columns = this.config.columns;\n\t\tif(!obj) return;\n\n\t\tthis.markSorting();\n\t\tthis._last_order = [];\n\t\tthis._last_sorted = {};\n\n\t\tthis.blockEvent();\n\n\t\tif (obj.order && obj.order.length){\n\t\t\tthis._hidden_column_order = _to_array([].concat(obj.order));\n\t\t\tconst rs = obj.order.length - this._settings.rightSplit;\n\t\t\tthis._hidden_split = [this._settings.leftSplit, rs, this._settings.rightSplit];\n\t\t}\n\n\t\tif (obj.hidden){\n\t\t\tconst hihash = {};\n\t\t\tfor (let i=0; i<obj.hidden.length; i++){\n\t\t\t\thihash[obj.hidden[i]] = true;\n\t\t\t\tif(!this._hidden_column_order.length)\n\t\t\t\t\tthis.hideColumn(obj.hidden[i]);\n\t\t\t}\n\n\t\t\tif(this._hidden_column_order.length){\n\t\t\t\tfor (let i=0; i<this._hidden_column_order.length; i++){\n\t\t\t\t\tconst hikey = this._hidden_column_order[i];\n\t\t\t\t\tif (!!hihash[hikey] == !this._hidden_column_hash[hikey])\n\t\t\t\t\t\tthis.hideColumn(hikey, {}, false, !!hihash[hikey]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (obj.ids){\n\t\t\tlet reorder = false;\n\t\t\tfor (let i=0; i<columns.length; i++)\n\t\t\t\tif (columns[i].id != obj.ids[i])\n\t\t\t\t\treorder = true;\n\t\t\tif (reorder){\n\t\t\t\tfor (let i=0; i<obj.ids.length; i++)\n\t\t\t\t\tcolumns[i] = this.getColumnConfig(obj.ids[i]) || columns[i];\n\t\t\t\tthis.refreshColumns();\n\t\t\t}\n\t\t}\n\n\t\tif (obj.size){\n\t\t\tconst cols_n = Math.min(obj.size.length, columns.length);\n\t\t\tfor (let i = 0; i < cols_n; i++){\n\t\t\t\tconst col = columns[i];\n\t\t\t\tif(col && obj.size[i] > 0 && col.width != obj.size[i]){\n\t\t\t\t\tdelete col.fillspace;\n\t\t\t\t\tdelete col.adjust;\n\t\t\t\t\tthis._setColumnWidth( i, obj.size[i], true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.unblockEvent();\n\n\t\tconst silent = !(this._settings.leftSplit || this._settings.rightSplit);\n\t\tthis._updateColsSizeSettings(silent);\n\t\tthis.callEvent(\"onStructureUpdate\", []);\n\n\t\tconst server = this._skip_server_op = { };\n\t\tif (obj.sort){\n\t\t\tlet sort = obj.sort, multi = true;\n\t\t\tif (!isArray(sort)){\n\t\t\t\tsort = [sort]; multi = false;\n\t\t\t}\n\t\t\tfor (let i=0; i<sort.length; i++){\n\t\t\t\tconst col = this.getColumnConfig(sort[i].id);\n\t\t\t\tif (col) {\n\t\t\t\t\tthis._sort(col.id, sort[i].dir, col.sort, multi);\n\t\t\t\t\tif (col.sort == \"server\") server.sort = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (obj.filter){\n\t\t\t//temporary disable filtering \n\t\t\tlet temp = this.filterByAll;\n\t\t\tthis.filterByAll = function(){};\n\n\t\t\t//apply defined filters\n\t\t\tfor (let key in obj.filter) {\n\t\t\t\tconst value = obj.filter[key];\n\t\t\t\tconst f = this._filter_elements[key];\n\t\t\t\tif (!value || !f) continue;\n\n\t\t\t\tf[2].setValue(f[0], value);\n\t\t\t\tlet contentid = f[1].contentId;\n\t\t\t\tif (contentid)\n\t\t\t\t\tthis._active_headers[contentid].value = value;\n\t\t\t}\n\n\t\t\t//remove old filters\n\t\t\tfor (let key in this._filter_elements){\n\t\t\t\tif (!obj.filter[key]){\n\t\t\t\t\tlet f = this._filter_elements[key];\n\t\t\t\t\tf[2].setValue(f[0], \"\");\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t//restore and apply filtering\n\t\t\tthis.filterByAll = temp;\n\t\t\tthis.filterByAll();\n\t\t}\n\n\t\t// apply server filter\\sort once\n\t\tdelete this._skip_server_op;\n\t\tif (server.sort || server.filter)\n\t\t\tthis.loadNext(0, 0, 0, 0, true, true).then(() => {\n\t\t\t\tif (server.sort)\n\t\t\t\t\tthis._on_after_sort(server.$params);\n\t\t\t\tif (server.filter)\n\t\t\t\t\tthis._on_after_filter();\n\t\t\t});\n\n\t\tif (obj.select && this.select){\n\t\t\tlet select = obj.select;\n\t\t\tthis.unselect();\n\t\t\tfor (let i = 0; i < select.length; i++)\n\t\t\t\tif (!select[i].row || this.exists(select[i].row))\n\t\t\t\t\tthis._select(select[i], true);\n\t\t}\n\n\t\tif (obj.scroll)\n\t\t\tthis.scrollTo(obj.scroll.x, obj.scroll.y);\n\t}\n};\n\nexport default DataState;","import {pos, offset} from \"../webix/html\";\nimport {use} from \"../services\";\nimport Touch from \"../core/touch\";\nimport {extend, delay, _power_array, isArray} from \"../webix/helpers\";\nimport {assert} from \"../webix/debug\";\nimport DragControl from \"../core/dragcontrol\";\nimport AutoScroll from \"../core/autoscroll\";\n\n\n/*\n\tBehavior:DragItem - adds ability to move items by dnd\n\t\n\tdnd context can have next properties\n\t\tfrom - source object\n\t\tto - target object\n\t\tsource - id of dragged item(s)\n\t\ttarget - id of drop target, null for drop on empty space\n\t\tstart - id from which DND was started\n*/\n\nconst DragItem ={\n\t//helper - defines component's container as active zone for dragging and for dropping\n\t_initHandlers:function(obj, source, target){\n\t\tif (!source) DragControl.addDrop(obj._contentobj,obj,true);\n\t\tif (!target) DragControl.addDrag(obj._contentobj,obj);\n\t\tthis.attachEvent(\"onDragOut\",function(a,b){ this.$dragMark(a,b); });\n\t\tthis.attachEvent(\"onBeforeAutoScroll\",function(){\n\t\t\tvar context = DragControl.getContext();\n\t\t\treturn !!(DragControl._active && context && (context.to === this || this._auto_scroll_force));\n\t\t});\n\t},\n\tdrag_setter:function(value){\n\t\tif (value){\n\t\t\textend(this, AutoScroll, true);\n\t\t\tif (value == \"order\" || value == \"move\")\n\t\t\t\textend(this, use(\"DragOrder\"), true);\n\t\t\tif (value == \"inner\" || value == \"order\")\n\t\t\t\tthis._inner_drag_only = true;\n\n\t\t\tthis._initHandlers(this, value == \"source\", value == \"target\");\n\t\t\tdelete this.drag_setter;\t//prevent double initialization\n\t\t}\n\t\treturn value;\n\t},\n\t/*\n\t\ts - source html element\n\t\tt - target html element\n\t\td - drop-on html element ( can be not equal to the target )\n\t\te - native html event \n\t*/\n\t//called when drag moved over possible target\n\t$dragIn:function(s,t,e){\n\t\tvar id = this.locate(e) || null;\n\t\tvar context = DragControl._drag_context;\n\n\t\t//in inner drag mode - ignore dnd from other components\n\t\tif ((this._inner_drag_only || context.from._inner_drag_only) && context.from !== this) return false;\n\n\t\tvar to = DragControl.getMaster(t);\n\t\t//previous target\n\t\tvar html = (this.getItemNode(id, e)||this._dataobj);\n\t\t//prevent double processing of same target\n\t\tif (html == DragControl._landing) return html;\n\t\tcontext.target = id;\n\t\tcontext.to = to;\n\n\t\tif (this._auto_scroll_delay)\n\t\t\tthis._auto_scroll_delay = window.clearTimeout(this._auto_scroll_delay);\n\n\t\tconst fragile = (this._touch_scroll && !this._settings.prerender);\n\t\tif (this._settings.dragscroll !== false  && !fragile)\n\t\t\tthis._auto_scroll_delay = delay(function(pos,id){\n\t\t\t\tthis._drag_pause(id);\n\t\t\t\tthis._auto_scroll(pos,id);\n\t\t\t}, this, [pos(e), id], 250);\n\n\t\tif (!this.$dropAllow(context, e)  || !this.callEvent(\"onBeforeDragIn\",[context, e])){\n\t\t\tcontext.to = context.target = null;\n\t\t\tif (this._auto_scroll_delay)\n\t\t\t\tthis._auto_scroll_delay = window.clearTimeout(this._auto_scroll_delay);\n\t\t\treturn null;\n\t\t}\n\t\t//mark target only when landing confirmed\n\t\tthis.$dragMark(context,e);\n\t\treturn html;\n\t},\n\t$dropAllow:function(){\n\t\treturn true;\n\t},\n\t_drag_pause:function(){\n\t\t//may be reimplemented in some components\n\t\t// tree for example\n\t},\n\t_target_to_id:function(target){\n\t\treturn target && typeof target === \"object\" ? target.toString() : target;\n\t},\n\t//called when drag moved out from possible target\n\t$dragOut:function(s,t,n,e){\n\t\tvar id = (this._viewobj.contains(n) ? this.locate(e): null) || null;\n\t\tvar context = DragControl._drag_context;\n\n\t\t//still over previous target\n\t\tif ((context.target||\"\").toString() == (id||\"\").toString()) return null;\n\t\tif (this._auto_scroll_delay)\n\t\t\tthis._auto_scroll_delay = window.clearTimeout(this._auto_scroll_delay);\n\n\t\t//unmark previous target\n\t\tcontext.target = context.to = null;\n\t\tthis.callEvent(\"onDragOut\",[context,e]);\n\t\treturn null;\n\t},\n\t//called when drag moved on target and button is released\n\t$drop:function(s,t,e){\n\t\tvar context = DragControl._drag_context;\n\t\t//finalize context details\n\t\tcontext.to = this;\n\t\tthis._define_index(s,t,context);\n\n\t\t//unmark last target\n\t\tthis.$dragMark({}, e);\n\n\t\tif( context.from && context.from != context.to && context.from.callEvent ){\n\t\t\tif(!context.from.callEvent(\"onBeforeDropOut\", [context,e]))\n\t\t\t\treturn;\n\t\t}\n\n\t\tif (!this.callEvent(\"onBeforeDrop\",[context,e])) return;\n\t\t//moving\n\t\tthis._context_to_move(context,e);\n\t\t\n\t\tthis.callEvent(\"onAfterDrop\",[context,e]);\n\t},\n\t_define_index:function(s,t,context){\n\t\tvar target = this._target_to_id(context.target);\n\n\t\tif (this.getBranchIndex){\n\t\t\tif (target){\n\t\t\t\tcontext.parent = this.getParentId(target);\n\t\t\t\tcontext.index = this.getBranchIndex(target);\n\t\t\t} else context.index = -1;\n\t\t} else\n\t\t\tcontext.index = target?this.getIndexById(target):this.count();\n\t},\n\t_context_to_move:function(context){\n\t\tassert(context.from, \"Unsopported d-n-d combination\");\n\t\tif (context.from && context.from.move){\t//from different component with item dnd\n\t\t\tvar details = { parent: context.parent, mode: context.pos };\n\t\t\tcontext.from.move(context.source,context.index,context.to, details);\n\t\t}\n\t},\n\t$longTouchLimit: true,\n\t_getDragItemPos: function(pos,e){\n\t\tif (this.getItemNode){\n\t\t\tvar id = this.locate(e, true);\n\t\t\t//in some case, node may be outiside of dom ( spans in datatable for example )\n\t\t\t//so getItemNode can return null\n\t\t\tvar node = id ? this.getItemNode(id) : null;\n\t\t\treturn node ? offset(node) : node;\n\t\t}\n\t},\n\t//called when drag action started\n\t$drag:function(s,e){\n\t\tvar id = this.locate(e, true);\n\t\tif (id){\n\t\t\tvar list = [id];\n\n\t\t\tif (this.getSelectedId){ //has selection model\n\t\t\t\t//if dragged item is one of selected - drag all selected\n\t\t\t\tvar selection = this.getSelectedId(true, true);\t\n\n\t\t\t\tif (selection && selection.length > 1 && _power_array.find.call(selection,id)!=-1){\n\t\t\t\t\tvar hash = {}; \n\t\t\t\t\tlist = [];\n\t\t\t\t\tfor (let i=0;i<selection.length; i++)\n\t\t\t\t\t\thash[selection[i]]=true;\n\t\t\t\t\tfor (let i = 0; i<this.data.order.length; i++){\n\t\t\t\t\t\tvar hash_id = this.data.order[i];\n\t\t\t\t\t\tif (hash[hash_id])\n\t\t\t\t\t\t\tlist.push(hash_id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//save initial dnd params\n\t\t\tvar context = DragControl._drag_context = { source:list, start:id };\n\t\t\tcontext.from = this;\n\n\t\t\tif (this.callEvent(\"onBeforeDrag\",[context,e])){\n\t\t\t\tif (Touch._start_context)\n\t\t\t\t\tdelay(function(){ Touch._start_context = null; });\n\n\t\t\t\t//set drag representation\n\t\t\t\treturn context.html||this.$dragHTML(this.getItem(id), e, context);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\t$dragHTML:function(obj,e,context){\n\t\tlet html = this._toHTML(obj);\n\t\tif ( isArray(context.source) && context.source.length > 1 )\n\t\t\thtml = this._toMultipleHTML(html, context.source.length);\n\t\treturn html;\n\t},\n\t_toMultipleHTML:function(html, len){\n\t\thtml = \"<div class='webix_drag_main'>\"+html+\"</div>\";\n\t\tlet multiple = \"<div class='webix_drag_multiple'></div>\";\n\t\tif ( len > 2 )\n\t\t\tmultiple = \"<div class='webix_drag_multiple_last'></div>\" + multiple;\n\t\treturn multiple+html+\"<span class='webix_badge'>\"+len+\"</span>\";\n\t},\n\t$dragMark:function(context){\n\t\tvar target = null;\n\t\tif (context.target)\n\t\t\ttarget = this._target_to_id(context.target);\n\n\t\t//touch webkit will stop touchmove event if source node removed\n\t\tif (this._marked && this._marked != target){\n\t\t\tthis._remove_css([this._marked], \"webix_drag_over\", true);\n\t\t\tthis._marked = null;\n\t\t}\n\n\t\tif (!this._marked && target){\n\t\t\tthis._marked = target;\n\t\t\tthis._add_css([target], \"webix_drag_over\", true);\n\t\t\treturn target;\n\t\t}\n\t\t\n\t\treturn !!context.to;\n\t},\n\t_add_css:function(source, css){\n\t\tfor (let i=0; i<source.length; i++)\n\t\t\tthis.addCss(source[i], css);\n\t},\n\t_remove_css:function(source, css){\n\t\tfor (let i=0; i<source.length; i++)\n\t\t\tthis.removeCss(source[i], css);\n\t},\n\n\t// methods used in order/move modes\n\t$dropHTML: function(){\n\t\treturn \"\";\n\t},\n\t_set_drop_area:function(target, t){\n\t\tconst node = this.getItemNode(target);\n\t\tif (node){\n\t\t\tnode.parentNode.insertBefore(DragControl._dropHTML[0], node);\n\t\t} else t.children[0].appendChild(DragControl._dropHTML[0]);\n\t}\n};\n\nexport default DragItem;","import {extend, copy, _power_array} from \"../webix/helpers\";\n\n\nconst Undo = {\n\t$init:function(){\n\t\tthis._undoHistory = extend([],_power_array,true);\n\t\tthis._undoCursor = -1;\n\t},\n\tundo_setter: function(value){\n\t\tif(value){\n\t\t\tthis._init_undo();\n\t\t\tthis._init_undo = function(){};\n\t\t}\n\t\treturn value;\n\t},\n\t_init_undo: function(){\n\t\tvar view = this;\n\n\t\t// drag-n-drop\n\t\tthis.attachEvent(\"onBeforeDrop\", function(context){\n\t\t\tif(context.from == context.to){\n\t\t\t\tvar item = view._draggedItem = copy(this.getItem(context.start));\n\t\t\t\tif(this.data.branch){\n\t\t\t\t\titem.$index = this.getBranchIndex(item.id);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\titem.$index = this.getIndexById(item.id);\n\t\t\t}\n\t\t});\n\t\tthis.data.attachEvent(\"onDataMove\", function( sid ){\n\t\t\tif(view._draggedItem && view._draggedItem.id == sid){\n\t\t\t\tvar data = view._draggedItem;\n\t\t\t\tview._draggedItem = null;\n\t\t\t\tview._addToHistory(sid, data, \"move\");\n\t\t\t}\n\t\t});\n\n\t\t// add, remove\n\t\tthis.data.attachEvent(\"onBeforeDelete\", function(id){\n\t\t\tif(this.getItem(id)){\n\t\t\t\tvar item = view._deletedItem = copy(this.getItem(id));\n\t\t\t\tif(this.branch){\n\t\t\t\t\titem.$index = this.getBranchIndex(id);\n\t\t\t\t\tif(this.branch[id])\n\t\t\t\t\t\titem.$branch = copy(this.serialize(id));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\titem.$index = this.getIndexById(id);\n\t\t\t}\n\t\t});\n\t\tthis.data.attachEvent(\"onDataUpdate\", function(id, data, old){\n\t\t\tview._addToHistory(id+\"\", old, \"update\");\n\t\t});\n\t\tthis.data.attachEvent(\"onStoreUpdated\", function(id, item, mode){\n\t\t\tvar data = null;\n\t\t\tif(id){\n\t\t\t\tif(mode == \"add\"){\n\t\t\t\t\tdata = copy(item);\n\t\t\t\t}\n\t\t\t\telse if( mode == \"delete\") {\n\t\t\t\t\tdata = view._deletedItem;\n\t\t\t\t}\n\n\t\t\t\tif(data)\n\t\t\t\t\tview._addToHistory(id, data, mode);\n\t\t\t}\n\t\t});\n\n\t\t// id change\n\t\tthis.data.attachEvent(\"onIdChange\", function(oldId,newId){\n\t\t\tif(typeof oldId == \"object\")\n\t\t\t\toldId = oldId.row;\n\t\t\tfor(var i =0; i < view._undoHistory.length; i++){\n\t\t\t\tif(view._undoHistory[i].id == oldId){\n\t\t\t\t\tview._undoHistory[i].id = newId;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\t_addToHistory: function(id, data, action){\n\t\tif(!this._skipHistory && this._settings.undo){\n\t\t\tthis._undoHistory.push({id: id, action: action, data: data});\n\t\t\tconst undoLimit = this._settings.undoLimit || 20;\n\t\t\tif(this._undoHistory.length > undoLimit)\n\t\t\t\tthis._undoHistory.splice(0,1);\n\t\t\tif(!this._skipCursorInc)\n\t\t\t\tthis._undoCursor = this._undoHistory.length - 1;\n\t\t}\n\t},\n\tignoreUndo: function(func, master){\n\t\tthis._skipHistory = true;\n\t\tfunc.call(master||this);\n\t\tthis._skipHistory = false;\n\t},\n\tremoveUndo: function(id){\n\t\tfor( var i = this._undoHistory.length-1; i >=0; i--){\n\t\t\tif(this._undoHistory[i].id == id){\n\t\t\t\tif(this._undoHistory[i].action == \"id\"){\n\t\t\t\t\tid = this._undoHistory[i].data;\n\t\t\t\t}\n\t\t\t\tthis._undoHistory.removeAt(i);\n\t\t\t}\n\t\t}\n\t\tthis._undoCursor = this._undoHistory.length - 1;\n\t},\n\tundo: function(id){\n\t\tif(id){\n\t\t\tthis.ignoreUndo(function(){\n\t\t\t\tvar data, i;\n\t\t\t\tfor( i = this._undoHistory.length-1; !data && i >=0; i--){\n\t\t\t\t\tif(this._undoHistory[i].id == id)\n\t\t\t\t\t\tdata = this._undoHistory[i];\n\t\t\t\t}\n\n\t\t\t\tif(data){\n\t\t\t\t\t/*if(data.action == \"id\")\n\t\t\t\t\t\tid = data.data;*/\n\t\t\t\t\tthis._undoAction(data);\n\t\t\t\t\tthis._undoHistory.removeAt(i+1);\n\t\t\t\t\tthis._undoCursor = this._undoHistory.length - 1;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse{\n\t\t\tvar data = this._undoHistory[this._undoCursor];\n\t\t\tif(data){\n\t\t\t\tthis.ignoreUndo(function(){\n\t\t\t\t\tthis._undoAction(data);\n\t\t\t\t\tthis._undoHistory.removeAt(this._undoCursor);\n\t\t\t\t});\n\t\t\t\tthis._undoCursor--;\n\t\t\t\t/*if(data.action == \"id\")\n\t\t\t\t\tthis.undo();*/\n\t\t\t}\n\t\t}\n\t},\n\t_undoAction: function(obj){\n\t\tif(obj.action == \"delete\"){\n\t\t\tvar branch = null,\n\t\t\t\tparentId = obj.data.$parent;\n\n\t\t\tif(obj.data.$branch){\n\t\t\t\tbranch = {\n\t\t\t\t\tparent: obj.id,\n\t\t\t\t\tdata: copy(obj.data.$branch)\n\t\t\t\t};\n\t\t\t\tdelete obj.data.$branch;\n\t\t\t\tif(parentId && !this.data.pull[parentId])\n\t\t\t\t\tparentId = 0;\n\t\t\t}\n\n\t\t\tthis.add(obj.data, obj.data.$index, parentId);\n\t\t\tif(branch){\n\t\t\t\tthis.parse(branch);\n\t\t\t}\n\t\t}\n\t\telse if(obj.action == \"add\"){\n\t\t\tthis.remove(obj.id);\n\t\t}\n\t\telse if(obj.action == \"update\"){\n\t\t\tthis.updateItem(obj.id, obj.data);\n\t\t}\n\t\telse if(obj.action == \"move\"){\n\t\t\tif(obj.data.$parent){\n\t\t\t\tif(this.getItem(obj.data.$parent))\n\t\t\t\t\tthis.move(obj.id, obj.data.$index, null, {parent: obj.data.$parent});\n\t\t\t}\n\t\t\telse\n\t\t\t\tthis.move(obj.id, obj.data.$index);\n\t\t}\n\t\t/*else if(obj.action == \"id\"){\n\t\t\tthis.data.changeId(obj.id, obj.data);\n\t\t}*/\n\t}\n};\n\nexport default Undo;","import {create} from \"../webix/html\";\nimport {isArray, isUndefined, copy, toNode, delay, extend} from \"../webix/helpers\";\nimport {ui, $$} from \"../ui/core\";\nimport i18n from \"../webix/i18n\";\nimport {_event} from \"../webix/htmlevents\";\nimport {assert} from \"../webix/debug\";\nimport {callEvent} from \"../webix/customevents\";\n\nfunction init_suggest(editor, input){\n\tconst suggest = editor.config.suggest;\n\tif (suggest){\n\t\tconst box = editor.config.suggest = create_suggest(suggest);\n\t\tconst boxobj = $$(box);\n\t\tif (boxobj && input)\n\t\t\tboxobj.linkInput(input);\n\t\treturn boxobj;\n\t}\n}\n\nfunction attach_editend(suggest){\n\tif (suggest && suggest.setMasterValue && !suggest._editor_initialized){\n\t\tsuggest._editor_initialized = true;\n\t\tsuggest.attachEvent(\"onValueSuggest\", function(){\n\t\t\tdelay(()=>callEvent(\"onEditEnd\", []));\n\t\t});\n\t}\n}\n\nfunction create_suggest(config){\n\tif (typeof config == \"string\") return config;\n\tif (config.linkInput) return config._settings.id;\n\n\tif (typeof config == \"object\"){\n\t\tif (isArray(config))\n\t\t\tconfig = { data: config };\n\t\tconfig.view = config.view || \"suggest\";\n\t} else if (config === true)\n\t\tconfig = { view:\"suggest\" };\n\n\tconst obj = ui(config);\n\treturn obj.config.id;\n}\n\nfunction getLabel(config){\n\tconst text = (config.header && config.header[0]) ? config.header[0].text : config.editValue||config.label;\n\treturn (text || \"\").toString().replace(/<[^>]*>/g, \"\");\n}\n\n/*\nthis.node - html node, available after render call\nthis.config - editor config\nthis.value - original value\nthis.popup - id of popup \n*/\nconst editors = {\n\t\"text\":{\n\t\tfocus:function(){\n\t\t\tthis.getInputNode(this.node).focus();\n\t\t\tthis.getInputNode(this.node).select();\n\t\t},\n\t\tgetValue:function(){\n\t\t\treturn this.getInputNode(this.node).value;\n\t\t},\n\t\tsetValue:function(value){\n\t\t\tconst input = this.getInputNode(this.node);\n\t\t\tinput.value = value;\n\n\t\t\tconst suggest = init_suggest(this, input);\n\t\t\tattach_editend(suggest);\n\t\t},\n\t\tgetInputNode:function(){\n\t\t\treturn this.node.firstChild;\n\t\t},\n\t\trender:function(){\n\t\t\treturn create(\"div\", {\n\t\t\t\t\"class\":\"webix_dt_editor\"\n\t\t\t}, \"<input type='text' aria-label='\"+getLabel(this.config)+\"'>\");\n\t\t}\n\t},\n\t\"inline-checkbox\":{\n\t\trender:function(){ return {}; },\n\t\tgetValue:function(){\n\t\t\treturn this.node.checked;\n\t\t},\n\t\tsetValue:function(){},\n\t\tfocus:function(){\n\t\t\tthis.node.focus();\n\t\t},\n\t\tgetInputNode:function(){},\n\t\t$inline:true\n\t},\n\t\"inline-text\":{\n\t\trender:function(){ return {}; },\n\t\tgetValue:function(){\n\t\t\treturn this.node.value;\n\t\t},\n\t\tsetValue:function(){},\n\t\tfocus:function(){\n\t\t\tthis.node.focus();\n\t\t\tthis.node.select();\n\t\t},\n\t\tgetInputNode:function(){},\n\t\t$inline:true\n\t},\n\t\"checkbox\":{\n\t\tfocus:function(){\n\t\t\tthis.getInputNode().focus();\n\t\t},\n\t\tgetValue:function(){\n\t\t\treturn this.getInputNode().checked;\n\t\t},\n\t\tsetValue:function(value){\n\t\t\tthis.getInputNode().checked = !!value;\n\t\t},\n\t\tgetInputNode:function(){\n\t\t\treturn this.node.firstChild.firstChild;\n\t\t},\n\t\trender:function(){\n\t\t\treturn create(\"div\", {\n\t\t\t\t\"class\":\"webix_dt_editor\"\n\t\t\t}, \"<div><input type='checkbox' aria-label='\"+getLabel(this.config)+\"'></div>\");\n\t\t}\n\t},\n\t\"select\":{\n\t\tfocus:function(){\n\t\t\tthis.getInputNode().focus();\n\t\t},\n\t\tgetValue:function(){\n\t\t\treturn this.getInputNode().value;\n\t\t},\n\t\tsetValue:function(value){\n\t\t\tthis.getInputNode().value = value;\n\t\t},\n\t\tgetInputNode:function(){\n\t\t\treturn this.node.firstChild;\n\t\t},\n\t\trender:function(){\n\t\t\tlet html = \"\";\n\t\t\tconst options = this.config.options || this.config.collection;\n\t\t\tassert(options,\"options not defined for select editor\");\n\n\t\t\tif (options.data && options.data.each)\n\t\t\t\toptions.data.each(function(obj){\n\t\t\t\t\thtml +=\"<option value='\"+obj.id+\"'>\"+obj.value+\"</option>\";\n\t\t\t\t});\n\t\t\telse {\n\t\t\t\tif (isArray(options)){\n\t\t\t\t\tfor (let i = 0; i < options.length; i++){\n\t\t\t\t\t\tconst rec = options[i];\n\t\t\t\t\t\tconst isplain = isUndefined(rec.id);\n\t\t\t\t\t\tconst id = isplain ? rec : rec.id;\n\t\t\t\t\t\tconst label = isplain ? rec : rec.value;\n\n\t\t\t\t\t\thtml +=\"<option value='\"+id+\"'>\"+label+\"</option>\";\n\t\t\t\t\t}\n\t\t\t\t} else for (let key in options){\n\t\t\t\t\thtml +=\"<option value='\"+key+\"'>\"+options[key]+\"</option>\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn create(\"div\", {\n\t\t\t\t\"class\":\"webix_dt_editor\"\n\t\t\t}, \"<select aria-label='\"+getLabel(this.config)+\"'>\"+html+\"</select>\");\n\t\t}\n\t},\n\tpopup:{\n\t\tfocus:function(){\n\t\t\tthis.getInputNode().focus();\n\t\t},\n\t\tdestroy:function(){\n\t\t\tthis.getPopup().hide();\n\t\t},\n\t\tgetValue:function(){\n\t\t\treturn this.getInputNode().getValue()||\"\";\n\t\t},\n\t\tsetValue:function(value){\n\t\t\tthis.getPopup().show(this.node);\n\t\t\tthis.getInputNode().setValue(value);\n\t\t},\n\t\tgetInputNode:function(){\n\t\t\treturn this.getPopup().getChildViews()[0];\n\t\t},\n\t\tgetPopup:function(){\n\t\t\tlet id = this.config.$popup;\n\n\t\t\tif (!(id && $$(id)))\n\t\t\t\tid = this.config.$popup = this.createPopup();\n\n\t\t\treturn $$(id);\n\t\t},\n\t\tcreatePopup:function(){\n\t\t\tconst popup = this.config.popup || this.config.suggest;\n\t\t\tif (popup){\n\t\t\t\tlet pobj;\n\t\t\t\tif (typeof popup == \"object\" && !popup.name){\n\t\t\t\t\tpopup.view = popup.view || \"suggest\";\n\t\t\t\t\tpobj = ui(copy(popup));\n\t\t\t\t} else\n\t\t\t\t\tpobj = $$(popup);\n\n\t\t\t\t//custom popup may be linked already\n\t\t\t\tif(!pobj._linked){\n\t\t\t\t\tif (pobj.linkInput)\n\t\t\t\t\t\tpobj.linkInput(document.body);\n\t\t\t\t\telse if(this.linkInput)\n\t\t\t\t\t\tthis.linkInput(document.body);\n\t\t\t\t\tpobj._linked = true;\n\t\t\t\t}\n\t\t\t\tattach_editend(pobj);\n\n\t\t\t\treturn pobj;\n\t\t\t}\n\n\t\t\tconst editor = editors.$popup[this.popupType];\n\t\t\tlet popupId = editor.$popup;\n\n\t\t\tif(!(popupId && $$(popupId))){\n\t\t\t\tconst popup = ui(copy(editor));\n\t\t\t\tif(!popup.linkInput && !popupId)\n\t\t\t\t\tthis.linkInput(document.body);\n\t\t\t\teditor.$popup = popupId = popup._settings.id;\n\t\t\t\tthis.popupInit(popup);\n\t\t\t}\n\n\t\t\treturn popupId;\n\t\t},\n\t\tlinkInput:function(node){\n\t\t\t_event(toNode(node), \"keydown\", e => {\n\t\t\t\t//abort, when editor was not initialized yet\n\t\t\t\tif (!this.config.$popup) return;\n\n\t\t\t\tconst code = e.which || e.keyCode, list = this.getInputNode();\n\t\t\t\tif(!list.isVisible()) return;\n\n\t\t\t\tif(list.moveSelection && code < 41 && code > 32){\n\t\t\t\t\tlet dir;\n\t\t\t\t\tif(code == 33) dir = \"pgup\";\n\t\t\t\t\telse if(code == 34) dir = \"pgdown\";\n\t\t\t\t\telse if(code == 35) dir = \"bottom\";\n\t\t\t\t\telse if(code == 36) dir = \"top\";\n\t\t\t\t\telse if(code == 37) dir = \"left\";\n\t\t\t\t\telse if(code == 38) dir = \"up\";\n\t\t\t\t\telse if(code == 39) dir = \"right\";\n\t\t\t\t\telse if(code == 40) dir = \"down\";\n\n\t\t\t\t\tlist.moveSelection(dir);\n\t\t\t\t}\n\t\t\t\t// shift+enter support for 'popup' editor\n\t\t\t\telse if(code === 13 && ( e.target.nodeName !==\"TEXTAREA\" || !e.shiftKey))\n\t\t\t\t\tcallEvent(\"onEditEnd\", []);\n\t\t\t\n\t\t\t});\n\t\t},\n\n\t\tpopupInit:function(){},\n\t\tpopupType:\"text\",\n\t\trender:function(){ return {}; },\n\t\t$inline:true\n\t}\n};\n\neditors.color = extend({\n\tfocus:function(){},\n\tpopupType:\"color\",\n\tpopupInit:function(popup){\n\t\tpopup.getChildViews()[0].attachEvent(\"onItemClick\", function(value){\n\t\t\tcallEvent(\"onEditEnd\",[value]);\n\t\t});\n\t}\n}, editors.popup);\n\neditors.date = extend({\n\tfocus:function(){},\n\tpopupType:\"date\",\n\tsetValue:function(value){\n\t\tthis._is_string = this.config.stringResult || (value && typeof value == \"string\");\n\t\teditors.popup.setValue.call(this, value);\n\t},\n\tgetValue:function(){\n\t\treturn this.getInputNode().getValue(this._is_string?i18n.parseFormatStr:\"\")||\"\";\n\t},\n\tpopupInit:function(popup){\n\t\tpopup.getChildViews()[0].attachEvent(\"onAfterDateSelect\", function(value){\n\t\t\tcallEvent(\"onEditEnd\",[value]);\n\t\t});\n\t}\n}, editors.popup);\n\neditors.combo = extend({\n\t_create_suggest:function(config){\n\t\tlet suggest, id;\n\t\tif (this.config.popup){\n\t\t\tsuggest = this.config.popup;\n\t\t\tid = suggest.config.id;\n\t\t}\n\t\telse if (config){\n\t\t\tid = create_suggest(config);\n\t\t\tsuggest = $$(id);\n\t\t} else\n\t\t\tid = this._shared_suggest(config);\n\n\t\tattach_editend(suggest);\n\t\treturn id;\n\t},\n\t_shared_suggest:function(){\n\t\tconst e = editors.combo;\n\n\t\tif(e._suggest && $$(e._suggest))\n\t\t\treturn e._suggest;\n\n\t\treturn e._suggest = this._create_suggest(true);\n\t},\n\trender:function(){\n\t\tconst node = create(\"div\", {\n\t\t\t\"class\":\"webix_dt_editor\"\n\t\t}, \"<input type='text' role='combobox' aria-label='\"+getLabel(this.config)+\"'>\");\n\n\t\t//save suggest id for future reference\t\t\n\t\tconst suggest = this.config.suggest = this._create_suggest(this.config.suggest);\n\n\t\tif (suggest){\n\t\t\t$$(suggest).linkInput(node.firstChild, true);\n\t\t\t_event(node.firstChild, \"click\", () => this.showPopup());\n\t\t}\n\t\treturn node;\n\t},\n\tgetPopup:function(){\n\t\treturn $$(this.config.suggest);\n\t},\n\tshowPopup:function(){\n\t\tconst popup = this.getPopup();\n\t\tconst list = popup.getList();\n\t\tconst input = this.getInputNode();\n\t\tconst value = this._initial_value;\n\n\t\tpopup.show(input);\n\t\tinput.setAttribute(\"aria-expanded\", \"true\");\n\t\tif (value){\n\t\t\tassert(list.exists(value), \"Option with ID \"+value+\" doesn't exist\");\n\t\t\tif (list.exists(value)){\n\t\t\t\tlist.select(value);\n\t\t\t\tlist.showItem(value);\n\t\t\t}\n\t\t} else {\n\t\t\tlist.unselect();\n\t\t\tlist.showItem(list.getFirstId());\n\t\t}\n\t\tpopup._last_input_target = input;\n\t},\n\tafterRender:function(){\n\t\tthis.showPopup();\n\t},\n\tsetValue:function(value){\n\t\tthis._initial_value = value;\n\t\tif (this.config.suggest){\n\t\t\tconst sobj = $$(this.config.suggest);\n\t\t\tconst data = this.config.collection || this.config.options;\n\t\t\tif (data)\n\t\t\t\tsobj.getList().data.importData(data);\n\n\t\t\tthis.getInputNode(this.node).value = sobj.getItemText(value);\n\t\t}\n\t},\n\tgetValue:function(){\n\t\tlet value = this.getInputNode().value;\n\t\tif (this.config.suggest){\n\t\t\tconst suggest = $$(this.config.suggest),\n\t\t\t\tlist = suggest.getList();\n\t\t\tif (value || (list.getSelectedId && list.getSelectedId()))\t\n\t\t\t\tvalue = suggest.getSuggestion(value);\n\t\t}\n\t\treturn value;\n\t}\n}, editors.text);\n\neditors.richselect = extend({\n\tfocus:function(){},\n\tgetValue:function(){\n\t\treturn this.getPopup().getValue();\n\t},\n\tsetValue:function(value){\n\t\tconst suggest = this.config.collection || this.config.options;\n\t\tthis.getInputNode();\n\t\tif (suggest)\n\t\t\tthis.getPopup().getList().data.importData(suggest);\n\n\t\tthis.getPopup().show(this.node);\n\t\tthis.getPopup().setValue(value);\n\t},\n\tgetInputNode:function(){\n\t\treturn this.getPopup().getList();\n\t},\n\tpopupInit:function(popup){\n\t\tpopup.linkInput(document.body);\n\t\tattach_editend(popup);\n\t},\n\tpopupType:\"richselect\"\n}, editors.popup);\n\neditors.password = extend({\n\trender:function(){\n\t\tconst node = create(\"div\", {\n\t\t\t\"class\":\"webix_dt_editor webix_password_editor\"\n\t\t}, \"<input type='password' aria-label='\"+getLabel(this.config)+\"'><span class='webix_icon wxi-eye'></span>\");\n\n\t\tconst icon = node.querySelector(\".webix_icon\");\n\t\t_event(icon, \"click\", () => {\n\t\t\tthis.toggleInput();\n\t\t\tthis.getInputNode(this.node).focus();\n\t\t});\n\t\treturn node;\n\t},\n\ttoggleInput:function(){\n\t\tconst input = this.getInputNode(this.node);\n\t\tconst isPassword = input.getAttribute(\"type\") === \"password\";\n\t\tinput.setAttribute(\"type\", isPassword ? \"text\" : \"password\");\n\n\t\tconst icon = input.nextSibling;\n\t\ticon.className = `webix_icon wxi-eye${isPassword ? \"-slash\" : \"\"}`;\n\t}\n}, editors.text);\n\neditors.$popup = {\n\ttext:{\n\t\tview:\"popup\", width:250, height:150,\n\t\tbody:{ view:\"textarea\" }\n\t},\n\tcolor:{\n\t\tview:\"popup\",\n\t\tbody:{ view:\"colorboard\" }\n\t},\n\tdate:{\n\t\tview:\"popup\", width:250, height:250, padding:0,\n\t\tbody:{ view:\"calendar\", icons:true, borderless:true }\n\t},\n\trichselect:{\n\t\tview:\"suggest\",\n\t\tbody:{ view:\"list\", select:true }\n\t},\n\tmultiselect:{\n\t\tview:\"multisuggest\",\n\t\tsuggest:{\n\t\t\tbutton:true\n\t\t}\n\t}\n};\n\nexport default editors;","import {remove, removeCss, addCss} from \"../webix/html\";\nimport UIManager from \"../core/uimanager\";\nimport {extend, bind, delay, isUndefined} from \"../webix/helpers\";\nimport {ui, $$} from \"../ui/core\";\nimport {_event} from \"../webix/htmlevents\";\nimport {assert} from \"../webix/debug\";\nimport {attachEvent, callEvent, detachEvent} from \"../webix/customevents\";\nimport Undo from \"../core/undo\";\n\n\nimport globalState from \"../core/state\";\nimport editors from \"../webix/editors\";\n/*\n\tBehavior:EditAbility - enables item operation for the items\n\t\n\t@export\n\t\tedit\n\t\tstopEdit\n*/\n\nconst EditAbility ={\n\tdefaults:{\n\t\teditaction:\"click\"\n\t},\n\t$init:function(config){\n\t\tthis._editors = {};\n\t\tthis._in_edit_mode = 0;\n\t\tthis._edit_open_time = 0;\n\t\tthis._contentobj.style.position = \"relative\";\n\t\tif (config)\n\t\t\tconfig.onDblClick = config.onDblClick || {};\n\n\t\tthis.attachEvent(\"onAfterRender\", this._refocus_inline_editor);\n\n\t\t//when we call extend the editable prop can be already set\n\t\tif (this._settings.editable)\n\t\t\tthis._init_edit_events_once();\n\n\t\textend(this,Undo);\n\t},\n\t_refocus_try:function(newnode){\n\t\ttry{ //Chrome throws an error if selectionStart is not accessible\n\t\t\tif (typeof newnode.selectionStart == \"number\") {\n\t\t\t\tnewnode.selectionStart = newnode.selectionEnd = newnode.value.length;\n\t\t\t} else if (typeof newnode.createTextRange != \"undefined\") {\n\t\t\t\tvar range = newnode.createTextRange();\n\t\t\t\trange.collapse(false);\n\t\t\t\trange.select();\n\t\t\t}\n\t\t} catch(e){} // eslint-disable-line\n\t},\n\t_refocus_inline_editor:function(){\n\t\tvar editor = this.getEditor();\n\t\tif (editor && editor.$inline && !editor.getPopup){\n\t\t\tvar newnode = this._locateInput(editor);\n\t\t\tif (newnode && newnode != editor.node){\n\t\t\t\tvar text = editor.node.value;\n\t\t\t\teditor.node = newnode;\n\t\t\t\tnewnode.value = text;\n\t\t\t\tnewnode.focus();\n\n\t\t\t\tthis._refocus_try(newnode);\n\t\t\t} else \n\t\t\t\tthis.editStop();\n\t\t}\n\t},\n\teditable_setter:function(value){\n\t\tif (value)\n\t\t\tthis._init_edit_events_once();\n\t\treturn value;\n\t},\n\t_init_edit_events_once:function(){\n\t\t//will close editor on any click outside\n\t\tconst e1 = attachEvent(\"onEditEnd\", bind(function(){\n\t\t\tif (this._in_edit_mode)\n\t\t\t\tthis.editStop();\n\t\t}, this));\n\t\tconst e2 = attachEvent(\"onClick\", bind(function(e){\n\t\t\t//but ignore click which opens editor\n\t\t\tif (this._in_edit_mode && (new Date())-this._edit_open_time > 200){\n\t\t\t\tif (!this._last_editor || this._last_editor.popupType || !e || ( !this._last_editor.node || !this._last_editor.node.contains(e.target)))\n\t\t\t\t\tthis.editStop();\n\t\t\t}\n\t\t}, this));\n\n\t\tthis.attachEvent(\"onDestruct\", function(){ detachEvent(e1); detachEvent(e2); });\n\t\t\n\t\t//property sheet has simple data object, without events\n\t\tif (this.data.attachEvent)\n\t\t\tthis.data.attachEvent(\"onIdChange\", bind(function(oldid, newid){\n\t\t\t\tthis._changeEditorId(oldid, newid);\n\t\t\t}, this));\n\n\t\t//when clicking on row - will start editor\n\t\tthis.attachEvent(\"onItemClick\", function(id){\n\t\t\tif (this._settings.editable && this._settings.editaction == \"click\")\n\t\t\t\tthis.edit(id);\n\t\t});\n\t\tthis.attachEvent(\"onItemDblClick\", function(id){\n\t\t\tif (this._settings.editable && this._settings.editaction == \"dblclick\")\n\t\t\t\tthis.edit(id);\n\t\t});\n\t\t//each time when we clicking on input, reset timer to prevent self-closing\n\t\tthis._reset_active_editor = bind(function(){\n\t\t\tthis._edit_open_time = new Date();\n\t\t},this);\n\n\t\tthis._init_edit_events_once = function(){};\n\n\t\tif (this._component_specific_edit_init)\n\t\t\tthis._component_specific_edit_init();\n\t},\n\t_handle_live_edits:function(){\n\t\tdelay(function(){\n\t\t\tvar editor = this.getEditor();\n\t\t\tif (editor && editor.config.liveEdit){\n\t\t\t\tvar state = { value:editor.getValue(), old: editor.value };\n\t\t\t\tif (state.value == state.old) return;\n\n\t\t\t\teditor.value = state.value;\n\t\t\t\tthis._set_new_value(editor, state.value, false);\n\t\t\t\tthis.callEvent(\"onLiveEdit\", [state, editor]);\n\t\t\t}\n\t\t}, this);\n\t},\n\t_show_editor_form:function(id){\n\t\tvar form = this._settings.form;\n\t\tif (typeof form != \"string\")\n\t\t\tthis._settings.form = form = ui(form).config.id;\n\n\t\tform = $$(form);\n\t\tvar realform = form.setValues?form:form.getChildViews()[0];\n\t\t\n\t\trealform.setValues(this.getItem(id.row || id), false, \"auto\");\n\t\tform.config.master = this.config.id;\n\t\tform.show( this.getItemNode(id) );\n\n\t\tvar first = realform.getChildViews()[0];\n\t\tif (first.focus)\n\t\t\tfirst.focus();\n\t},\n\tedit:function(id, preserve, show){\n\t\tif (!this._settings.editable || !this.callEvent(\"onBeforeEditStart\", [id])) return;\n\t\tif (this._settings.form)\n\t\t\treturn this._show_editor_form(id);\n\n\t\tvar editor = this._get_editor_type(id);\n\t\tif (editor){\n\t\t\tif (this.getEditor(id)) return;\n\t\t\tif (!preserve) this.editStop();\n\n\t\t\t//render html input\n\t\t\tassert(editors[editor], \"Invalid editor type: \"+editor);\n\t\t\tvar type = extend({}, editors[editor]);\n\n\t\t\tvar node = this._init_editor(id, type, show);\n\t\t\tif (type.config.liveEdit)\n\t\t\t\tthis._live_edits_handler = this.attachEvent(\"onKeyPress\", this._handle_live_edits);\n\n\t\t\tvar area = type.getPopup?type.getPopup(node)._viewobj:node;\n\n\t\t\tif (area)\n\t\t\t\t_event(area, \"click\", this._reset_active_editor);\n\t\t\tif (node)\n\t\t\t\t_event(node, \"input\", this._on_editor_change, { bind:{ view:this, id:id }});\n\t\t\tif (show !== false)\n\t\t\t\ttype.focus();\n\n\t\t\tif (this.$fixEditor)\n\t\t\t\tthis.$fixEditor(type);\n\n\t\t\t//save time of creation to prevent instant closing from the same click\n\t\t\tthis._edit_open_time = globalState.edit_open_time = new Date();\n\n\t\t\tUIManager.setFocus(this, true);\n\t\t\tthis.callEvent(\"onAfterEditStart\", [id]);\n\t\t\treturn type;\n\t\t}\n\t\treturn null;\n\t},\n\tgetEditor:function(id){\n\t\tif (!id)\n\t\t\treturn this._last_editor;\n\n\t\treturn this._editors[id];\n\t},\n\t_changeEditorId:function(oldid, newid)\t{\n\t\tvar editor = this._editors[oldid];\n\t\tif (editor){\n\t\t\tthis._editors[newid] = editor;\n\t\t\teditor.id = newid;\n\t\t\tdelete this._editors[oldid];\n\t\t}\n\t},\n\t_on_editor_change:function(){\n\t\tif (this.view.hasEvent(\"onEditorChange\"))\n\t\t\tthis.view.callEvent(\"onEditorChange\", [this.id, this.view.getEditorValue(this.id) ]);\n\t},\n\t_get_edit_config:function(){\n\t\treturn this._settings;\n\t},\n\t_init_editor:function(id, type, show){\n\t\ttype.config = this._get_edit_config(id);\n\t\tvar node = type.render();\n\n\t\tif (type.$inline)\n\t\t\tnode = this._locateInput(id);\n\t\ttype.node = node;\n\n\t\tvar item = this.getItem(id);\n\t\t//value can be configured by editValue option\n\t\tvar value = item[this._settings.editValue||\"value\"];\n\t\t//if property was not defined - use empty value\n\t\tif (isUndefined(value))\n\t\t\tvalue = \"\";\n\n\t\ttype.setValue(value, item);\n\t\ttype.value = value;\n\n\t\tthis._addEditor(id, type);\n\n\t\tif(type.getPopup)\n\t\t\ttype.getPopup()._editorMaster = this._settings.id;\n\t\t//show it over cell\n\t\tif (show !== false)\n\t\t\tthis.showItem(id);\n\t\tif (!type.$inline)\n\t\t\tthis._sizeToCell(id, node, true);\n\n\t\tif (type.afterRender)\n\t\t\ttype.afterRender();\n\t\treturn node;\n\t},\n\t_locate_cell:function(id){\n\t\treturn this.getItemNode(id);\n\t},\n\t_locateInput:function(id){\n\t\tvar cell = this._locate_cell(id);\n\t\tif (cell)\n\t\t\tcell = cell.getElementsByTagName(\"input\")[0] || cell;\n\n\t\treturn cell;\n\t},\n\t_get_editor_type:function(){\n\t\treturn this._settings.editor;\n\t},\n\t_addEditor:function(id, type){\n\t\ttype.id = id;\n\t\tthis._editors[id]= this._last_editor = type;\n\t\tthis._in_edit_mode++;\n\t},\n\t_removeEditor:function(editor){\n\t\tif (this._last_editor == editor)\n\t\t\tthis._last_editor = 0;\n\t\t\n\t\tif (editor.destroy)\n\t\t\teditor.destroy();\n\n\t\tdelete editor.popup;\n\t\tdelete editor.node;\n\n\t\tdelete this._editors[editor.id];\n\t\tthis._in_edit_mode--;\n\t},\n\tfocusEditor:function(){\n\t\tvar editor = this.getEditor.apply(this, arguments);\n\t\tif (editor && editor.focus)\n\t\t\teditor.focus();\n\t},\n\teditCancel:function(){\n\t\tthis.editStop(null, null, true);\n\t},\n\t_applyChanges: function(el){\n\t\tif (el){\n\t\t\tvar ed = this.getEditor();\n\t\t\tif (ed && ed.getPopup && ed.getPopup() == el.getTopParentView()) return;\n\t\t}\n\t\tthis.editStop();\n\t},\n\teditStop:function(id){\n\t\tif (this._edit_stop) return;\n\t\tthis._edit_stop = 1;\n\n\n\t\tvar cancel = arguments[2];\n\t\tvar result = 1;\n\t\tif (!id){\n\t\t\tthis._for_each_editor(function(editor){\n\t\t\t\tresult = result * this._editStop(editor, cancel);\n\t\t\t});\n\t\t} else \n\t\t\tresult = this._editStop(this._editors[id], cancel);\n\n\t\tthis._edit_stop = 0;\n\t\treturn result;\n\t},\n\t_cellPosition:function(id){\n\t\tvar html = this.getItemNode(id);\n\t\treturn {\n\t\t\tleft:html.offsetLeft, \n\t\t\ttop:html.offsetTop,\n\t\t\theight:html.offsetHeight,\n\t\t\twidth:html.offsetWidth,\n\t\t\tparent:this._contentobj\n\t\t};\n\t},\n\t_sizeToCell:function(id, node, inline){\n\t\t//fake inputs\n\t\tif (!node.style) return;\n\n\t\tvar pos = this._cellPosition(id, null, true);\n\n\t\tnode.style.top = pos.top + \"px\";\n\t\tnode.style.left = pos.left + \"px\";\n\n\t\tnode.style.width = pos.width-1+\"px\";\n\t\tnode.style.height = pos.height-1+\"px\";\n\n\t\tnode.top = pos.top; //later will be used during y-scrolling\n\n\t\tif (inline) pos.parent.appendChild(node);\n\t\treturn pos;\n\t},\n\t_for_each_editor:function(handler){\n\t\tfor (var editor in this._editors)\n\t\t\thandler.call(this, this._editors[editor]);\n\t},\n\t_editStop:function(editor, ignore){\n\t\tif (!editor || globalState._final_destruction) return;\n\t\tvar state = { \n\t\t\tvalue : this._get_new_value(editor), \n\t\t\told : editor.value\n\t\t};\n\t\tif (this.callEvent(\"onBeforeEditStop\", [state, editor, ignore])){\n\t\t\tif (!ignore){\n\t\t\t\t//special case, state.old = 0, state.value = \"\"\n\t\t\t\t//we need to state.old to string, to detect the change\n\t\t\t\tvar old = state.old;\n\t\t\t\tif (typeof state.value == \"string\") old += \"\";\n\n\t\t\t\tif (old != state.value || editor.config.liveEdit){\n\t\t\t\t\tvar item = this._set_new_value(editor, state.value, true);\t\n\t\t\t\t\tthis.updateItem(editor.row || editor.id, item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (editor.$inline)\n\t\t\t\teditor.node = null;\n\t\t\telse\n\t\t\t\tremove(editor.node);\n\n\t\t\tvar popup = editor.config.suggest;\n\t\t\tif (popup && typeof popup == \"string\")\n\t\t\t\t$$(popup).hide();\n\n\t\t\tthis._removeEditor(editor);\n\t\t\tif (this._live_edits_handler)\n\t\t\t\tthis.detachEvent(this._live_edits_handler);\n\n\t\t\tthis.callEvent(\"onAfterEditStop\", [state, editor, ignore]);\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t},\n\tvalidateEditor:function(id){\n\t\tlet result = true;\n\t\tif (this._settings.rules){\n\t\t\tconst editor = this.getEditor(id);\n\t\t\tconst key = editor.column||this._settings.editValue||\"value\";\n\t\t\tconst rule = this._settings.rules[key];\n\t\t\tconst all = this._settings.rules.$all;\n\t\t\tconst input = editor.getInputNode();\n\n\t\t\tif ((rule || all) && !input._viewobj){ //only for html inputs\n\t\t\t\tconst obj = this.data.getItem(editor.row||editor.id);\n\t\t\t\tconst value = editor.getValue();\n\n\t\t\t\tif (rule)\n\t\t\t\t\tresult = rule.call(this, value, obj, key);\n\t\t\t\tif (all)\n\t\t\t\t\tresult = all.call(this, value, obj, key) && result;\n\t\t\t\n\t\t\t\tif (result)\n\t\t\t\t\tremoveCss(input, \"webix_invalid\");\n\t\t\t\telse\n\t\t\t\t\taddCss(input, \"webix_invalid\");\n\n\t\t\t\tcallEvent(\"onLiveValidation\", [editor, result, obj, value]);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t},\n\tgetEditorValue:function(id){\n\t\tvar editor;\n\t\tif (arguments.length === 0)\n\t\t\teditor = this._last_editor;\n\t\telse\n\t\t\teditor = this.getEditor(id);\n\n\t\tif (editor)\n\t\t\treturn editor.getValue();\n\t},\n\tgetEditState:function(){\n\t\treturn this._last_editor || false;\n\t},\n\teditNext:function(next, from){ \n\t\tnext = next !== false; //true by default\n\t\tif (this._in_edit_mode == 1 || from){\n\t\t\t//only if one editor is active\n\t\t\tvar editor_next = this._find_cell_next((this._last_editor || from), function(id){\n\t\t\t\tif (this._get_editor_type(id))\n\t\t\t\t\treturn true;\n\t\t\t\treturn false;\n\t\t\t}, next);\n\n\t\t\tif (this.editStop()){\t//if we was able to close previous editor\n\t\t\t\tif (editor_next){\t//and there is a new target\n\t\t\t\t\tthis.edit(editor_next);\t//init new editor\n\t\t\t\t\tthis._after_edit_next(editor_next);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\t//stab, used in datatable\n\t_after_edit_next:function(){},\n\t_find_cell_next:function(start, check, direction){\n\t\tvar row = this.getIndexById(start.id);\n\t\tvar order = this.data.order;\n\t\t\n\t\tif (direction){\n\t\t\tfor (let i=row+1; i<order.length; i++){\n\t\t\t\tif (check.call(this, order[i]))\n\t\t\t\t\treturn order[i];\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let i=row-1; i>=0; i--){\n\t\t\t\tif (check.call(this, order[i]))\n\t\t\t\t\treturn order[i];\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\t_get_new_value(editor){\n\t\treturn editor.getValue();\n\t},\n\t_set_new_value:function(editor, new_value, copy){\n\t\tvar item = copy ? {} : this.getItem(editor.id);\n\t\titem[this._settings.editValue||\"value\"] = new_value;\n\t\treturn item;\n\t}\n};\n\nexport default EditAbility;","import {_to_array, uid} from \"../webix/helpers\";\nimport {assert} from \"../webix/debug\";\nimport GroupMethods from \"../core/groupmethods\";\n\n\nconst GroupStore = {\n\t$init:function(){\n\t\tthis.attachEvent(\"onClearAll\", () => this._not_grouped_order = null);\n\t\tthis.attachEvent(\"onSyncApply\", () => this._not_grouped_order = null);\n\t},\n\tungroup:function(target){\n\t\tif (this.getBranchIndex){\n\t\t\tif (!this._ungroupLevel(target)) return;\n\t\t} else {\n\t\t\tif (!this._not_grouped_order) return;\n\n\t\t\tthis.order = this._not_grouped_order;\n\t\t\tthis.pull = this._not_grouped_pull;\n\t\t}\n\t\t\n\t\tthis.callEvent(\"onStoreUpdated\",[]);\n\t},\n\t_ungroupLevel(target){\n\t\tconst parent = target || 0;\n\t\tconst level = parent == \"0\" ? 1 : this.getItem(parent).$level + 1;\n\t\tlet changed = false;\n\t\tconst top = this.branch[parent];\n\t\tlet order = [];\n\n\t\tfor (var i=0; i<top.length; i++){\n\t\t\tconst id = top[i];\n\t\t\tif (this.pull[id].$group){\n\t\t\t\tchanged = true;\n\t\t\t\tvar group = this.branch[id];\n\n\t\t\t\tif (group)\n\t\t\t\t\tthis.branch[id] = group.filter(a => {\n\t\t\t\t\t\tif (!this.pull[a].$footer)\n\t\t\t\t\t\t\treturn a;\n\t\t\t\t\t\tthis._unregisterItem(a);\n\t\t\t\t\t});\n\t\t\t\torder = order.concat(this.branch[id] || []);\n\t\t\t\tthis._unregisterItem(id);\n\t\t\t} else\n\t\t\t\torder.push(id);\n\t\t}\n\n\t\tif (!changed) return false;\n\t\tthis.branch[parent] = order;\n\t\tthis._fix_group_levels(this.branch[parent], parent, level);\n\n\t\tif (typeof target === \"undefined\")\n\t\t\tthis._ungroupLevel();\n\n\t\treturn true;\n\t},\n\t_unregisterItem(id){\n\t\tdelete this.pull[id];\n\t\tdelete this.branch[id];\n\t},\n\t_group_processing:function(scheme){\n\t\tthis.blockEvent();\n\t\tthis.group(scheme);\n\t\tthis.unblockEvent();\n\t},\n\t_group_prop_accessor:function(val){\n\t\tif (typeof val == \"function\")\n\t\t\treturn val;\n\t\tconst acc = function(obj){ return obj[val]; };\n\t\tacc.$name = val;\n\t\treturn acc;\n\t},\t\n\tgroup:function(config, target){\n\t\tassert(config, \"Empty config\");\n\t\tlet input;\n\n\t\tif (typeof config === \"string\"){\n\t\t\tinput = config;\n\t\t\tconfig = { by:this._group_prop_accessor(config), map:{} };\n\t\t} else if (typeof config === \"function\"){\n\t\t\tconfig = { by:config, map:{} };\n\t\t} else if (typeof config.by === \"string\"){\n\t\t\tinput = config.by;\n\t\t\tconfig.by = this._group_prop_accessor(config.by);\n\t\t}\n\t\tconfig.map = config.map || {};\n\t\tif (input && !config.map[input])\n\t\t\tconfig.map[input] = [input];\n\t\tconfig.missing = (config.missing === undefined) ? true : config.missing;\n\n\t\tif (this.getBranchIndex)\n\t\t\treturn this._group_tree(config, target);\n\t\t\n\t\tif (!this._not_grouped_order){\n\t\t\tthis._not_grouped_order = this.order;\n\t\t\tthis._not_grouped_pull = this.pull;\n\t\t}\n\n\t\tconst groups = {};\n\t\tconst labels = [];\n\t\tconst missed = [];\n\t\tconst misGroup = config.missing;\n\t\tthis.each(function(data){\n\t\t\tlet current = config.by(data);\n\t\t\tif (!current && current !== 0){\n\t\t\t\tif (misGroup === false) return;\n\t\t\t\tif (misGroup === true){\n\t\t\t\t\tmissed.push(data);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcurrent = misGroup;\n\t\t\t}\n\n\t\t\tif (!groups[current]){\n\t\t\t\tlabels.push({ id:current, value:current, $group:true, $row:config.row });\n\t\t\t\tgroups[current] = _to_array();\n\t\t\t}\n\t\t\tgroups[current].push(data);\n\t\t});\n\n\t\tfor (let i=0; i<labels.length; i++){\n\t\t\tlet group = labels[i];\n\t\t\tthis._map_group(config.map, group, groups[labels[i].id]);\n\n\t\t\tif (this.hasEvent(\"onGroupCreated\"))\n\t\t\t\tthis.callEvent(\"onGroupCreated\", [group.id, group.value, groups[labels[i].id]]);\n\t\t}\n\n\t\tthis.order = _to_array();\n\t\tthis.pull = {};\n\t\tthis._fill_pull(labels);\n\t\tthis._fill_pull(missed);\n\n\t\tthis.callEvent(\"onStoreUpdated\",[]);\n\t},\n\t_fill_pull:function(arr){\n\t\tfor (let i=0; i < arr.length; i++){\n\t\t\tlet id = this.id(arr[i]);\n\t\t\tif (this.pull[id])\n\t\t\t\tid = arr[i].id = uid();\n\n\t\t\tthis.pull[id] = arr[i];\n\t\t\tthis.order.push(id);\n\t\t\tif (this._scheme_init)\n\t\t\t\tthis._scheme_init(arr[i]);\n\t\t}\n\t},\n\t_map_group:function(map, group, data){\n\t\tfor (let prop in map){\n\t\t\tlet functor = (map[prop][1]||\"any\");\n\t\t\tlet property = this._group_prop_accessor(map[prop][0]);\n\t\t\tif (typeof functor != \"function\"){\n\t\t\t\tassert(GroupMethods[functor], \"Unknown grouping rule: \"+functor);\n\t\t\t\tfunctor = GroupMethods[functor];\n\t\t\t}\n\n\t\t\tgroup[prop] = functor.call(this, property, data);\n\t\t}\n\t},\n\t_group_tree:function(config, parent){\n\t\t//prepare\n\t\tlet level = 0;\n\t\tif (parent)\n\t\t\tlevel = this.getItem(parent).$level;\n\t\telse parent = 0;\n\n\t\t//run\n\t\tconst topbranch = [];\n\t\tconst labels = [];\n\t\tconst missed = [];\n\n\t\tlet order = this.branch[parent];\n\t\tlet groups = {};\n\t\tfor (let i=0; i<order.length; i++){\n\t\t\tconst data = this.getItem(order[i]);\n\t\t\tlet current = config.by(data);\n\n\t\t\tif (!current && current !== 0)\n\t\t\t\tif (config.missing === false) continue;\n\t\t\t\telse if (config.missing === true){\n\t\t\t\t\tmissed.push(data.id);\n\t\t\t\t\tcontinue;\n\t\t\t\t} else current = config.missing;\n\n\t\t\tlet ancestor = groups[current];\n\t\t\tif (!ancestor){\n\t\t\t\tlet id = uid();\n\t\t\t\tlet newitem = this.pull[id] = { id, value:current, $group:true, $row:config.row};\n\t\t\t\tif (this._scheme_init)\n\t\t\t\t\tthis._scheme_init(newitem);\n\n\t\t\t\tlabels.push(newitem);\n\t\t\t\tancestor = groups[current] = this.branch[id] = [];\n\t\t\t\tancestor._formath = [];\n\t\t\t\ttopbranch.push(id);\n\t\t\t}\n\t\t\tancestor.push(data.id);\n\t\t\tancestor._formath.push(data);\n\t\t}\n\n\t\tthis.branch[parent] = topbranch.concat(missed);\n\t\tfor (let i=0; i<labels.length; i++){\n\t\t\tlet group = labels[i];\n\t\t\tthis._map_group(config.map, group, this.branch[labels[i].id]._formath);\n\n\t\t\tif (this.hasEvent(\"onGroupCreated\"))\n\t\t\t\tthis.callEvent(\"onGroupCreated\", [group.id, group.value, this.branch[group.id]._formath]);\n\n\t\t\tif (config.footer){\n\t\t\t\tlet id = \"footer$\"+group.id;\n\t\t\t\tlet footer = this.pull[id] = { id:id, $footer:true, value: group.value, $level:level, $count:0, $parent:group.id, $row:config.footer.row};\n\n\t\t\t\tthis._map_group(config.footer, footer, this.branch[labels[i].id]._formath);\n\t\t\t\t\n\t\t\t\tthis.branch[group.id].push(footer.id);\n\t\t\t\tthis.callEvent(\"onGroupFooter\", [footer.id, footer.value, this.branch[group.id]._formath]);\n\t\t\t}\n\t\t\tdelete this.branch[group.id]._formath;\n\t\t}\n\n\t\tthis._fix_group_levels(this.branch[parent], parent, level+1);\n\t\tthis.callEvent(\"onStoreUpdated\",[]);\n\t},\n\t_fix_group_levels:function(branch, parent, level){\n\t\tif (parent)\n\t\t\tthis.getItem(parent).$count = branch.length;\n\n\t\tfor (let i = 0; i < branch.length; i++) {\n\t\t\tconst item = this.pull[branch[i]];\n\t\t\titem.$level = level;\n\t\t\titem.$parent = parent;\n\n\t\t\tconst next = this.branch[item.id];\n\t\t\tif (next)\n\t\t\t\tthis._fix_group_levels(next, item.id, level+1);\n\t\t}\n\t}\n};\n\nexport default GroupStore;","import {preventEvent} from \"../webix/html\";\nimport {_power_array} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport UIManager from \"./uimanager\";\n\n\n/*aria-style handling for options of multiple-value controls (radio, segmented, tabbar)*/\n\nconst HTMLOptions = {\n\t$init: function(){\n\t\tthis.$ready.push(()=>{\n\t\t\tif(!this.customRadio_setter || this.config.customRadio)\n\t\t\t\t_event( this.$view, \"keydown\", this._moveSelection, {bind:this});\n\t\t});\n\t},\n\t_focus: function(){\n\t\tif(!UIManager.canFocus(this))\n\t\t\treturn false;\n\n\t\tconst input = this._getInputNode();\n\t\tif (input)\n\t\t\tfor (let i=0; i<input.length; i++)\n\t\t\t\tif (input[i].getAttribute(\"tabindex\") == \"0\")\n\t\t\t\t\treturn input[i].focus();\n\t},\n\t_blur: function(){\n\t\tconst input = this._getInputNode();\n\t\tif (input)\n\t\t\tfor (let i=0; i<input.length; i++)\n\t\t\t\tif (input[i].getAttribute(\"tabindex\") == \"0\")\n\t\t\t\t\treturn input[i].blur();\n\t},\n\t_moveSelection: function(e){\n\t\tconst code = e.which || e.keyCode;\n\n\t\tif (code>34 && code <41){\n\t\t\tconst inp = this._getInputNode();\n\t\t\tlet index = false;\n\n\t\t\tif (!inp.length) return;\n\t\t\tpreventEvent(e);\n\n\t\t\tconst dir = (code === 37 || code === 38 || code === 35)?-1:1;\n\t\t\tif (code === 35) index = inp.length-1;\n\t\t\telse if (code === 36 ) index = 0;\n\t\t\telse {\n\t\t\t\tfor (let i=0; i<inp.length; i++)\n\t\t\t\t\tif (inp[i].getAttribute(\"tabindex\") == \"0\"){\n\t\t\t\t\t\tindex = i + dir;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tif (index !== false){\n\t\t\t\tlet i = index;\n\t\t\t\tdo {\n\t\t\t\t\tif (i >= inp.length) i = 0;\n\t\t\t\t\tif (i < 0) i = inp.length-1;\n\n\t\t\t\t\tif (!inp[i].getAttribute(\"webix_disabled\")){\n\t\t\t\t\t\tconst id = inp[i].getAttribute(/*@attr*/\"button_id\");\n\n\t\t\t\t\t\tthis.setValue(id, \"user\");\n\t\t\t\t\t\tinp[i].focus();\n\t\t\t\t\t\ti = \"success\";\n\t\t\t\t\t}\n\t\t\t\t\telse i += dir;\n\n\t\t\t\t} while(i !== \"success\" && i !== index);\n\t\t\t}\n\t\t}\n\t},\n\t_get_tooltip_data: function(t,e){\n\t\tlet id,\n\t\t\tnode = e.target;\n\t\twhile (node && !node.webix_tooltip){\n\t\t\tid = node.getAttribute(\"webix_t_id\");\n\t\t\tif (id)\n\t\t\t\treturn this.getOption(id);\n\t\t\tnode = node.parentNode;\n\t\t}\n\t\treturn null;\n\t},\n\toptionIndex: function(id){\n\t\tconst options = this._settings.options;\n\t\tfor (let i=0; i<options.length; i++)\n\t\t\tif (options[i].id == id)\n\t\t\t\treturn i;\n\t\treturn -1;\n\t},\n\tgetOption: function(id){\n\t\tconst index = this.optionIndex(id);\n\t\tif (index !== -1)\n\t\t\treturn this._settings.options[index];\n\t\treturn null;\n\t},\n\taddOption: function(id, value, show, index){\n\t\tlet obj = id;\n\t\tif (typeof id != \"object\"){\n\t\t\tvalue = value || id;\n\t\t\tobj = { id:id, value:value };\n\t\t} else {\n\t\t\tid = obj.id;\n\t\t\tindex = show;\n\t\t\tshow = value;\n\t\t}\n\n\t\tif (this.optionIndex(id) === -1){\n\t\t\t_power_array.insertAt.call(this._settings.options, obj, index);\n\t\t\tthis.refresh();\n\n\t\t\tthis.callEvent(\"onOptionAdd\", [id, obj]);\n\t\t}\n\n\t\tif (show){\n\t\t\tif (this._settings.options.length === 1)\n\t\t\t\tthis._settings.value = \"\";\n\t\t\tthis.setValue(id, \"auto\");\n\t\t}\n\t},\n\tremoveOption: function(id){\n\t\tconst index = this.optionIndex(id);\n\n\t\tif (index !== -1){\n\t\t\tconst options = this._settings.options;\n\n\t\t\t_power_array.removeAt.call(options, index);\n\n\t\t\t// if we remove a selected option\n\t\t\tif (this._settings.value == id)\n\t\t\t\tthis._setNextVisible(options, index);\n\n\t\t\tthis.refresh();\n\n\t\t\tthis.callEvent(\"onOptionRemove\", [id, this._settings.value]);\n\t\t}\n\t},\n\t_setNextVisible: function(options, index){\n\t\tconst size = options.length;\n\n\t\tif (size && !this.customRadio_setter){\n\t\t\tindex = Math.min(index, size-1);\n\t\t\t//forward search\n\t\t\tfor (let i=index; i<size; i++)\n\t\t\t\tif (!options[i].hidden)\n\t\t\t\t\treturn this.setValue(options[i].id,\"auto\");\n\t\t\t//backward search\n\t\t\tfor (let i=index; i>=0; i--)\n\t\t\t\tif (!options[i].hidden)\n\t\t\t\t\treturn this.setValue(options[i].id,\"auto\");\n\t\t}\n\n\t\t//nothing found\t\t\n\t\tthis.setValue(\"\",\"auto\");\n\t},\n\t_getFirstActive(first){\n\t\tconst options = this._settings.options;\n\n\t\tif (options.length){\n\t\t\tfor (let i=0; i<options.length; i++)\n\t\t\t\tif (!options[i].hidden && !options[i].disabled)\n\t\t\t\t\treturn options[i].id;\n\t\t\tif (first)\n\t\t\t\treturn options[0].id;\n\t\t}\n\t\treturn \"\";\n\t},\n\t_filterOptions: function(options){\n\t\tconst copy = [];\n\t\tfor(let i=0; i<options.length; i++)\n\t\t\tif(!options[i].hidden)\n\t\t\t\tcopy.push(options[i]);\n\t\treturn copy;\n\t},\n\t_setOptionState: function(id, field, state){\n\t\tconst options = this._settings.options;\n\t\tconst index = this.optionIndex(id);\n\n\t\tif (options[index] && state != !!options[index][field]){\t\t\t\t//new state differs from previous one\n\t\t\toptions[index][field] = state;\n\n\t\t\tif (state && field === \"hidden\" && this._settings.value == id)\t\t//switch to next visible one\n\t\t\t\tthis._setNextVisible(options, index);\n\t\t\tthis.refresh();\n\t\t}\n\t},\n\thideOption: function(id){\n\t\tthis._setOptionState(id, \"hidden\", true);\n\t},\n\tshowOption: function(id){\n\t\tthis._setOptionState(id, \"hidden\", false);\n\t},\n\tdisableOption: function(id){\n\t\tthis._setOptionState(id, \"disabled\", true);\n\t},\n\tenableOption: function(id){\n\t\tthis._setOptionState(id, \"disabled\", false);\n\t}\n};\n\nexport default HTMLOptions;","import {preventEvent} from \"../webix/html\";\nimport UIManager from \"../core/uimanager\";\nimport {$$} from \"../ui/core\";\nimport {assert} from \"../webix/debug\";\n\n\nconst KeysNavigation = {\n\t$init:function(){\n\t\tif(this.getSelectedId)\n\t\t\tthis.attachEvent(\"onAfterRender\", this._set_focusable_item);\n\t\tif(this.moveSelection)\n\t\t\tthis.attachEvent(\"onTabFocus\", this._set_item_focus);\n\t},\n\t_set_item_focus:function(){\n\t\tif(this.getSelectedId){\n\t\t\tvar sel = this.getSelectedId(true);\n\t\t\tif(!sel.length || !this.getItemNode(sel[0]))\n\t\t\t\tthis.moveSelection(\"down\"); //select and show\n\t\t}\n\t},\n\t_set_focusable_item:function(){\n\t\tvar sel = this.getSelectedId(true);\n\t\tif(!sel.length || !this.getItemNode(sel[0])){\n\t\t\tvar node =  this._dataobj.querySelector(\"[\"+this._id+\"]\");\n\t\t\tif(node)\n\t\t\t\tnode.setAttribute(\"tabindex\", \"0\");\n\t\t}\n\t},\n\t_navigation_helper:function(mode){\n\t\treturn function(view, e){\n\t\t\tvar tag = e.target;\n\n\t\t\t//ignore clipboard listener\n\t\t\tif (!tag.getAttribute(/*@attr*/\"webixignore\")){\n\t\t\t\t//ignore hotkeys if focus in the common input\n\t\t\t\t//to allow normal text edit operations\n\t\t\t\tvar name = tag.tagName;\n\t\t\t\tif (name == \"INPUT\" || name == \"TEXTAREA\" || name == \"SELECT\") return true;\n\t\t\t}\n\n\t\t\tif (view && view.moveSelection && view.config.navigation && !view._in_edit_mode){\n\t\t\t\tpreventEvent(e);\n\t\t\t\treturn view.moveSelection(mode, {shift:e.shiftKey, ctrl:e.ctrlKey, e});\n\t\t\t}\n\t\t};\n\t},\n\tmoveSelection:function(mode, details, focus){\n\t\tconst config = this._settings;\n\t\tif (config.disabled) return;\n\n\t\tif ((mode == \"right\" || mode == \"left\") && this._parent_menu){\n\t\t\tconst parent = $$(this._parent_menu);\n\t\t\tparent._hide_sub_menu(true);\n\t\t\tif (parent.config.layout === \"x\")\n\t\t\t\tparent.moveSelection(mode);\n\t\t\telse\n\t\t\t\tUIManager.setFocus(parent);\n\t\t\treturn;\n\t\t}\n\n\t\t//get existing selection\n\t\tlet selected = this.getSelectedId(true);\n\t\tconst x_layout = (this.count && (config.layout ==\"x\" || config.xCount > 1));\n\n\t\tlet prev = true;\n\t\tif (!selected.length && this.count()){\n\t\t\tif (mode == \"down\" || (mode == \"right\" && x_layout)) mode = \"top\";\n\t\t\telse if (mode == \"up\" || (mode == \"left\" && x_layout)) mode = \"bottom\";\n\t\t\telse return;\n\t\t\tselected = [this.getFirstId()];\n\t\t\tprev = false;\n\t\t}\n\n\t\tif (selected.length == 1){  //if we have a selection\n\t\t\tselected = selected[0];\n\t\t\tprev = (prev === true) ? selected : null;\n\n\t\t\tif (mode == \"left\"){\n\t\t\t\tif (this.close && !this._ignore_clicks) return this.close(selected);\t//tree (not window)\n\t\t\t\tif (this._level_up && this._level_up(selected)) return this.render();\t//grouplist\n\t\t\t} else if (mode == \"right\"){\n\t\t\t\tif (this.open) return this.open(selected);\n\t\t\t\tif (this._level_down && this._level_down(selected)) return this.render();\n\t\t\t}\n\n\t\t\tif (mode == \"top\") {\n\t\t\t\tselected = this.getFirstId();\n\t\t\t} else if (mode == \"bottom\") {\n\t\t\t\tselected = this.getLastId();\n\t\t\t} else if (mode == \"up\" || mode == \"left\" || mode == \"pgup\") {\n\t\t\t\tconst index = this.getIndexById(selected);\n\t\t\t\tconst step = mode == \"pgup\" ? 10 : 1;\n\t\t\t\tselected = this.getIdByIndex(Math.max(0, index-step));\n\t\t\t} else if (mode == \"down\" || mode == \"right\" || mode == \"pgdown\") {\n\t\t\t\tconst index = this.getIndexById(selected);\n\t\t\t\tconst step = mode == \"pgdown\" ? 10 : 1;\n\t\t\t\tselected = this.getIdByIndex(Math.min(this.count()-1, index+step));\n\t\t\t} else {\n\t\t\t\tassert(false, \"Not supported selection moving mode\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst dir = (mode == \"up\" || mode == \"left\" || mode == \"pgdown\" || mode == \"bottom\")?-1:1;\n\t\t\tif (this._skip_item) {\n\t\t\t\tselected = this._skip_item(selected, prev, dir);\n\t\t\t\tif (!selected) return;\n\t\t\t}\n\n\t\t\tthis.showItem(selected);\n\t\t\tthis.select(selected);\n\n\t\t\tif (this.getSubMenu && this.getSubMenu(selected))\n\t\t\t\tthis._mouse_move_activation(selected, this.getItemNode(selected));\n\n\t\t\tif (!config.clipboard && focus !== false){\n\t\t\t\tconst node = this.getItemNode(selected);\n\t\t\t\tif (node) node.focus();\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tnavigation_setter:function(value){\n\t\t//using global flag to apply hotkey only once\n\t\tif (value && !UIManager._global_nav_grid_hotkeys){\n\t\t\tUIManager._global_nav_grid_hotkeys = true;\n\t\t\t//hotkeys will react on any component but will not work in edit mode\n\t\t\t//you can define moveSelection method to handle navigation keys\n\t\t\tUIManager.addHotKey(\"up\",         this._navigation_helper(\"up\"));\n\t\t\tUIManager.addHotKey(\"down\",       this._navigation_helper(\"down\"));\n\t\t\tUIManager.addHotKey(\"right\",      this._navigation_helper(\"right\"));\n\t\t\tUIManager.addHotKey(\"left\",       this._navigation_helper(\"left\"));\n\n\t\t\tUIManager.addHotKey(\"shift+up\",   this._navigation_helper(\"up\"));\n\t\t\tUIManager.addHotKey(\"shift+down\", this._navigation_helper(\"down\"));\n\t\t\tUIManager.addHotKey(\"shift+right\",   this._navigation_helper(\"right\"));\n\t\t\tUIManager.addHotKey(\"shift+left\", this._navigation_helper(\"left\"));\n\n\t\t\tUIManager.addHotKey(\"ctrl+shift+up\",   this._navigation_helper(\"up\"));\n\t\t\tUIManager.addHotKey(\"ctrl+shift+down\", this._navigation_helper(\"down\"));\n\t\t\tUIManager.addHotKey(\"ctrl+shift+right\",   this._navigation_helper(\"right\"));\n\t\t\tUIManager.addHotKey(\"ctrl+shift+left\", this._navigation_helper(\"left\"));\n\n\t\t\tUIManager.addHotKey(\"pageup\", \tthis._navigation_helper(\"pgup\"));\n\t\t\tUIManager.addHotKey(\"pagedown\",   this._navigation_helper(\"pgdown\"));\n\t\t\tUIManager.addHotKey(\"home\", \t    this._navigation_helper(\"top\"));\n\t\t\tUIManager.addHotKey(\"end\", \t\tthis._navigation_helper(\"bottom\"));\n\n\t\t\t\n\n\t\t}\n\n\t\treturn value;\n\t}\n};\n\nexport default KeysNavigation;","import {_getClassName, locate} from \"../webix/html\";\nimport UIManager from \"../core/uimanager\";\nimport {extend, delay, toFunctor} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport env from \"../webix/env\";\n\n\nconst MouseEvents={\n\t$init: function(config){\n\t\tconfig = config || {};\n\n\t\tthis._clickstamp = 0;\n\t\tthis._dbl_sensetive = env.touch ? 500 : 300;\n\t\tthis._item_clicked = null;\n\n\t\tthis._mouse_action_extend(config.onClick, \"on_click\");\n\t\tthis._mouse_action_extend(config.onContext, \"on_context\");\n\t\tthis._mouse_action_extend(config.onDblClick, \"on_dblclick\");\n\t\tthis._mouse_action_extend(config.onMouseMove, \"on_mouse_move\");\n\n\t\t//attach dom events if related collection is defined\n\t\tif (this.on_click)\n\t\t\t_event(this._contentobj, \"click\", this._onClick, {bind:this});\n\n\t\tif (this.on_context)\n\t\t\t_event(this._contentobj, \"contextmenu\", this._onContext, {bind:this});\n\n\t\tif (this.on_mouse_move)\n\t\t\tthis._enable_mouse_move();\n\t},\n\n\t_enable_mouse_move:function(){\n\t\tif (!this._mouse_move_enabled){\n\t\t\tthis.on_mouse_move = this.on_mouse_move || {};\n\t\t\t_event(this._contentobj,\"mousemove\",this._onMouse,{bind:this});\n\t\t\t_event(this._contentobj,\"mouseout\",this._onMouse,{bind:this});\n\t\t\tthis._mouse_move_enabled = 1;\n\t\t\tthis.attachEvent(\"onDestruct\", function(){\n\t\t\t\tif (this._mouse_move_timer)\n\t\t\t\t\twindow.clearTimeout(this._mouse_move_timer);\n\t\t\t});\n\t\t}\n\n\t},\n\n\t_mouse_action_extend:function(config, key){\n\t\tif (config){\n\t\t\tconst now = this[key];\n\t\t\tconst step = now ? extend({}, now) : {};\n\t\t\tthis[key] = extend(step, config);\n\t\t}\n\t},\n\n\t//inner onclick object handler\n\t_onClick: function(e){\n\t\tif(!this.isEnabled())\n\t\t\treturn false;\n\n\t\tUIManager._focus_action(this);\n\n\t\tif(this.on_dblclick && this.locate){\n\t\t\tif(this._clickHandler && this._item_clicked+\"\" == this.locate(e)+\"\"){\n\t\t\t\tclearTimeout(this._clickHandler);\n\t\t\t\tthis._clickHandler = null;\n\t\t\t\treturn this._onDblClick(e);\n\t\t\t}\n\n\t\t\tthis._item_clicked = this.locate(e);\n\t\t\tthis._clickHandler = delay(()=> {\n\t\t\t\tthis._clickHandler = null;\n\t\t\t\treturn this._mouseEvent(e, this.on_single_click, \"ItemSingleClick\");\n\t\t\t}, null, [e], this._dbl_sensetive);\n\t\t}\n\n\t\treturn this._mouseEvent(e, this.on_click, \"ItemClick\");\n\t},\n\t//inner ondblclick object handler\n\t_onDblClick: function(e) {\n\t\treturn this._mouseEvent(e,this.on_dblclick,\"ItemDblClick\");\n\t},\n\t//process oncontextmenu events\n\t_onContext: function(e) {\n\t\tthis._mouseEvent(e, this.on_context, \"BeforeContextMenu\", \"AfterContextMenu\");\n\t},\n\t/*\n\t\tevent throttler - ignore events which occurs too fast\n\t\tduring mouse moving there are a lot of event firing - we need no so much\n\t\talso, mouseout can fire when moving inside the same html container - we need to ignore such fake calls\n\t*/\n\t_onMouse:function(e){\n\t\tif (this.$destructed) return;\n\t\tif (document.createEventObject)\t//make a copy of event, will be used in timed call\n\t\t\te = document.createEventObject(event);\n\n\t\tif (this._mouse_move_timer)\t//clear old event timer\n\t\t\twindow.clearTimeout(this._mouse_move_timer);\n\n\t\t//this event just inform about moving operation, we don't care about details\n\t\tthis.callEvent(\"onMouseMoving\",[e]);\n\t\t//set new event timer\n\t\tthis._mouse_move_timer = delay(function(e){\n\t\t\t//called only when we have at least 100ms after previous event\n\t\t\tif (e.type == \"mousemove\")\n\t\t\t\tthis._onMouseMove(e);\n\t\t\telse\n\t\t\t\tthis._onMouseOut(e);\n\t\t}, this, [e], (this._settings.mouseEventDelay||500));\n\t},\n\n\t//inner mousemove object handler\n\t_onMouseMove: function(e) {\n\t\tif (!this._mouseEvent(e,this.on_mouse_move,\"MouseMove\"))\n\t\t\tthis._onMouseOut(e);\n\t},\n\t//inner mouseout object handler\n\t_onMouseOut: function(e) {\n\t\tthis.callEvent(\"onMouseOut\",[e]);\n\t},\n\t//common logic for click and dbl-click processing\n\t_mouseEvent:function(e, hash, name, pair){\n\t\tif (e.processed || !this._viewobj) return;\n\t\te.processed = true;\n\n\t\tlet trg = e.target;\n\n\t\tlet css = \"\";\n\t\tlet id = null;\n\t\tlet found = false;\n\t\t//loop through all parents\n\t\t//we need to check for this._viewobj as some handler can destroy the view\n\t\twhile (trg && trg.parentNode && this._viewobj && trg != this._viewobj.parentNode){\n\t\t\tif (!found && trg.getAttribute){ //if element with ID mark is not detected yet\n\t\t\t\tid = trg.getAttribute(this._id); //check id of current one\n\t\t\t\tif (id){\n\t\t\t\t\t// prevent clicking on disabled items\n\t\t\t\t\tif (trg.getAttribute(\"webix_disabled\")){\n\t\t\t\t\t\tthis._item_clicked = null;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._item_clicked = id;\n\t\t\t\t\tif (this.callEvent){\n\t\t\t\t\t\t//it will be triggered only for first detected ID, in case of nested elements\n\t\t\t\t\t\tif (!this.callEvent(\"on\"+name,[id,e,trg])) return;\n\t\t\t\t\t\tif (pair) this.callEvent(\"on\"+pair,[id,e,trg]);\n\t\t\t\t\t}\n\t\t\t\t\t//set found flag\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcss=_getClassName(trg);\n\t\t\t//check if pre-defined reaction for element's css name exists\n\t\t\tif (hash && css){\n\t\t\t\tcss = css.toString().split(\" \");\n\t\t\t\tfor (let i = 0; i < css.length; i++){\n\t\t\t\t\tif (hash[css[i]]){\n\t\t\t\t\t\tconst functor = toFunctor(hash[css[i]], this.$scope);\n\t\t\t\t\t\tconst res =  functor.call(this,e,id||locate(e, this._id),trg);\n\t\t\t\t\t\tif(res === false)\n\t\t\t\t\t\t\treturn found;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttrg = trg.parentNode;\n\t\t}\n\t\treturn found; //returns true if item was located and event was triggered\n\t}\n};\n\nexport default MouseEvents;\n","import {delay} from \"../webix/helpers\";\nimport {ui, $$} from \"../ui/core\";\n\n\nconst PagingAbility = {\n\tpager_setter:function(pager){\n\t\tif (typeof pager == \"string\"){\n\t\t\tvar ui_pager = $$(pager);\n\t\t\tif (!ui_pager){\n\t\t\t\tthis.$blockRender = true;\n\t\t\t\tdelay(function(){\n\t\t\t\t\tvar obj = $$(pager);\n\n\t\t\t\t\tthis._settings.pager = this.pager_setter(obj);\n\t\t\t\t\tvar s = obj._settings;\n\t\t\t\t\ts.count = this.data._count_pager_total(s.level);\n\t\t\t\t\tobj.refresh();\n\n\t\t\t\t\tthis.$blockRender = false;\n\t\t\t\t\tthis.render();\n\t\t\t\t}, this);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tpager = ui_pager;\n\t\t}\n\n\t\tfunction check_pager_sizes(repeat){\n\t\t\t// reset topSplit - since now the pager is responsible for rendering\n\t\t\tif (this.config.topSplit)\n\t\t\t\tthis.config.topSplit = 0;\n\n\t\t\tif (pager.config.autosize && this.getVisibleCount){\n\t\t\t\tvar count = this.getVisibleCount();\n\t\t\t\tif (isNaN(count)){\n\t\t\t\t\tpager.config.size = 1;\n\t\t\t\t\tdelay(check_pager_sizes, this, [true]);\n\t\t\t\t} else if (count != pager.config.size){\n\t\t\t\t\tpager.config.size = count;\n\t\t\t\t\tpager.refresh();\n\t\t\t\t\tif (repeat === true)\n\t\t\t\t\t\tthis.refresh();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar s = this._settings.pager;\n\t\t\t//initial value of pager = -1, waiting for real value\n\t\t\tif (s.page == -1) return false;\t\n\t\t\t\n\t\t\tthis.data.$min = this._count_pager_index(0, s.page*s.size);\t//affect data.getRange\n\t\t\tthis.data.$max = this._count_pager_index(this.data.$min, s.size);\n\t\t\tthis.data.$pagesize = this.data.$max - this.data.$min;\n\n\t\t\treturn true;\n\t\t}\n\n\t\tthis.attachEvent(\"onBeforeRender\",check_pager_sizes);\n\n\t\tif (!pager.$view){\n\t\t\tpager.view = \"pager\";\n\t\t\tpager = ui(pager);\n\t\t}\n\t\tthis._pager = pager;\n\t\tpager.$master = this;\n\n\t\tthis.data.attachEvent(\"onStoreUpdated\", function(){\n\t\t\tvar s = pager._settings;\n\t\t\ts.count = this._count_pager_total(s.level);\n\t\t\tpager.refresh();\n\t\t});\n\t\tthis.data._count_pager_total = this._count_pager_total;\n\n\t\treturn pager._settings;\n\t},\n\t_count_pager_total:function(level){\n\t\tlet childs = 0;\n\n\t\tif (level)\n\t\t\tthis.order.forEach(id => {\n\t\t\t\tif (id && this.getItem(id).$level != 1)\n\t\t\t\t\tchilds++;\n\t\t\t});\n\n\t\treturn this.count()-childs;\n\t},\n\t_count_pager_index:function(start, count){\n\t\tif (this._settings.pager.level){\n\t\t\tconst order = this.data.order;\n\t\t\tif(!order.length)\n\t\t\t\tcount = 0;\n\t\t\telse\n\t\t\t\tfor(let i = start; i <= start+count; i++){\n\t\t\t\t\tconst id = order[i];\n\t\t\t\t\tif(id && this.getItem(id).$level != 1)\n\t\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t}\n\t\treturn start+count;\n\t},\n\tsetPage:function(value){\n\t\tif (this._pager)\n\t\t\tthis._pager.select(value);\n\t},\n\tgetPage:function(){\n\t\treturn this._pager._settings.page;\n\t},\n\tgetPager:function(){\n\t\treturn this._pager;\n\t}\n};\n\nexport default PagingAbility;","import {locate, insertBefore, remove} from \"../webix/html\";\nimport {bind, clone, extend, toFunctor} from \"../webix/helpers\";\nimport {assert} from \"../webix/debug\";\nimport template from \"../webix/template\";\n\nimport type from \"../webix/type\";\n\nconst RenderStack ={\n\t$init:function(){\n\t\tassert(this.data,\"RenderStack :: Component doesn't have DataStore\");\n\t\tassert(template,\"template :: template is not accessible\");\n\n\t\t//used for temporary HTML elements\n\t\t//automatically nulified during destruction\n\t\tthis._html = document.createElement(\"DIV\");\n\t\t\t\t\n\t\tthis.data.attachEvent(\"onIdChange\", bind(this._render_change_id, this));\n\t\tthis.attachEvent(\"onItemClick\", this._call_onclick);\n\t\t\n\t\t//create copy of default type, and set it as active one\n\t\tif (!this.types){ \n\t\t\tthis.types = { \"default\" : this.type };\n\t\t\tthis.type.name = \"default\";\n\t\t}\n\n\t\tthis.type = clone(this.type);\n\t},\n\t\n\tcustomize:function(obj){ \n\t\ttype(this,obj);\n\t},\n\titem_setter:function(value){\n\t\treturn this.type_setter(value);\n\t},\n\ttype_setter:function(value){\n\t\tif(!this.types[value])\n\t\t\tthis.customize(value);\n\t\telse {\n\t\t\tthis.type = clone(this.types[value]);\n\t\t\tif (this.type.css) \n\t\t\t\tthis._contentobj.className+=\" \"+this.type.css;\n\t\t}\n\t\tif (this.type.on_click)\n\t\t\textend(this.on_click, this.type.on_click);\n\n\t\treturn value;\n\t},\n\t\n\ttemplate_setter:function(value){\n\t\tthis.type.template=template(value);\n\t},\n\t//convert single item to HTML text (templating)\n\t_toHTML:function(obj){\n\t\tvar mark = this.data._marks[obj.id];\n\t\t//check if related template exist\n\t\tassert((!obj.$template || this.type[\"template\"+obj.$template]),\"RenderStack :: Unknown template: \"+obj.$template);\n\t\tthis.callEvent(\"onItemRender\",[obj]);\n\t\treturn this.type.templateStart(obj,this.type, mark)+(obj.$template?this.type[\"template\"+obj.$template]:this.type.template)(obj,this.type,mark)+this.type.templateEnd(obj, this.type,mark);\n\t},\n\t//convert item to HTML object (templating)\n\t_toHTMLObject:function(obj){\n\t\tthis._html.innerHTML = this._toHTML(obj);\n\t\treturn this._html.firstChild;\n\t},\n\t_render_change_id:function(old, newid){\n\t\tvar obj = this.getItemNode(old);\n\t\tif (obj) {\n\t\t\tobj.setAttribute(this._id, newid);\n\t\t\tthis._htmlmap[newid] = this._htmlmap[old];\n\t\t\tdelete this._htmlmap[old];\n\t\t}\n\t},\n\t//calls function that is set in onclick property\n\t_call_onclick:function(){\n\t\tif (this._settings.click){\n\t\t\tvar code = toFunctor(this._settings.click, this.$scope);\n\t\t\tif (code && code.call) code.apply(this,arguments);\n\t\t}\n\t},\n\t//return html container by its ID\n\t//can return undefined if container doesn't exists\n\tgetItemNode:function(search_id){\n\t\tif (this._htmlmap)\n\t\t\treturn this._htmlmap[search_id];\n\t\t\t\n\t\t//fill map if it doesn't created yet\n\t\tthis._htmlmap={};\n\t\t\n\t\tvar t = this._dataobj.childNodes;\n\t\tfor (var i=0; i < t.length; i++){\n\t\t\tvar id = t[i].getAttribute(this._id); //get item's\n\t\t\tif (id)\n\t\t\t\tthis._htmlmap[id]=t[i];\n\t\t}\n\t\t//call locator again, when map is filled\n\t\treturn this.getItemNode(search_id);\n\t},\n\t//return id of item from html event\n\tlocate:function(e){ return locate(e,this._id); },\n\t/*change scrolling state of top level container, so related item will be in visible part*/\n\tshowItem:function(id){\n\n\t\tvar html = this.getItemNode(id);\n\t\tif (html && this.scrollTo){\n\t\t\tvar txmin = html.offsetLeft;\n\t\t\tvar txmax = txmin + html.offsetWidth;\n\t\t\tvar tymin = html.offsetTop;\n\n\t\t\tvar tymax = tymin + html.offsetHeight;\n\t\t\tvar state = this.getScrollState();\n\n\t\t\tvar x = state.x;\n\t\t\tif (x > txmin || x + this._content_width < txmax )\n\t\t\t\tx = txmin;\n\t\t\tvar y = state.y;\n\t\t\tif (y > tymin || y + this._content_height < tymax )\n\t\t\t\ty = tymin;\n\n\t\t\tthis.scrollTo(x,y);\n\t\t\tif(this._setItemActive)\n\t\t\t\tthis._setItemActive(id);\n\t\t}\n\t},\n\t//update view after data update\n\t//method calls low-level rendering for related items\n\t//when called without parameters - all view refreshed\n\trender:function(id,data,type){\n\t\tif (!this.isVisible(this._settings.id) || this.$blockRender)\n\t\t\treturn;\n\t\t\n\t\tif (id){\n\t\t\tvar cont = this.getItemNode(id); //get html element of updated item\n\t\t\tswitch(type){\n\t\t\t\tcase \"paint\":\n\t\t\t\tcase \"update\":\n\t\t\t\t\t//in case of update - replace existing html with updated one\n\t\t\t\t\tif (!cont) return;\n\t\t\t\t\tvar t1 = this._htmlmap[id] = this._toHTMLObject(data);\n\t\t\t\t\tinsertBefore(t1, cont); \n\t\t\t\t\tremove(cont);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"delete\":\n\t\t\t\t\t//in case of delete - remove related html\n\t\t\t\t\tif (!cont) return;\n\t\t\t\t\tremove(cont);\n\t\t\t\t\tdelete this._htmlmap[id];\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"add\":\n\t\t\t\t\t//in case of add - put new html at necessary position\n\t\t\t\t\tvar t2 = this._htmlmap[id] = this._toHTMLObject(data);\n\t\t\t\t\tinsertBefore(t2, this.getItemNode(this.data.getNextId(id)), this._dataobj);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"move\":\n\t\t\t\t\t//moving without repainting the item\n\t\t\t\t\tinsertBefore(this.getItemNode(id), this.getItemNode(this.data.getNextId(id)), this._dataobj);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tassert(0, \"Unknown render command: \"+type);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\t//full reset\n\t\t\tif (this.callEvent(\"onBeforeRender\",[this.data])){\n\t\t\t\t//getRange - returns all elements\n\t\t\t\t(this._renderobj||this._dataobj).innerHTML = this.data.getRange().map(this._toHTML,this).join(\"\");\n\t\t\t\tthis._htmlmap = null; //clear map, it will be filled at first getItemNode\n\t\t\t\tthis.callEvent(\"onAfterRender\",[]);\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default RenderStack;","import {addCss, removeCss} from \"../webix/html\";\nimport {_to_array, bind, isArray} from \"../webix/helpers\";\nimport {_event, event} from \"../webix/htmlevents\";\nimport {assert} from \"../webix/debug\";\nimport env from \"../webix/env\";\n\nimport ready from \"../webix/ready\";\nimport state from \"../core/state\";\n\n\n/*\n\tBehavior:SelectionModel - manage selection states\n\t@export\n\t\tselect\n\t\tunselect\n\t\tselectAll\n\t\tunselectAll\n\t\tisSelected\n\t\tgetSelectedId\n*/\nconst SelectionModel ={\n\t$init:function(){\n\t\t//collection of selected IDs\n\t\tthis._selected = _to_array();\n\t\tassert(this.data, \"SelectionModel :: Component doesn't have DataStore\");\n\n\t\t//remove selection from deleted items\n\t\tthis.data.attachEvent(\"onStoreUpdated\",bind(this._data_updated,this));\n\t\tthis.data.attachEvent(\"onStoreLoad\", bind(this._data_loaded,this));\n\t\tthis.data.attachEvent(\"onAfterFilter\", bind(this._data_filtered,this));\n\t\tthis.data.attachEvent(\"onSyncApply\", bind(this._select_check,this));\n\t\tthis.data.attachEvent(\"onIdChange\", bind(this._id_changed,this));\n\t\tthis.$ready.push(this._set_noselect);\n\t},\n\t_set_noselect: function(){\n\t\tif (this._settings.select==\"multiselect\" || this._settings.multiselect || this._settings.select==\"area\")\n\t\t\t_event(this.$view,\"mousedown\", function(e){\n\t\t\t\tif (e.shiftKey || (env.isIE && e.ctrlKey)){\n\t\t\t\t\tconst node = env.isIE ? document.body : this;\n\t\t\t\t\tstate._noselect_element = node;\n\t\t\t\t\taddCss(node, \"webix_noselect\", true);\n\t\t\t\t}\n\t\t\t});\n\t},\n\t_id_changed:function(oldid, newid){\n\t\tfor (var i = this._selected.length - 1; i >= 0; i--)\n\t\t\tif (this._selected[i]==oldid)\n\t\t\t\tthis._selected[i]=newid;\n\t},\n\t_data_filtered:function(){\n\t\tfor (var i = this._selected.length - 1; i >= 0; i--){\n\t\t\tif (this.data.getIndexById(this._selected[i]) < 0) {\n\t\t\t\tvar id = this._selected[i];\n\t\t\t\tthis.removeCss(id, \"webix_selected\", true);\n\t\t\t\tthis._selected.splice(i,1);\n\t\t\t\tthis.callEvent(\"onSelectChange\",[id]);\n\t\t\t}\n\t\t}\n\t},\n\t//helper - linked to onStoreUpdated\n\t_data_updated:function(id,obj,type){\n\t\tif (type == \"delete\"){\t\t\t\t//remove selection from deleted items\n\t\t\tif (this.loadBranch){\n\t\t\t\t//hierarchy, need to check all\n\t\t\t\tthis._select_check();\n\t\t\t} else{\n\t\t\t\tthis._selected.remove(id);\n\t\t\t\tthis.callEvent(\"onSelectChange\",[this._selected]);\n\t\t\t}\n\t\t}\n\t\telse if (!id && !this.data.count() && !this.data._filter_order && !this.data._filter_branch){\t//remove selection for clearAll\n\t\t\tthis._selected = _to_array();\n\t\t}\n\t},\n\t_data_loaded:function(){\n\t\tif (this._settings.select)\n\t\t\tthis.data.each(function(obj){\n\t\t\t\tif (obj && obj.$selected) this.select(obj.id);\n\t\t\t}, this);\n\t},\n\t_select_check:function(){\n\t\tlet selectionChanged;\n\t\tfor (let i = this._selected.length - 1; i >= 0; i--)\n\t\t\tif (!this.exists(this._selected[i])){\n\t\t\t\tselectionChanged = true;\n\t\t\t\tthis._selected.splice(i,1);\n\t\t\t}\n\t\tif(selectionChanged)\n\t\t\tthis.callEvent(\"onSelectChange\",[this._selected]);\n\t},\n\t//helper - changes state of selection for some item\n\t_select_mark:function(id,state,refresh,need_unselect){\n\t\tvar sname = state ? \"onBeforeSelect\" : \"onBeforeUnSelect\";\n\t\tif (!this.callEvent(sname,[id,state])) return false;\n\n\t\tif (need_unselect){\n\t\t\tthis._silent_selection = true;\n\t\t\tthis.unselectAll();\n\t\t\tthis._silent_selection = false;\n\t\t}\n\t\t\n\t\tif (state)\n\t\t\tthis.addCss(id, \"webix_selected\", true);\n\t\telse\n\t\t\tthis.removeCss(id, \"webix_selected\", true);\n\n\t\tif (refresh)\n\t\t\trefresh.push(id);\t\t\t\t//if we in the mass-select mode - collect all changed IDs\n\t\telse{\n\t\t\tif (state)\n\t\t\t\tthis._selected.push(id);\t\t//then add to list of selected items\n\t\t\telse\n\t\t\t\tthis._selected.remove(id);\n\t\t\tthis._refresh_selection(id);\t//othervise trigger repainting\n\t\t}\n\n\t\tvar ename = state ? \"onAfterSelect\" : \"onAfterUnSelect\";\n\t\tthis.callEvent(ename,[id]);\n\n\t\treturn true;\n\t},\n\t//select some item\n\tselect:function(id,preserve){\n\t\tvar ctrlKey = arguments[2];\n\t\tvar shiftKey = arguments[3];\n\t\t//if id not provide - works as selectAll\n\t\tif (!id) return this.selectAll();\n\n\t\t//allow an array of ids as parameter\n\t\tif (isArray(id)){\n\t\t\tfor (var i=0; i < id.length; i++)\n\t\t\t\tthis.select(id[i], (i?1:preserve), ctrlKey, shiftKey);\n\t\t\treturn;\n\t\t}\n\n\t\tassert(this.data.exists(id), \"Incorrect id in select command: \"+id);\n\t\t\n\t\t//block selection mode\n\t\tif (shiftKey && this._selected.length)\n\t\t\treturn this.selectAll(this._selected[this._selected.length-1],id);\n\n\t\t//single selection mode\n\t\tvar need_unselect = false;\n\t\tif (!ctrlKey && !preserve && (this._selected.length!=1 || this._selected[0]!=id))\n\t\t\tneed_unselect = true;\n\n\t\tif (!need_unselect && this.isSelected(id)){\n\t\t\tif (ctrlKey) this.unselect(id);\t//ctrl-selection of already selected item\n\t\t\treturn;\n\t\t}\n\n\t\tthis._select_mark(id, true, null, need_unselect);\n\t},\n\t//unselect some item\n\tunselect:function(id){\n\t\t//if id is not provided  - unselect all items\n\t\tif (!id) return this.unselectAll();\n\t\tif (!this.isSelected(id)) return;\n\t\t\n\t\tthis._select_mark(id,false);\n\t},\n\t//select all items, or all in defined range\n\tselectAll:function(from,to){\n\t\tvar range;\n\t\tvar refresh=[];\n\t\t\n\t\tif (from||to)\n\t\t\trange = this.data.getRange(from||null,to||null);\t//get limited set if bounds defined\n\t\telse\n\t\t\trange = this.data.getRange();\t\t\t//get all items in other case\n\t\t//in case of paging - it will be current page only\n\t\trange.each(function(obj){ \n\t\t\tif (!this.data.getMark(obj.id, \"webix_selected\")){\n\t\t\t\tthis._selected.push(obj.id);\t\n\t\t\t\tthis._select_mark(obj.id,true,refresh);\n\t\t\t}\n\t\t},this);\n\t\t//repaint self\n\t\tthis._refresh_selection(refresh);\n\t},\n\t//remove selection from all items\n\tunselectAll:function(){\n\t\tvar refresh=[];\n\t\t\n\t\tthis._selected.each(function(id){\n\t\t\tthis._select_mark(id,false,refresh);\t//unmark selected only\n\t\t},this);\n\t\t\n\t\tthis._selected=_to_array();\n\t\tthis._refresh_selection(refresh);\t//repaint self\n\t},\n\t//returns true if item is selected\n\tisSelected:function(id){\n\t\treturn this._selected.find(id)!=-1;\n\t},\n\t/*\n\t\treturns ID of selected items or array of IDs\n\t\tto make result predictable - as_array can be used, \n\t\t\twith such flag command will always return an array \n\t\t\tempty array in case when no item was selected\n\t*/\n\tgetSelectedId:function(as_array){\t\n\t\tswitch(this._selected.length){\n\t\t\tcase 0: return as_array?[]:\"\";\n\t\t\tcase 1: return as_array?[this._selected[0]]:this._selected[0];\n\t\t\tdefault: return ([].concat(this._selected)); //isolation\n\t\t}\n\t},\n\tgetSelectedItem:function(as_array){\n\t\tvar sel = this.getSelectedId(true);\n\t\tif (sel.length > 1 || as_array){\n\t\t\tfor (var i = sel.length - 1; i >= 0; i--)\n\t\t\t\tsel[i] = this.getItem(sel[i]);\n\t\t\treturn sel;\n\t\t} else if (sel.length)\n\t\t\treturn this.getItem(sel[0]);\n\t},\n\t//detects which repainting mode need to be used\n\t_is_mass_selection:function(obj){\n\t\t// crappy heuristic, but will do the job\n\t\treturn obj.length>100 || obj.length > this.data.count/2;\n\t},\n\t_refresh_selection:function(refresh){\n\t\tif (typeof refresh != \"object\") refresh = [refresh];\n\t\tif (!refresh.length) return;\t//nothing to repaint\n\t\t\n\t\tif (this._is_mass_selection(refresh))\t\n\t\t\tthis.data.refresh();\t//many items was selected - repaint whole view\n\t\telse\n\t\t\tfor (var i=0; i < refresh.length; i++)\t//repaint only selected\n\t\t\t\tthis.render(refresh[i],this.data.getItem(refresh[i]),\"update\");\n\t\t\t\n\t\tif (!this._silent_selection)\t\n\t\t\tthis.callEvent(\"onSelectChange\",[refresh]);\n\t}\n};\n\nready(function(){\n\tevent(document.body,\"mouseup\", function(){\n\t\tif(state._noselect_element){\n\t\t\tremoveCss(state._noselect_element,\"webix_noselect\");\n\t\t\tstate._noselect_element = null;\n\t\t}\n\t});\n});\n\nexport default SelectionModel;","import color from \"../../webix/color\";\nimport {assert} from \"../../webix/debug\";\n\n\nfunction joinAttributes(attrs){\n\tvar result = \" \";\n\tif(attrs)\n\t\tfor(var a in attrs)\n\t\t\tresult += a+\"=\\\"\"+attrs[a]+\"\\\" \";\n\treturn result;\n}\n// SVG\nvar SVG = {};\n\nSVG.draw = function(content, width, height, css){\n\tvar attrs = {\n\t\txmlns: \"http://www.w3.org/2000/svg\",\n\t\tversion: \"1.1\",\n\t\theight: \"100%\",\n\t\twidth: \"100%\",\n\t\tviewBox: \"0 0 \"+width+\" \"+height,\n\t\t\"class\": css||\"\"\n\t};\n\treturn \"<svg \"+joinAttributes(attrs)+\">\"+content+\"</svg>\";\n};\nSVG.styleMap = {\n\t\"lineColor\": \"stroke\",\n\t\"color\": \"fill\"\n};\nSVG.group = function(path){\n\treturn \"<g>\"+path+\"</g>\";\n};\nSVG._handlers = {\n\t// MoveTo: {x:px,y:py}\n\t\"M\": function(p){\n\t\treturn \" M \"+ p.x+\" \"+ p.y;\n\t},\n\t// LineTo: {x:px,y:py}\n\t\"L\": function(p){\n\t\treturn \" L \"+ p.x+\" \"+ p.y;\n\t},\n\t// Curve: 3 points {x:px,y:py}: two control points and an end point\n\t\"C\": function(cp0, cp1, p){\n\t\treturn \" C \"+cp0.x + \" \"+cp0.y+\" \"+cp1.x + \" \"+cp1.y+\" \"+p.x + \" \"+p.y;\n\t},\n\t// Arc: center point {x:px,y:py}, radius, angle0, angle1\n\t\"A\": function(p, radius, angle0, angle1){\n\t\tvar x = p.x+Math.cos(angle1)*radius;\n\t\tvar y = p.y+Math.sin(angle1)*radius;\n\t\tvar bigCircle = angle1-angle0 >= Math.PI;\n\t\treturn  \" A \"+radius+\" \"+radius+\" 0 \"+(bigCircle?1:0)+\" 1 \"+x+\" \"+y;\n\t}\n};\n// points is an array of an array with two elements: {string} line type, {array}\nSVG.definePath = function(points, close){\n\tvar path = \"\";\n\tfor(var i =0; i < points.length; i++){\n\t\tassert(points[i][0]&&typeof points[i][0] == \"string\", \"Path type must be a string\");\n\t\tvar type = (points[i][0]).toUpperCase();\n\t\tassert(this._handlers[type], \"Incorrect path type\");\n\t\tpath += this._handlers[type].apply(this,points[i].slice(1));\n\n\t}\n\tif(close)\n\t\tpath += \" Z\";\n\n\treturn path;\n};\nSVG._linePoints = function(points){\n\tvar result = [];\n\tfor(var i = 0; i< points.length; i++){\n\t\tresult.push([i?\"L\":\"M\",points[i]]);\n\t}\n\treturn result;\n};\nSVG.setOpacity = function(rawColor,opacity){\n\tlet rgbColor = color.toRgb(rawColor);\n\trgbColor.push(opacity);\n\treturn \"rgba(\"+rgbColor.join(\",\")+\")\";\n};\nSVG._curvePoints = function(points){\n\tvar result = [];\n\tfor(var i = 0; i< points.length; i++){\n\t\tvar p = points[i];\n\t\tif(!i){\n\t\t\tresult.push([\"M\",p[0]]);\n\t\t}\n\t\tresult.push([\"C\",p[1],p[2],p[3]]);\n\t}\n\treturn result;\n};\nSVG.getPath = function(path, css, attrs){\n\tattrs = joinAttributes(attrs);\n\treturn \"<path class=\\\"\"+css+\"\\\" vector-effect=\\\"non-scaling-stroke\\\" d=\\\"\"+path+\"\\\" \"+attrs+\"/>\";\n};\nSVG.getSector = function(p, radius, angle0, angle1, css, attrs){\n\tattrs = joinAttributes(attrs);\n\tvar x0 = p.x+Math.cos(angle0)*radius;\n\tvar y0 = p.y+Math.sin(angle0)*radius;\n\tvar lines = [\n\t\t[\"M\",p],\n\t\t[\"L\",{x:x0, y:y0}],\n\t\t[\"A\", p,radius,angle0,angle1],\n\t\t[\"L\",p]\n\t];\n\n\n\treturn \"<path class=\\\"\"+css+\"\\\" vector-effect=\\\"non-scaling-stroke\\\" d=\\\"\"+SVG.definePath(lines,true)+\"\\\" \"+attrs+\"/>\";\n};\nSVG.getCurve = function(points,css, attrs){\n\tattrs = joinAttributes(attrs);\n\tvar path = this.definePath(this._curvePoints(points));\n\treturn \"<path fill=\\\"none\\\" class=\\\"\"+css+\"\\\" vector-effect=\\\"non-scaling-stroke\\\" d=\\\"\"+path+\"\\\" \"+attrs+\"/>\";\n};\nSVG.getLine = function(p0,p1,css, attrs){\n\treturn this.getPath(this.definePath(this._linePoints([p0,p1]),true),css,attrs);\n};\nSVG.getCircle = function(p, radius, css, attrs){\n\tattrs = joinAttributes(attrs);\n\treturn \"<circle class=\\\"\"+css+\"\\\" cx=\\\"\"+ p.x+\"\\\" cy=\\\"\"+ p.y+\"\\\" r=\\\"\"+radius+\"\\\" \"+attrs+\"/>\";\n};\nSVG.getRect = function(x, y, width, height, css, attrs){\n\tattrs = joinAttributes(attrs);\n\treturn \"<rect class=\\\"\"+css+\"\\\" rx=\\\"0\\\" ry=\\\"0\\\" x=\\\"\"+x+\"\\\" y=\\\"\"+y+\"\\\" width=\\\"\"+width+\"\\\" height=\\\"\"+height+\"\\\" \"+attrs+\"/>\";\n};\n\n\nexport default SVG;","import {createCss} from \"../../webix/html\";\nimport {extend, copy} from \"../../webix/helpers\";\n\nimport SVG from \"./svg\";\n\nconst defaults = {\n\tpaddingX: 3,\n\tpaddingY: 4,\n\twidth: 20,\n\tmargin: 4,\n\tminHeight: 4,\n\teventRadius: 8,\n\torigin:0,\n\titemCss: function(value){return value < (this.config.origin||0)?\" webix_sparklines_bar_negative\":\"\";}\n};\n\nfunction Bar(config){\n\tthis.config = extend(copy(defaults),config||{},true);\n}\n\nBar.prototype.draw = function(data, width, height){\n\tlet graph = \"\";\n\tconst config = this.config;\n\tconst renderer = SVG;\n\tconst horizontal = config.horizontal;\n\tconst items = [];\n\tconst origin = parseInt(this._getOrigin(data, width, height),10)+0.5;\n\tconst points = this.getPoints(data, width, height, origin);\n\n\t// draw bars\n\tfor(let i = 0; i< points.length; i++){\n\t\tlet css;\n\t\tcss = (typeof config.itemCss == \"function\"?config.itemCss.call(this,data[i]):(config.itemCss||\"\"));\n\t\tif (config.negativeColor && data[i] < config.origin)\n\t\t\tcss += \" \"+this._applyColor(renderer,config.negativeColor);\n\t\telse if(config.color)\n\t\t\tcss += \" \"+this._applyColor(renderer,config.color);\n\t\tconst p = points[i];\n\t\titems.push(renderer.getRect(p.x, p.y, p.width, p.height,\"webix_sparklines_bar \"+css));\n\t}\n\tgraph += renderer.group(items.join(\"\"));\n\n\t// origin\n\tconst padding = horizontal ? config.paddingY : config.paddingX;\n\n\tif(horizontal)\n\t\tgraph += renderer.group(renderer.getLine({x: origin, y: padding},{x: origin, y: height-padding},\"webix_sparklines_origin\"));\n\telse\n\t\tgraph += renderer.group(renderer.getLine({x: padding, y: origin},{x: width-padding, y: origin},\"webix_sparklines_origin\"));\n\n\t// event areas\n\tconst evPoints = this._getEventPoints(data, width, height, origin);\n\tconst evItems = [];\n\tfor(let i = 0; i< evPoints.length; i++){\n\t\tconst p = evPoints[i];\n\t\tevItems.push(renderer.getRect(p.x, p.y, p.width, p.height,\"webix_sparklines_event_area \",{\"webix_area\":i}));\n\t}\n\tgraph += renderer.group(evItems.join(\"\"));\n\treturn  renderer.draw(graph, width, height, \"webix_sparklines_bar_chart\"+(config.css?\" \"+config.css:\"\"));\n};\nBar.prototype._applyColor = function(renderer,color){\n\tconst config = {},\n\t\tmap = renderer.styleMap;\n\tif(color)\n\t\tconfig[map.color] = color;\n\treturn createCss(config);\n};\nBar.prototype._getOrigin = function(data, width, height){\n\tconst config = this.config;\n\tconst horizontal = config.horizontal;\n\tconst padding = horizontal ? config.paddingX : config.paddingY;\n\tconst size = ((horizontal ? width : height)||100)-padding*2;\n\tlet pos;\n\n\tif(horizontal)\n\t\tpos = padding;\n\telse{\n\t\tpos = padding+size;\n\t}\n\n\tif(config.origin !== false){\n\t\tconst minValue = Math.min(...data);\n\t\tconst maxValue = Math.max(...data);\n\t\tconst origin = config.origin||-0.000001;\n\t\tif(origin >= maxValue){\n\t\t\tpos = padding;\n\t\t}\n\t\telse if(origin > minValue){\n\t\t\tconst unit = size/(maxValue - minValue);\n\t\t\tpos += (horizontal ? 1 : -1)*unit*(origin-minValue);\n\t\t}\n\t}\n\treturn pos;\n};\nBar.prototype._getEventPoints = function(data, width, height){\n\tconst result = [];\n\tconst horizontal = this.config.horizontal;\n\tconst x = this.config.paddingX;\n\tconst y = this.config.paddingY;\n\twidth = (width||100)-x*2;\n\theight = (height||100)-y*2;\n\tif(data.length){\n\t\tconst unit = (horizontal ? height : width)/data.length;\n\t\tfor(let i = 0; i < data.length; i++){\n\t\t\tif(horizontal)\n\t\t\t\tresult.push({x, y: Math.ceil(unit*i)+y, height: unit, width});\n\t\t\telse\n\t\t\t\tresult.push({x: Math.ceil(unit*i)+x, y, height, width: unit});\n\t\t}\n\t}\n\treturn result;\n};\nBar.prototype.getPoints = function(data, width, height, originPos){\n\tconst config = this.config;\n\tconst horizontal = config.horizontal;\n\tlet minValue = Math.min(...data);\n\tif (config.origin < minValue) \n\t\tminValue = config.origin;\n\n\tconst maxValue = Math.max(...data);\n\tconst result = [];\n\tconst x = config.paddingX;\n\tconst y = config.paddingY;\n\tlet margin = config.margin;\n\tlet barWidth = config.width||20;\n\n\twidth = (width||100)-x*2;\n\theight = (height||100)-y*2;\n\tif(data.length){\n\t\tconst unit = (horizontal ? height : width)/data.length;\n\t\tconst scale = config.scale || (maxValue - minValue);\n\t\tbarWidth = Math.min(unit-margin,barWidth);\n\t\tmargin = unit-barWidth;\n\t\tlet origin = minValue;\n\n\t\tif(config.origin !== false && config.origin > minValue)\n\t\t\torigin = config.origin||0;\n\n\t\tconst itemHeight = (horizontal ? width : height)/(scale||1);\n\n\t\tfor(let i=0; i < data.length; i++){\n\t\t\tlet h = Math.abs(Math.ceil(itemHeight*(data[i]-origin)));\n\t\t\tif(data[i] && h < config.minHeight)\n\t\t\t\th += config.minHeight;\n\n\t\t\tif(horizontal)\n\t\t\t\tresult.push({x: originPos-(data[i]>=origin?0:h), y: Math.ceil(unit*i)+y+margin/2, height: barWidth, width: h});\n\t\t\telse\n\t\t\t\tresult.push({x: Math.ceil(unit*i)+x+margin/2, y: originPos-(data[i]>=origin?h:0), height: h, width: barWidth});\n\t\t}\n\t}\n\treturn result;\n};\n\nexport default Bar;","import {createCss} from \"../../webix/html\";\nimport {extend, copy} from \"../../webix/helpers\";\n\nimport SVG from \"./svg\";\nimport Base from \"./line\";\n\nvar defaults = {\n\tpaddingX: 3,\n\tpaddingY: 6,\n\tradius: 2,\n\tminHeight: 4,\n\teventRadius: 8\n};\n\nfunction Spline(config){\n\tthis.config = extend(copy(defaults),config||{},true);\n}\n\nSpline.prototype.draw = function(data, width, height){\n\tvar config = this.config,\n\t\tgraph = \"\",\n\t\tLine = Base.prototype,\n\t\tpoints = this.getPoints(data, width, height),\n\t\trenderer = SVG,\n\t\tstyles = config.color?this._applyColor(renderer,config.color):null;\n\n\t// draw spline\n\tgraph += renderer.group(renderer.getCurve(points, \"webix_sparklines_line\"+(styles?\" \"+styles.line:\"\")));\n\n\tvar linePoints = Line.getPoints.call(this,data, width, height);\n\t// draw items\n\tgraph += Line._drawItems(renderer, linePoints, config.radius, \"webix_sparklines_item\"+(styles?\" \"+styles.item:\"\"));\n\t// draw event items\n\tvar eventRadius = Math.min(data.length?(width-2*(config.paddingX||0))/data.length:0,config.eventRadius);\n\tgraph += Line._drawEventItems(renderer, linePoints, eventRadius);\n\treturn  renderer.draw(graph, width, height,\"webix_sparklines_line_chart\"+(config.css?\" \"+config.css:\"\"));\n};\nSpline.prototype._applyColor = function(renderer,color){\n\tvar config = {\"line\":{},\"item\":{}},\n\t\tmap = renderer.styleMap;\n\tif(color){\n\t\tconfig.line[map.lineColor] = color;\n\t\tconfig.item[map.color] = color;\n\t\tfor(var name in config)\n\t\t\tconfig[name] = createCss(config[name]);\n\t}\n\treturn config;\n};\nSpline.prototype.getPoints = function(data, width, height){\n\tvar i, points, px, py,\n\t\tresult = [], x = [], y =[],\n\t\tLine = Base.prototype;\n\n\tpoints = Line.getPoints.call(this, data, width, height);\n\n\tfor(i = 0; i< points.length; i++){\n\t\tx.push(points[i].x);\n\t\ty.push(points[i].y);\n\t}\n\tpx = this._getControlPoints(x);\n\tpy = this._getControlPoints(y);\n\t/*updates path settings, the browser will draw the new spline*/\n\tfor ( i=0;i<points.length-1;i++){\n\t\tresult.push([points[i],{x:px[0][i],y:py[0][i]},{x:px[1][i],y:py[1][i]},points[i+1]]);\n\t}\n\treturn result;\n\n};\n/* code from https://www.particleincell.com/2012/bezier-splines/ */\nSpline.prototype._getControlPoints = function(points){\n\tvar a=[], b=[], c=[], r=[], p1=[], p2=[],\n\t\ti, m, n = points.length-1;\n\n\ta[0]=0;\n\tb[0]=2;\n\tc[0]=1;\n\tr[0] = points[0] + 2*points[1];\n\n\tfor (i = 1; i < n - 1; i++){\n\t\ta[i]=1;\n\t\tb[i]=4;\n\t\tc[i]=1;\n\t\tr[i] = 4 * points[i] + 2 * points[i+1];\n\t}\n\n\ta[n-1]=2;\n\tb[n-1]=7;\n\tc[n-1]=0;\n\tr[n-1] = 8*points[n-1]+points[n];\n\n\tfor (i = 1; i < n; i++){\n\t\tm = a[i]/b[i-1];\n\t\tb[i] = b[i] - m * c[i - 1];\n\t\tr[i] = r[i] - m*r[i-1];\n\t}\n\n\tp1[n-1] = r[n-1]/b[n-1];\n\tfor (i = n - 2; i >= 0; --i)\n\t\tp1[i] = (r[i] - c[i] * p1[i+1]) / b[i];\n\n\tfor (i=0;i<n-1;i++)\n\t\tp2[i]=2*points[i+1]-p1[i+1];\n\n\tp2[n-1]=0.5*(points[n]+p1[n-1]);\n\n\treturn [p1, p2];\n};\n\n\n\nexport default Spline;","import template from \"../webix/template\";\nimport UIManager from \"../core/uimanager\";\n\nimport clipbuffer from \"../webix/clipbuffer\";\nimport csv from \"../webix/csv\";\n\nimport {isUndefined, delay} from \"../webix/helpers\";\n\n\nconst TablePaste = {\n\tclipboard_setter:function(value){\n\t\tif (value === true || value === 1) value = \"block\";\n\n\t\tclipbuffer.init();\n\t\tthis.attachEvent(\"onSelectChange\",this._sel_to_clip);\n\t\tthis.attachEvent(\"onAfterEditStop\", function(v, ed){\n\t\t\tconst sel = this.getSelectedId(true);\n\t\t\tif(sel.length == 1 && ed.row == sel[0].row)\n\t\t\t\tthis._sel_to_clip();\n\t\t});\n\t\t// solution for clicks on selected items\n\t\tthis.attachEvent(\"onItemClick\",function(){\n\t\t\tif(document.activeElement && this.$view.contains(document.activeElement)){\n\t\t\t\tclipbuffer.focus();\n\t\t\t\tUIManager.setFocus(this);\n\t\t\t}\n\t\t});\n\t\tthis.attachEvent(\"onPaste\", this._clip_to_sel);\n\n\t\treturn value;\n\t},\n\ttemplateCopy_setter: template,\n\t_sel_to_clip: function() {\n\t\tdelay(() => { //wait until editor is closed\n\t\t\tif (!this.$destructed && (!this.getEditor || !this.getEditor())){\n\t\t\t\tconst data = this._get_sel_text();\n\t\t\t\tclipbuffer.set(data);\n\t\t\t\tUIManager.setFocus(this);\n\t\t\t}\n\t\t});\n\t},\n\t_get_sel_text: function() {\n\t\tconst data = [];\n\t\tconst filter = this._settings.templateCopy;\n\t\tthis.mapSelection(function(value, row, col, row_ind) {\n\t\t\tif (!data[row_ind]) data[row_ind] = [];\n\t\t\tconst newvalue = filter ? filter(value, row, col) : value;\n\t\t\tdata[row_ind].push(newvalue);\n\t\t\treturn value;\n\t\t});\n\t\tconst value = data.length === 1 && data[0].length === 1 ? data[0][0] : csv.stringify(data, this._settings.delimiter);\n\t\treturn value;\n\t},\n\n\t_clip_to_sel: function(text) {\n\t\tif (!isUndefined(this._paste[this._settings.clipboard])) {\n\t\t\tconst data = csv.parse(text, this._settings.delimiter);\n\t\t\tthis._paste[this._settings.clipboard].call(this, data);\n\t\t}\n\t},\n\n\t_paste: {\n\t\tblock: function(data) {\n\t\t\tconst leftTop = this.mapSelection(null);\n\t\t\tif (!leftTop) return;\n\n\t\t\t// filling cells with data\n\t\t\tthis.mapCells(leftTop.row, leftTop.column, data.length, null, function(value, row, col, row_ind, col_ind) {\n\t\t\t\tif (data[row_ind] && data[row_ind].length>col_ind) {\n\t\t\t\t\treturn data[row_ind][col_ind];\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\n\t\tselection: function(data) {\n\t\t\tthis.mapSelection(function(value, row, col, row_ind, col_ind) {\n\t\t\t\tif (data[row_ind] && data[row_ind].length>col_ind)\n\t\t\t\t\treturn data[row_ind][col_ind];\n\t\t\t\treturn value;\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\n\t\trepeat: function(data) {\n\t\t\tthis.mapSelection(function(value, row, col, row_ind, col_ind) {\n\t\t\t\trow = data[row_ind%data.length];\n\t\t\t\tvalue = row[col_ind%row.length];\n\t\t\t\treturn value;\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\n\t\tcustom: function() {}\n\t}\n};\n\nexport default TablePaste;","import {isArray, copy as makeCopy, uid, _power_array} from \"../webix/helpers\";\nimport {assert} from \"../webix/debug\";\nimport DataMove from \"../core/datamove\";\nimport DragControl from \"../core/dragcontrol\";\n\n\n/*\n\tBehavior:DataMove - allows to move and copy elements, heavily relays on DataStore.move\n\t@export\n\t\tcopy\n\t\tmove\n*/\nconst TreeDataMove ={\n\t$init:function(){\n\t\tassert(this.data, \"DataMove :: Component doesn't have DataStore\");\n\t},\n\t//creates a copy of the item\n\tcopy:function(sid,tindex,tobj,details){\n\t\tdetails = details || {};\n\t\tdetails.copy = true;\n\t\treturn this.move(sid, tindex, tobj, details);\n\t},\n\t_next_move_index:function(nid, next, source){\n\t\tif (next && nid){\n\t\t\tvar new_index = this.getBranchIndex(nid);\n\t\t\t// check parent only when moving locally (source == this)\n\t\t\treturn new_index + ((source == this && this.getParentId(nid) == this.getParentId(next)\n\t\t\t\t&& source.getBranchIndex(next) < new_index) ? 0 : 1);\n\t\t}\n\t},\n\t_check_branch_child:function(parent, child){\n\t\tvar t = this.data.branch[parent];\n\t\tif (t && t.length){\n\t\t\tfor (var i=0; i < t.length; i++) {\n\t\t\t\tif (t[i] == child) return true;\n\t\t\t\tif (this._check_branch_child(t[i], child)) return true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\t_remove_childs(ids){\n\t\tfor(var i = 0; i < ids.length; i++){\n\t\t\tvar id = ids[i];\n\t\t\twhile(this.getParentId(id)){\n\t\t\t\tid = this.getParentId(id);\n\t\t\t\tif(_power_array.find.call(ids, id) != -1){\n\t\t\t\t\tids.splice(i,1);\n\t\t\t\t\ti--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ids;\n\t},\n\t//move item to the new position\n\tmove:function(sid,tindex,tobj, details){\n\t\tdetails = details || {};\n\t\ttindex = tindex || 0;\n\t\tvar new_id = details.newId || sid;\n\t\tvar target_parent = details.parent || 0;\n\t\t\n\t\ttobj = tobj||this;\n\t\tassert(tobj.data, \"moving attempt to component without datastore\");\n\t\tif (!tobj.data) return;\n\n\t\tif (isArray(sid)){\n\t\t\tthis._remove_childs(sid);\n\t\t\tfor (var i=0; i < sid.length; i++) {\n\t\t\t\t//increase index for each next item in the set, so order of insertion will be equal to order in the array\n\t\t\t\tvar nid = this.move(sid[i], tindex, tobj, details);\n\t\t\t\ttindex = tobj._next_move_index(nid, sid[i+1], this);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (this != tobj || details.copy){\n\t\t\tnew_id = tobj.data.add(tobj._externalData(this.getItem(sid),new_id), tindex, (target_parent || 0));\n\t\t\tif (this.data.branch[sid] && tobj.getBranchIndex){\n\t\t\t\tvar temp = this.data._scheme_serialize;\n\t\t\t\tthis.data._scheme_serialize = function(obj){\n\t\t\t\t\tvar copy = makeCopy(obj);\n\t\t\t\t\tdelete copy.$parent; delete copy.$level; delete copy.$child;\n\t\t\t\t\tif (tobj.data.pull[copy.id])\n\t\t\t\t\t\tcopy.id = uid();\n\t\t\t\t\treturn copy;\n\t\t\t\t};\n\t\t\t\tvar copy_data = { data:this.serialize(sid, true), parent:new_id };\n\t\t\t\tthis.data._scheme_serialize = temp;\n\t\t\t\ttobj.parse(copy_data);\n\t\t\t}\n\t\t\tif (!details.copy)\n\t\t\t\tthis.data.remove(sid);\n\t\t} else {\n\t\t\t//move in self\n\t\t\tif (sid == target_parent || this._check_branch_child(sid,target_parent)) return;\n\n\t\t\tvar source = this.getItem(sid);\n\t\t\tvar tbranch = this.data.branch[target_parent];\n\t\t\tif (!tbranch) \n\t\t\t\ttbranch = this.data.branch[target_parent] = [];\n\t\t\tvar sbranch = this.data.branch[source.$parent];\n\n\t\t\tvar sindex = _power_array.find.call(sbranch, sid);\n\t\t\tif (tindex < 0) tindex = tbranch.length;\n\t\t\t//in the same branch and same position\n\t\t\tif (sbranch === tbranch && tindex === sindex) return new_id; //return ID\n\n\t\t\t_power_array.removeAt.call(sbranch, sindex);\n\t\t\t_power_array.insertAt.call(tbranch, sid, Math.min(tbranch.length, tindex));\n\n\t\t\tif (!sbranch.length)\n\t\t\t\tdelete this.data.branch[source.$parent];\n\t\t\t\n\n\t\t\tif(source.$parent && source.$parent != \"0\")\n\t\t\t\tthis.getItem(source.$parent).$count--;\n\n\t\t\tif (target_parent && target_parent != \"0\"){\n\t\t\t\tvar target = tobj.getItem(target_parent);\n\t\t\t\ttarget.$count++;\n\t\t\t\tthis._set_level_rec(source, target.$level+1);\n\t\t\t} else \n\t\t\t\tthis._set_level_rec(source, 1);\n\n\t\t\tsource.$parent = target_parent;\n\t\t\ttobj.data.callEvent(\"onDataMove\", [sid, tindex, target_parent, tbranch[tindex+1]]);\n\t\t}\n\n\t\tthis.refresh();\n\t\treturn new_id;\t//return ID of item after moving\n\t},\n\t_set_level_rec:function(item, value){\n\t\titem.$level = value;\n\t\tvar branch = this.data.branch[item.id];\n\t\tif (branch)\n\t\t\tfor (var i=0; i<branch.length; i++)\n\t\t\t\tthis._set_level_rec(this.getItem(branch[i]), value+1);\n\t},\n\t//reaction on pause during dnd\n\t_drag_pause:function(id){\n\t\tif (id && !id.header && this.exists(id) && this._target_to_id(id) != DragControl._drag_context.start) //ignore drag other header\n\t\t\tthis.open(id);\n\t},\n\t$dropAllow:function(context){\n\t\tif (context.from != context.to) return true;\n\t\tfor (let i=0; i<context.source.length; i++)\n\t\t\tif (this._check_branch_child(context.source, context.target)) return false;\n\n\t\treturn true;\n\t},\n\t/*\n\t\tthis is a stub for future functionality\n\t\tcurrently it just makes a copy of data object, which is enough for current situation\n\t*/\n\t_externalData:function(data,id){\n\t\tvar new_data = DataMove._externalData.call(this, data, id);\n\t\tdelete new_data.open;\n\t\treturn new_data;\n\t}\n};\n\nexport default TreeDataMove;","\n\nconst TreeStateCheckbox = {\n\t_init_render_tree_state: function(){\n\t\tif (this._branch_render_supported){\n\t\t\tvar old_render = this.render;\n\t\t\tthis.render = function(id,data){\n\t\t\t\tvar updated = old_render.apply(this,arguments);\n\n\t\t\t\tif(this._settings.threeState && updated && data != \"checkbox\")\n\t\t\t\t\tthis._setThirdState.apply(this,arguments);\n\t\t\t};\n\t\t\tthis._init_render_tree_state=function(){};\n\t\t}\n\t},\n\tthreeState_setter:function(value){\n\t\tif (value)\n\t\t\tthis._init_render_tree_state();\n\t\treturn value;\n\t},\n\t_setThirdState:function(id){\n\t\tvar i,leaves,parents,checkedParents,tree;\n\t\tparents = [];\n\t\ttree = this;\n\n\t\t/*if item was removed*/\n\t\tif(id&&!tree.data.pull[id]){\n\t\t\tid = 0;\n\t\t}\n\t\t/*sets checkbox states*/\n\t\t/*if branch or full reloading*/\n\t\tif(!id||tree.data.pull[id].$count){\n\t\t\tleaves = this._getAllLeaves(id);\n\t\t\tleaves.sort(function(a,b){\n\t\t\t\treturn tree.data.pull[b].$level - tree.data.pull[a].$level;\n\t\t\t});\n\t\t\tfor(i=0;i < leaves.length;i++){\n\t\t\t\tif(!i||tree.data.pull[leaves[i]].$parent!=tree.data.pull[leaves[i-1]].$parent)\n\t\t\t\t\tparents = parents.concat(tree._setParentThirdState(leaves[i]));\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\t/*an item is a leaf */\n\t\t\tparents = parents.concat(tree._setParentThirdState(id));\n\t\t}\n\n\t\tcheckedParents = {};\n\t\tfor(i=0;i<parents.length;i++){\n\t\t\tif(!checkedParents[parents[i]]){\n\t\t\t\tcheckedParents[parents[i]] = 1;\n\t\t\t\tthis._setCheckboxIndeterminate(parents[i]);\n\t\t\t}\n\t\t}\n\n\t\ttree = null;\n\t},\n\t_setCheckboxIndeterminate:function(id){\n\t\tvar chElem, elem;\n\t\telem = this.getItemNode(id);\n\t\tif(elem){\n\t\t\tthis.render(id,\"checkbox\",\"update\");\n\t\t\t/*needed to get the new input obj and to set indeterminate state*/\n\t\t\tif(this.getItem(id).indeterminate){\n\t\t\t\telem = this.getItemNode(id);\n\t\t\t\tchElem = elem.getElementsByTagName(\"input\")[0];\n\t\t\t\tif(chElem)\n\t\t\t\t\tchElem.indeterminate = this.getItem(id).indeterminate;\n\t\t\t}\n\t\t}\n\t},\n\t_setParentThirdState:function(itemId){\n\t\t//we need to use dynamic function creating\n\t\t//jshint -W083:true\n\n\t\tvar checked, checkedCount,indeterminate, parentId,result,unsureCount,needrender;\n\t\tparentId = this.getParentId(itemId);\n\t\tresult = [];\n\t\twhile(parentId && parentId != \"0\"){\n\t\t\tunsureCount = 0;\n\t\t\tcheckedCount = 0;\n\t\t\tthis.data.eachChild(parentId,function(obj){\n\t\t\t\tif(obj.indeterminate){\n\t\t\t\t\tunsureCount++;\n\t\t\t\t}\n\t\t\t\telse if(obj.checked){\n\t\t\t\t\tcheckedCount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tchecked = indeterminate = needrender = false;\n\t\t\t\n\t\t\tvar item = this.getItem(parentId);\n\t\t\tif(checkedCount==item.$count){\n\t\t\t\tchecked = true;\n\t\t\t}\n\t\t\telse if(checkedCount>0||unsureCount>0){\n\t\t\t\tindeterminate = true;\n\t\t\t}\n\t\t\t\n\t\t\t//we need to reset indeterminate in any case :(\n\t\t\tif (indeterminate || indeterminate != item.indeterminate)\n\t\t\t\tneedrender = true;\n\t\t\titem.indeterminate = indeterminate;\n\t\t\tif (checked || item.checked != checked)\n\t\t\t\tneedrender = true;\n\t\t\titem.checked = checked;\n\n\t\t\tif (needrender){\n\t\t\t\tresult.push(parentId);\n\t\t\t\tparentId = this.getParentId(parentId);\n\t\t\t} else\n\t\t\t\tparentId = 0;\n\t\t}\n\n\t\treturn result;\n\t},\n\t/*get all checked items in tree*/\n\tgetChecked:function(){\n\t\tvar result=[];\n\t\tvar tree = this;\n\t\tthis.data.eachSubItem(0,function(obj){\n\t\t\tif (tree.isChecked(obj.id))\n\t\t\t\tresult.push(obj.id);\n\t\t});\n\t\treturn result;\n\t},\n\t_tree_check_uncheck_3:function(id, mode){\n\t\tvar item = this.getItem(id);\n\t\tif(item){\n\t\t\tif (mode === \"\") \n\t\t\t\tmode = !item.checked;\n\t\t\tif(item.checked != mode || item.indeterminate){\n\t\t\t\titem.checked = mode;\n\t\t\t\tthis._correctThreeState(id);\n\t\t\t\tvar parents = this._setParentThirdState(id);\n\t\t\t\tif (this._branch_render_supported && parents.length < 5){\n\t\t\t\t\tfor (var i=0; i<parents.length; i++)\n\t\t\t\t\t\tthis._setCheckboxIndeterminate(parents[i]);\n\t\t\t\t} else\n\t\t\t\t\tthis.refresh();\n\t\t\t\tthis.callEvent(\"onItemCheck\", [id, mode]);\n\t\t\t}\n\t\t}\n\t},\n\t/*set checked state for item checkbox*/\n\tcheckItem:function(id){\n\t\tthis._tree_check_uncheck(id, true);\n\t\tthis.updateItem(id);\n\t},\n\t/*uncheckes an item checkbox*/\n\tuncheckItem:function(id){\n\t\tthis._tree_check_uncheck(id, false);\n\t\tthis.updateItem(id);\n\t},\n\t_checkUncheckAll: function(id,mode,all){\n\t\tvar method = mode?\"checkItem\":\"uncheckItem\";\n\t\tif(!id)\n\t\t\tid = 0;\n\t\telse\n\t\t\tthis[method](id);\n\t\tif(this._settings.threeState){\n\t\t\tif(!id)\n\t\t\t\tthis.data.eachChild(0,function(item){\n\t\t\t\t\tthis[method](item.id);\n\t\t\t\t},this,all);\n\t\t}\n\t\telse\n\t\t\tthis.data.each(function(item){\n\t\t\t\tthis[method](item.id);\n\t\t\t},this,all,id);\n\n\t},\n\t/*checkes checkboxes of all items in a branch/tree*/\n\tcheckAll: function(id, all){\n\t\tthis._checkUncheckAll(id,true,all);\n\n\t},\n\t/*uncheckes checkboxes of all items in a branch/tree*/\n\tuncheckAll: function(id, all){\n\t\tthis._checkUncheckAll(id,false,all);\n\t},\n\t_correctThreeState:function(id){\n\t\tvar state;\n\t\tvar item = this.getItem(id);\n\n\t\titem.indeterminate = false;\n\t\tstate = item.checked;\n\n\t\tthis.data.eachSubItem(id, function(child){\n\t\t\tchild.indeterminate = false;\n\t\t\tchild.checked = state;\n\t\t});\n\t\t\n\t\tif(this._branch_render_supported && this.isBranchOpen(item.$parent)){ //for tree-render only\n\t\t\tthis.render(id,0,\"branch\");\n\t\t}\n\t},\n\t/*returns checked state of item checkbox*/\n\tisChecked:function(id){\n\t\treturn this.getItem(id).checked;\n\t},\n\t/*gets all leaves in a certain branch (in the whole tree if id is not set)*/\n\t_getAllLeaves:function(parentId){\n\t\tvar result = [];\n\t\tthis.data.eachSubItem(parentId, function(obj, branch){\n\t\t\tif (!branch)\n\t\t\t\tresult.push(obj.id);\n\t\t});\n\t\treturn result;\n\t}\t\n};\n\nexport default TreeStateCheckbox;","import {bind, extend, _to_array, copy, clone, isArray, uid, _power_array} from \"../webix/helpers\";\nimport {assert} from \"../webix/debug\";\nimport DataStore from \"../core/datastore\";\nimport DataDriver from \"../load/drivers/index\";\n\n\n// #include core/datastore.js\n// #include core/bind.js\n// #include core/treemove.js\n\nconst TreeStore = {\n\tname:\"TreeStore\",\n\t$init:function() {\n\t\tthis._filterMode={\n\t\t\t//level:1,\n\t\t\tshowSubItems:true\n\t\t};\n\t\tthis.branch = { 0:[] };\n\t\tthis.attachEvent(\"onParse\", function(driver){\n\t\t\tthis._set_child_scheme(driver.child);\n\t\t});\n\t\tthis.attachEvent(\"onClearAll\", bind(function(){\n\t\t\tthis._filter_branch = null;\n\t\t},this));\n\t},\n\tfilterMode_setter:function(mode){\n\t\treturn extend(this._filterMode, mode, true);\n\t},\n\t_filter_reset:function(preserve){\n\t\t//remove previous filtering , if any\n\t\tif (this._filter_branch && !preserve){\n\t\t\tthis.branch = this._filter_branch;\n\t\t\tthis.order = _to_array(copy(this.branch[0]));\n\t\t\tfor (var key in this.branch)\n\t\t\t\tif (key != \"0\")\t//exclude 0 - virtual root\n\t\t\t\t\tthis.getItem(key).$count = this.branch[key].length;\n\t\t\tdelete this._filter_branch;\n\t\t}\n\t},\n\t_filter_core:function(filter, value, preserve, filterMode){\n\t\t//for tree we have few filtering options\n\t\t//- filter leafs only\n\t\t//- filter data on specific level\n\t\t//- filter data on all levels\n\t\t//- in all cases we can show or hide empty folder\n\t\t//- in all cases we can show or hide childs for matched item\n\t\t\n\t\t//set new order of items, store original\n\t\tif (!preserve ||  !this._filter_branch){\n\t\t\tthis._filter_branch = this.branch;\n\t\t\tthis.branch  = clone(this.branch);\n\t\t}\n\n\t\tthis.branch[0] = this._filter_branch_rec(filter, value, this.branch[0], 1, (filterMode||{}));\n\t},\n\t_filter_branch_rec:function(filter, value, branch, level, config){\n\t\t//jshint -W041\n\t\tvar neworder = [];\n\t\t\n\t\tvar allow = (config.level && config.level != level);\n\n\t\tfor (var i=0; i < branch.length; i++){\n\t\t\tvar id = branch[i];\n\t\t\tvar item = this.getItem(id);\n\t\t\tvar child_run = false;\n\t\t\tvar sub = this.branch[id];\n\n\t\t\tif (allow){\n\t\t\t\tchild_run = true;\n\t\t\t} else if (filter(this.getItem(id),value)){\n\t\t\t\tneworder.push(id);\n\t\t\t\t// open all parents of the found item\n\t\t\t\tif (config.openParents !== false){\n\t\t\t\t\tvar parentId = this.getParentId(id);\n\t\t\t\t\twhile(parentId && parentId != \"0\"){\n\t\t\t\t\t\tthis.getItem(parentId).open = 1;\n\t\t\t\t\t\tparentId = this.getParentId(parentId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//in case of of fixed level filtering - do not change child-items\n\t\t\t\tif (config.level || config.showSubItems)\n\t\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\t//filtering level, not match\n\t\t\t\tchild_run = true;\n\t\t\t}\t\n\n\t\t\t//if \"filter by all levels\" - filter childs\n\t\t\tif (allow || !config.level){ \n\t\t\t\tif (sub){\n\t\t\t\t\tvar newsub = this.branch[id] = this._filter_branch_rec(filter, value, sub, level+1, config);\n\t\t\t\t\titem.$count = newsub.length;\n\t\t\t\t\tif (child_run && newsub.length)\n\t\t\t\t\t\tneworder.push(id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn neworder;\n\t},\n\tcount:function(){\n\t\tif (this.order.length)\n\t\t\treturn this.order.length;\n\n\t\t//we must return some non-zero value, or logic of selection will think that we have not data at all\n\t\tvar count=0;\n\t\tthis.eachOpen(function(){ count++; });\n\t\treturn count;\n\t},\n\t_change_branch_id:function(branches, parent, old, newid){\n\t\tif (branches[old]){\n\t\t\tvar branch = branches[newid] = branches[old];\n\t\t\tfor (var i = 0; i < branch.length; i++)\n\t\t\t\tthis.getItem(branch[i]).$parent = newid;\n\t\t\tdelete branches[old];\n\t\t}\n\t\tif (branches[parent]){\n\t\t\tvar index = _power_array.find.call(branches[parent], old);\n\t\t\tif (index >= 0)\n\t\t\t\tbranches[parent][index] = newid;\n\t\t}\n\t},\n\tchangeId:function(old, newid){\n\t\tif(old == newid) return;\n\t\t\n\t\tvar parent = this.getItem(old).$parent;\n\t\tthis._change_branch_id(this.branch, parent, old, newid);\n\n\t\t//in case of filter applied, update id in filtered state as well\n\t\tif (this._filter_branch)\n\t\t\tthis._change_branch_id(this._filter_branch, parent, old, newid);\n\n\t\treturn DataStore.prototype.changeId.call(this, old, newid);\n\t},\n\tclearAll:function(soft){\n\t\tthis.branch = { 0:[] };\n\t\tDataStore.prototype.clearAll.call(this, soft);\t\n\t},\n\tgetPrevSiblingId:function(id){\n\t\tvar order = this.branch[this.getItem(id).$parent];\n\t\tvar pos = _power_array.find.call(order, id)-1;\n\t\tif (pos>=0)\n\t\t\treturn order[pos];\n\t\treturn null;\n\t},\n\tgetNextSiblingId:function(id){\n\t\tvar order = this.branch[this.getItem(id).$parent];\n\t\tvar pos = _power_array.find.call(order, id)+1;\n\t\tif (pos<order.length)\n\t\t\treturn order[pos];\n\t\treturn null;\n\t},\n\tgetParentId:function(id){\n\t\treturn this.getItem(id).$parent;\n\t},\n\tgetFirstChildId:function(id){\n\t\tvar order = this.branch[id];\n\t\tif (order && order.length)\n\t\t\treturn order[0];\n\t\treturn null;\n\t},\n\tisBranch:function(parent){\n\t\treturn !!this.branch[parent];\n\t},\n\tgetBranchIndex:function(child){\n\t\tvar t = this.branch[this.pull[child].$parent];\n\t\treturn _power_array.find.call(t, child);\n\t},\n\t_set_child_scheme:function(parse_name){\n\n\t\tif (typeof parse_name == \"string\")\n\t\t\tthis._datadriver_child = function(obj){\n\t\t\t\tvar t = obj[parse_name];\n\t\t\t\tif (t)\n\t\t\t\t\tdelete obj[parse_name];\n\t\t\t\treturn t;\n\t\t\t};\n\t\telse \n\t\t\tthis._datadriver_child = parse_name;\n\t},\n\t_inner_parse:function(info, recs){ \n\t\tvar parent  = info.parent || 0;\n\t\t\n\t\tfor (var i=0; i<recs.length; i++){\n\t\t\t//get hash of details for each record\n\t\t\tvar temp = this.driver.getDetails(recs[i]);\n\t\t\tvar id = this.id(temp); \t//generate ID for the record\n\t\t\tvar update = !!this.pull[id]; //update mode\n\n\t\t\tif (update){\n\t\t\t\ttemp = extend(this.pull[id], temp, true);\n\t\t\t\tif (this._scheme_update)\n\t\t\t\t\tthis._scheme_update(temp);\n\t\t\t} else {\n\t\t\t\tif (this._scheme_init)\n\t\t\t\t\tthis._scheme_init(temp);\n\t\t\t\tthis.pull[id]=temp;\n\t\t\t}\n\n\t\t\tthis._extraParser(temp, parent, 0, update, info.from ? info.from*1+i : 0);\n\t\t}\n\n\t\t//fix state of top item after data loading\n\t\tvar pItem = this.pull[parent] || {};\n\t\tvar pBranch = this.branch[parent] || [];\n\t\tpItem.$count = pBranch.length;\n\t\tdelete pItem.webix_kids;\n\n\t\tif (info.size && info.size != pBranch.length)\n\t\t\tpBranch[info.size-1] = undefined;\n\t},\n\t_extraParser:function(obj, parent, level, update, from){\n\t\t//processing top item\n\t\tobj.$count = 0;\n\t\t//using soft check, as parent can be a both 0 and \"0\" ( second one in case of loading from server side ) \n\t\tobj.$parent = parent!=\"0\"?parent:0;\n\t\tobj.$level = level||(parent!=\"0\"?this.pull[parent].$level+1:1);\n\t\t\n\t\tvar parent_branch = this.branch[obj.$parent];\n\t\tif (!parent_branch)\n\t\t\tparent_branch = this.branch[obj.$parent] = [];\n\t\tif (this._filter_branch)\n\t\t\tthis._filter_branch[obj.$parent] = parent_branch;\n\n\t\tif (!update){\n\t\t\tvar pos = from || parent_branch.length;\n\t\t\tparent_branch[pos] = obj.id;\n\t\t}\n\n\t\tvar child = this._datadriver_child(obj);\n\n\t\tif (obj.webix_kids){\n\t\t\treturn (obj.$count = -1);\n\t\t}\n\n\t\tif (!child) //ignore childless\n\t\t\treturn (obj.$count = 0);\t\n\n\t\t//when loading from xml we can have a single item instead of an array\n\t\tif (!isArray(child))\n\t\t\tchild = [child];\n\t\t\n\n\t\tfor (var i=0; i < child.length; i++) {\n\t\t\t//extra processing to convert strings to objects\n\t\t\tvar item = DataDriver.json.getDetails(child[i]);\n\t\t\tvar itemid = this.id(item);\n\t\t\tupdate = !!this.pull[itemid];\n\t\t\t\n\t\t\tif (update){\n\t\t\t\titem = extend(this.pull[itemid], item, true);\n\t\t\t\tif (this._scheme_update)\n\t\t\t\t\tthis._scheme_update(item);\n\t\t\t} else {\n\t\t\t\tif (this._scheme_init)\n\t\t\t\t\tthis._scheme_init(item);\n\t\t\t\tthis.pull[itemid]=item;\n\t\t\t}\n\t\t\tthis._extraParser(item, obj.id, obj.$level+1, update);\n\t\t}\n\n\t\t//processing childrens\n\t\tvar branch = this.branch[obj.id];\n\t\tif (branch)\n\t\t\tobj.$count = branch.length;\n\t}, \n\t_sync_to_order:function(master){\n\t\tthis.order = _to_array();\n\n\t\t// send current order to prevent simultaneous use in sync mode\n\t\tthis._sync_each_child(this.order, 0, master);\n\t},\n\t_sync_each_child:function(order, start, master){\n\t\tvar branch = this.branch[start];\n\t\tfor (var i=0; i<branch.length; i++){\n\t\t\tvar id = branch[i];\n\t\t\torder.push(id);\n\t\t\tvar item = this.pull[id];\n\t\t\tif (item && item.open){\n\t\t\t\tif (item.$count == -1)\n\t\t\t\t\tmaster.loadBranch(id);\n\t\t\t\telse if (item.$count)\n\t\t\t\t\tthis._sync_each_child(order, id, master);\n\t\t\t}\n\t\t}\n\t},\n\tprovideApi:function(target,eventable){\n\t\tvar list = [\"getPrevSiblingId\",\"getNextSiblingId\",\"getParentId\",\"getFirstChildId\",\"isBranch\",\"getBranchIndex\",\"filterMode_setter\"];\n\t\tfor (var i=0; i < list.length; i++)\n\t\t\ttarget[list[i]]=this._methodPush(this,list[i]);\n\n\t\tif (!target.getIndexById)\n\t\t\tDataStore.prototype.provideApi.call(this, target, eventable);\n\t},\n\tgetTopRange:function(){\n\t\treturn _to_array([].concat(this.branch[0])).map(function(id){\n\t\t\treturn this.getItem(id);\n\t\t}, this);\n\t},\n\teachChild:function(id, functor, master, all){\n\t\tvar branch = this.branch;\n\t\tif (all && this._filter_branch)\n\t\t\tbranch = this._filter_branch;\n\n\t\tvar stack = branch[id];\n\t\tif (stack)\n\t\t\tfor (var i=0; i<stack.length; i++){\n\t\t\t\tif(stack[i])\n\t\t\t\t\tfunctor.call((master||this), this.getItem(stack[i]));\n\t\t\t}\n\t},\n\teach:function(method,master, all, id){\n\t\tthis.eachChild((id||0), function(item){\n\t\t\tvar branch = this.branch;\n\n\t\t\tmethod.call((master||this), item);\n\n\t\t\tif (all && this._filter_branch)\n\t\t\t\tbranch = this._filter_branch;\n\n\t\t\tif (item && branch[item.id])\n\t\t\t\tthis.each(method, master, all, item.id);\n\t\t}, this, all);\n\t},\t\n\teachOpen:function(method,master, id){\n\t\tthis.eachChild((id||0), function(item){\n\t\t\tmethod.call((master||this), item);\n\t\t\tif (this.branch[item.id] && item.open)\n\t\t\t\tthis.eachOpen(method, master, item.id);\n\t\t});\n\t},\n\teachSubItem:function(id, functor){\n\t\tvar top = this.branch[id||0];\n\t\tif (top)\n\t\t\tfor (var i=0; i<top.length; i++){\n\t\t\t\tvar key = top[i];\n\t\t\t\tif (this.branch[key]){\n\t\t\t\t\tfunctor.call(this, this.getItem(key),true);\n\t\t\t\t\tthis.eachSubItem(key, functor);\n\t\t\t\t} else\n\t\t\t\t\tfunctor.call(this, this.getItem(key), false);\n\t\t\t}\n\t},\n\teachLeaf:function(id, functor){\n\t\tvar top = this.branch[id||0];\n\t\tif (top)\n\t\t\tfor (var i=0; i<top.length; i++){\n\t\t\t\tvar key = top[i];\n\t\t\t\tif (this.branch[key]){\n\t\t\t\t\tthis.eachLeaf(key, functor);\n\t\t\t\t} else\n\t\t\t\t\tfunctor.call(this, this.getItem(key), false);\n\t\t\t}\n\t},\n\t_sort_core:function(sorter, order){\n\t\tfor (var key in this.branch){\n\t\t\tvar bset =  this.branch[key];\n\t\t\tvar data = [];\n\n\t\t\tfor (let i=0; i<bset.length; i++)\n\t\t\t\tdata.push(this.pull[bset[i]]);\n\n\t\t\tdata.sort(sorter);\n\n\t\t\tfor (let i=0; i<bset.length; i++)\n\t\t\t\tdata[i] = data[i].id;\n\n\t\t\tthis.branch[key] = data;\n\t\t}\n\t\treturn order;\n\t},\n\tadd:function(obj, index, pid){\n\t\tvar refresh_parent = false;\n\n\t\tvar parent = this.getItem(pid||0);\n\t\tif(parent){\n\t\t\t//when adding items to leaf item - it need to be repainted\n\t\t\tif (!this.branch[parent.id])\n\t\t\t\trefresh_parent = true;\n\n\t\t\tparent.$count++;\n\t\t\t//fix for the adding into dynamic loading branch\n\t\t\t//dynamic branch has $count as -1\n\t\t\tif (!parent.$count) parent.$count = 1;\n\t\t}\n\n\t\tthis.branch[pid||0] = this.order = _to_array(this.branch[pid||0]);\n\n\t\tobj.$count = obj.webix_kids ? -1 : 0; \n\t\tobj.$level= (parent?parent.$level+1:1); \n\t\tobj.$parent = (parent?parent.id:0);\n\n\t\tif (this._filter_branch){\t//adding during filtering\n\t\t\tvar origin = this._filter_branch[pid||0];\n\t\t\t//newly created branch\n\t\t\tif (!origin) origin = this._filter_branch[pid] = this.order;\n\n\t\t\t//branch can be shared bettwen collections, ignore such cases\n\t\t\tif (this.order !== origin){\n\t\t\t\t//we can't know the location of new item in full dataset, making suggestion\n\t\t\t\t//put at end by default\n\t\t\t\tvar original_index = origin.length;\n\t\t\t\t//put at start only if adding to the start and some data exists\n\t\t\t\tif (!index && this.branch[pid||0].length)\n\t\t\t\t\toriginal_index = 0;\n\n\t\t\t\torigin = _to_array(origin);\n\t\t\t\tobj.id = obj.id || uid();\n\t\t\t\torigin.insertAt(obj.id,original_index);\n\t\t\t}\n\t\t}\n\n\t\t//call original adding logic\n\t\tvar result = DataStore.prototype.add.call(this, obj, index);\n\n\n\t\tif (refresh_parent)\n\t\t\tthis.refresh(pid);\n\n\t\treturn result;\n\t},\n\t_rec_remove:function(id){\n\t\tvar obj = this.pull[id];\n\t\tif(this.branch[obj.id] && this.branch[obj.id].length > 0){\n\t\t\tvar branch = this.branch[id];\n\t\t\tfor(var i=0;i<branch.length;i++)\n\t\t\t\tthis._rec_remove(branch[i], true);\n\t\t}\n\t\tdelete this.branch[id];\n\t\tif(this._filter_branch)\n\t\t\tdelete this._filter_branch[id];\n\t\tdelete this.pull[id];\n\t\tif (this._marks[id])\n\t\t\tdelete this._marks[id];\n\t},\n\t_filter_removed:function(pull, parentId, id){\n\t\tvar branch = pull[parentId];\n\t\tif (branch.length == 1 && branch[0] == id && parentId){\n\t\t\tdelete pull[parentId];\n\t\t} else\n\t\t\t_to_array(branch).remove(id);\n\t},\n\tremove:function(id){\n\t\t//id can be an array of IDs - result of getSelect, for example\n\t\tif (isArray(id)){\n\t\t\tfor (var i=0; i < id.length; i++)\n\t\t\t\tthis.remove(id[i]);\n\t\t\treturn;\n\t\t}\n\n\t\tassert(this.exists(id), \"Not existing ID in remove command\"+id);\n\t\tvar obj = this.pull[id];\n\t\tvar parentId = (obj.$parent||0);\n\n\t\tif (this.callEvent(\"onBeforeDelete\",[id]) === false) return false;\n\t\tthis._rec_remove(id);\n\t\tthis.callEvent(\"onAfterDelete\",[id]);\n\n\t\tvar parent = this.pull[parentId];\n\t\tthis._filter_removed(this.branch, parentId, id);\n\t\tif (this._filter_branch)\n\t\t\tthis._filter_removed(this._filter_branch, parentId, id);\n\n\t\tvar refresh_parent = 0;\n\t\tif (parent){\n\t\t\tparent.$count--;\n\t\t\tif (parent.$count<=0){\n\t\t\t\tparent.$count=0;\n\t\t\t\tparent.open = 0;\n\t\t\t\trefresh_parent = 1;\n\t\t\t}\n\t\t}\n\n\t\t//repaint signal\n\t\tthis.callEvent(\"onStoreUpdated\",[id,obj,\"delete\"]);\n\t\tif (refresh_parent)\n\t\t\tthis.refresh(parent.id);\n\t},\n\t/*\n\t\tserializes data to a json object\n\t*/\n\tgetBranch:function(id){\n\t\tvar out = [];\n\t\tvar items = (this._filter_branch || this.branch)[id];\n\t\tif (items)\n\t\t\tfor (var i = 0; i < items.length; i++) out[i] = this.pull[items[i]];\n\n\t\treturn out;\n\t},\n\tserialize: function(id, all){\n\t\tvar coll = this.branch;\n\t\t//use original collection of branches\n\t\tif (all && this._filter_branch) coll = this._filter_branch;\n\n\t\tvar ids = coll[id||0];\n\t\tvar result = [];\n\t\tfor(var i=0; i< ids.length;i++) {\n\t\t\tvar obj = this.pull[ids[i]];\n\t\t\tvar rel;\n\n\t\t\tif (this._scheme_serialize){\n\t\t\t\trel = this._scheme_serialize(obj);\n\t\t\t\tif (rel===false) continue;\n\t\t\t} else \n\t\t\t\trel = copy(obj);\n\t\t\t\t\n\t\t\tif (coll[obj.id])\n\t\t\t\trel.data = this.serialize(obj.id, all);\n\n\t\t\tresult.push(rel);\n\t\t}\n\t\treturn result;\n\t}\n};\n\nexport default TreeStore;","import {create, preventEvent} from \"../webix/html\";\nimport {bind, extend} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport {assert} from \"../webix/debug\";\nimport {callEvent} from \"../webix/customevents\";\n\nimport env from \"../webix/env\";\nimport DataDriver from \"../load/drivers/index\";\n\n\nconst UploadDriver = {\n\t$render: function() {\n\t\tif (this._upload_area){\n\t\t\t//firstChild is webix_el_box container, which have relative position\n\t\t\t//as result, file control is placed under the button and not in the top corner\n\t\t\tthis._contentobj.firstChild.appendChild(this._upload_area);\n\t\t\treturn;\n\t\t}\n\t\tthis.files.attachEvent(\"onBeforeDelete\", this._stop_file);\n\n\t\tvar input_config =  {\n\t\t\t\"type\": \"file\",\n\t\t\t\"class\": \"webix_hidden_upload\",\n\t\t\ttabindex:-1\n\t\t};\n\n\t\tif (this._settings.accept)\n\t\t\tinput_config.accept = this._settings.accept;\n\n\t\tif (this._settings.multiple)\n\t\t\tinput_config.multiple = \"true\";\n\n\t\tif (this._settings.directory) {\n\t\t\tinput_config.webkitdirectory = \"true\";\n\t\t\tinput_config.mozdirectory = \"true\";\n\t\t\tinput_config.directory = \"true\";\n\t\t}\n\n\t\tvar f = create(\"input\", input_config);\n\t\tthis._upload_area = this._contentobj.firstChild.appendChild(f);\n\n\t\t_event(this._viewobj, \"drop\", bind(function(e) {\n\t\t\tthis.$drop(e);\n\t\t\tpreventEvent(e);\n\t\t}, this));\n\t\t_event(f, \"change\", bind(function() {\n\t\t\tthis._add_files(f.files);\n\n\t\t\tif (env.isIE) {\n\t\t\t\tvar t = document.createElement(\"form\");\n\t\t\t\tt.appendChild(this._upload_area);\n\t\t\t\tt.reset();\n\t\t\t\tthis._contentobj.firstChild.appendChild(f);\n\t\t\t} else\n\t\t\t\tf.value = \"\";\n\t\t}, this));\n\t\t_event(this._viewobj, \"click\", bind(function() {\n\t\t\tvar now_date = new Date();\n\t\t\tif (now_date - (this._upload_timer_click || 0) > 250) {\n\t\t\t\tthis.fileDialog();\n\t\t\t}\n\t\t}, this));\n\n\t\t_event(this._viewobj, \"dragenter\", preventEvent);\n\t\t_event(this._viewobj, \"dragexit\", preventEvent);\n\t\t_event(this._viewobj, \"dragover\", preventEvent);\n\t},\n\t_directoryEntry: function(value) {\n\t\treturn value.isDirectory;\n\t},\n\t_directoryDrop: function(item, state, path) {\n\t\tif (item.isFile){\n\t\t\titem.file(function(file){\n\t\t\t\tstate.addFile(file, null, null, { name : path+\"/\"+file.name });\n\t\t\t});\n\t\t} else if (item.isDirectory) {\n\t\t\t// Get folder contents\n\t\t\tvar dirReader = item.createReader();\n\t\t\tdirReader.readEntries(function(entries){\n\t\t\t\tfor (var i = 0; i < entries.length; i++){\n\t\t\t\t\tstate._directoryDrop(entries[i], state, (path ? (path + \"/\") : \"\") + item.name);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\t// adding files by drag-n-drop\n\t$drop: function(e) {\n\t\tvar files = e.dataTransfer.files;\n\t\tvar items = e.dataTransfer.items;\n\n\t\t// non-file drop\n\t\tif (!files.length) return;\n\n\t\tif (this.callEvent(\"onBeforeFileDrop\", [files, e])) {\n\t\t\titems = items || files; //IE10+\n\t\t\tfor (var i = 0; i < items.length; i++) {\n\t\t\t\t//https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/webkitGetAsEntry\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (item.webkitGetAsEntry){\n\t\t\t\t\titem = item.webkitGetAsEntry();\n\t\t\t\t\tif (item.isDirectory){\n\t\t\t\t\t\tthis._directoryDrop(item, this, \"\");\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.addFile(files[i]);\n\t\t\t}\n\t\t}\n\t\tthis.callEvent(\"onAfterFileDrop\", [files, e]);\n\t},\n\tfileDialog:function(context){\n\t\tthis._upload_timer_click = new Date();\n\t\tthis._last_file_context = context;\n\t\tvar inputs = this._viewobj.getElementsByTagName(\"INPUT\");\n\t\tinputs[inputs.length-1].click();\n\t},\n\tsend: function(id){\n\t\t//alternative syntx send(callback)\n\t\tif (typeof id == \"function\"){\n\t\t\tthis._last_assigned_upload_callback = id;\n\t\t\tid = 0;\n\t\t}\n\n\t\tif (!id){\n\t\t\tvar order = this.files.data.order;\n\t\t\tvar complete = true;\n\n\t\t\tif (order.length)\n\t\t\t\tfor (var i=0; i<order.length; i++)\n\t\t\t\t\tcomplete = (!this.send(order[i])) && complete;\n\n\t\t\tif (complete)\n\t\t\t\tthis._upload_complete();\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar item = this.files.getItem(id);\n\t\tif (item.status !== \"client\") return false;\n\n\t\tassert(this._settings.upload, \"You need to define upload url for uploader component\");\n\t\titem.status = \"transfer\";\n\n\t\tvar formData = new FormData();\n\n\t\tformData.append(this.config.inputName, item.file, item.name);\n\t\tformData.append(this.config.inputName+\"_fullpath\", item.name);\n\n\t\tvar headers = {};\n\t\tvar globalData = this._settings.formData || {};\n\t\tif (typeof globalData === \"function\")\n\t\t\tglobalData = globalData.call(this);\n\t\tvar details = extend(item.formData||{} , globalData);\n\n\t\tvar xhr = new XMLHttpRequest();\n\t\tvar url = this._get_active_url(item);\n\t\tif(callEvent(\"onBeforeAjax\",[\"POST\", url, details, xhr, headers, formData])){\n\t\t\tfor (let key in details)\n\t\t\t\tformData.append(key, details[key]);\n\n\t\t\titem.xhr = xhr;\n\n\t\t\txhr.upload.addEventListener(\"progress\", bind(function(e){ this.$updateProgress(id, e.loaded/e.total*100); }, this), false);\n\t\t\txhr.onload = bind(function(){ if (!xhr.aborted) this._file_complete(id); }, this);\n\t\t\txhr.open(\"POST\", url, true);\n\n\t\t\tfor (let key in headers)\n\t\t\t\txhr.setRequestHeader(key, headers[key]);\n\n\t\t\txhr.send(formData);\n\t\t}\n\n\t\tthis.$updateProgress(id, 0);\n\t\treturn true;\n\t},\n\n\t\n\t_file_complete: function(id) {\n\t\tvar item = this.files.getItem(id);\n\t\tif (item){\n\t\t\tvar response = null;\n\t\t\tif(item.xhr.status < 400){\n\t\t\t\tvar driver = DataDriver[this._settings.datatype||\"json\"];\n\t\t\t\tresponse = driver.toObject(item.xhr.responseText);\n\t\t\t\tif (response)\n\t\t\t\t\tresponse = driver.getDetails(response);\n\t\t\t}\n\t\t\tif (!response || response.status == \"error\"){\n\t\t\t\t// file upload error\n\t\t\t\titem.status = \"error\";\n\t\t\t\tdelete item.percent;\n\t\t\t\tthis.files.updateItem(id);\n\t\t\t\tthis.callEvent(\"onFileUploadError\", [item, response]);\n\t\t\t} else {\n\t\t\t\t// file upload complete\n\t\t\t\tassert(\n\t\t\t\t\t(!response.status || response.status == \"server\"),\n\t\t\t\t\t\"Not supported status value, use 'error' or 'server'\"\n\t\t\t\t);\n\t\t\t\tthis._complete(id, response);\n\t\t\t}\n\t\t\tdelete item.xhr;\n\t\t}\n\t},\n\tstopUpload: function(id){\n\t\tbind(this._stop_file,this.files)(id);\n\t},\n\t_stop_file: function(id) {\n\t\tvar item = this.getItem(id);\n\t\tif (typeof(item.xhr) !== \"undefined\"){\n\t\t\titem.xhr.aborted = true;\n\t\t\titem.xhr.abort();\n\t\t\tdelete item.xhr;\n\t\t\titem.status = \"client\";\n\t\t}\n\t}\n\n};\n\nexport default UploadDriver;","import {addCss, removeCss} from \"../webix/html\";\nimport {isUndefined, copy} from \"../webix/helpers\";\nimport {assert} from \"../webix/debug\";\n\nimport CodeParser from \"../core/codeparser\";\n\n\n// #include core/parsing.js\n\nconst Values = {\n\t$init:function(){\n\t\tthis.elements = {};\n\t},\n\tfocus:function(name){\n\t\tif (name){\n\t\t\tassert(this.elements[name],\"unknown input name: \"+name);\n\t\t\tthis._focus(this.elements[name]);\n\t\t} else{\n\t\t\tfor(let n in this.elements){\n\t\t\t\tif(this._focus(this.elements[n]) !== false)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\t_focus: function(target){\n\t\tif (target && target.focus){\n\t\t\treturn target.focus();\n\t\t}\n\t\treturn false;\n\t},\n\tsetValues:function(data, update, config){\n\t\tif (this._settings.complexData)\n\t\t\tdata = CodeParser.collapseNames(data, \"\", {}, (v) => !this.elements[v]);\n\t\tthis._inner_setValues(data, update, config);\n\t},\n\t_inner_setValues:function(data, update, config){\n\t\tthis._is_form_dirty = update;\n\t\t//prevent onChange calls from separate controls\n\t\tthis.blockEvent();\n\n\t\tif (!update || !this._values)\n\t\t\tthis._values = {};\n\n\t\tfor (let name in data)\n\t\t\tif (!this.elements[name])\n\t\t\t\tthis._values[name] = data[name];\n\n\t\tfor (let name in this.elements){\n\t\t\tconst input = this.elements[name];\n\t\t\tif (input){\n\t\t\t\tif (!isUndefined(data[name]))\n\t\t\t\t\tinput.setValue(data[name], config);\n\t\t\t\telse if (!update && input.$allowsClear)\n\t\t\t\t\tinput.setValue(\"\", config);\n\t\t\t\tthis._values[name] = input.getValue();\n\t\t\t}\n\t\t}\n\n\t\tthis.unblockEvent();\n\t\tthis.callEvent(\"onValues\",[]);\n\t},\n\tisDirty:function(){\n\t\treturn !!this._is_form_dirty || this.getDirtyValues(true) === true;\n\t},\n\tsetDirty:function(flag){\n\t\tthis._is_form_dirty = flag;\n\t\tif (!flag)\n\t\t\tthis._values = this._inner_getValues();\n\t},\n\tgetDirtyValues:function(){\n\t\tconst result = {};\n\t\tif (this._values){\n\t\t\tfor (let name in this.elements){\n\t\t\t\tconst view = this.elements[name];\n\t\t\t\tconst value = view.getValue();\n\t\t\t\tconst defaultValue = this._values[name];\n\n\t\t\t\tconst isDirty = view.$compareValue ? !view.$compareValue(defaultValue, value) : defaultValue != value;\n\t\t\t\tif (isDirty){\n\t\t\t\t\tresult[name] = value;\n\t\t\t\t\tif (arguments[0])\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t},\n\tgetCleanValues:function(){\n\t\treturn this._values;\n\t},\n\tgetValues:function(filter){\n\t\tlet data = this._inner_getValues(filter);\n\t\tif (this._settings.complexData)\n\t\t\tdata = CodeParser.expandNames(data);\n\n\t\treturn data;\n\t},\n\t_inner_getValues:function(filter){\n\t\t//get original data\t\t\n\t\tlet success,\n\t\t\telem = null;\n\n\t\tconst data = (this._values?copy(this._values):{});\n\n\t\t//update properties from linked controls\n\t\tfor (let name in this.elements){\n\t\t\telem = this.elements[name];\n\t\t\tsuccess = true;\n\t\t\tif(filter){\n\t\t\t\tif(typeof filter == \"object\"){\n\t\t\t\t\tif(filter.hidden === false)\n\t\t\t\t\t\tsuccess = elem.isVisible();\n\t\t\t\t\tif(success && filter.disabled === false)\n\t\t\t\t\t\tsuccess = elem.isEnabled();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tsuccess = filter.call(this,elem);\n\t\t\t}\n\t\t\tif(success)\n\t\t\t\tdata[name] = elem.getValue();\n\t\t\telse\n\t\t\t\tdelete data[name]; //in case of this._values[name]\n\t\t}\n\t\treturn data;\n\t},\n\tclear:function(config){\n\t\tthis._is_form_dirty = false;\n\t\tconst data = {};\n\t\tfor (let name in this.elements)\n\t\t\tif (this.elements[name].$allowsClear)\n\t\t\t\tdata[name] = \"\";\n\t\t\n\t\tthis._inner_setValues(data, false, config);\n\t},\n\tmarkInvalid: function(name, state){\n\t\t// remove 'invalid' mark\n\t\tif(state === false){\n\t\t\tthis._clear_invalid(name);\n\t\t}\n\t\t// add 'invalid' mark\n\t\telse{\n\t\t\tlet messageChanged;\n\t\t\t// set invalidMessage\n\t\t\tif(typeof state == \"string\"){\n\t\t\t\tconst input = this.elements[name];\n\t\t\t\tif(input && input._settings.invalidMessage != state){\n\t\t\t\t\tinput._settings.invalidMessage = state;\n\t\t\t\t\tmessageChanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//add mark to current validation process\n\t\t\tif (this._validate_details)\n\t\t\t\tthis._validate_details[name] = true;\n\n\t\t\tthis._mark_invalid(name, messageChanged);\n\t\t}\n\t},\n\t_mark_invalid:function(id, messageChanged){\n\t\tconst input = this.elements[id];\n\n\t\tif(input){\n\t\t\tconst config = input._settings;\n\t\t\tconst valid = !config.invalid;\n\n\t\t\tif (valid || messageChanged){\n\t\t\t\tif(valid){\n\t\t\t\t\taddCss(input._viewobj, \"webix_invalid\", true);\n\t\t\t\t\tconfig.invalid = true;\n\t\t\t\t}\n\n\t\t\t\tconst message = config.invalidMessage;\n\t\t\t\tif (typeof message === \"string\" && input.setBottomText)\n\t\t\t\t\tinput.setBottomText();\n\t\t\t}\n\t\t}\n\t},\n\t_clear_invalid:function(id){\n\t\tconst input = this.elements[id];\n\t\tif (input && input._settings.invalid){\n\t\t\tremoveCss(input._viewobj, \"webix_invalid\");\n\t\t\tinput._settings.invalid = false;\n\n\t\t\tconst message = input._settings.invalidMessage;\n\t\t\tif (typeof message === \"string\" && input.setBottomText)\n\t\t\t\tinput.setBottomText();\n\t\t}\n\t}\n};\n\n\nexport default Values;","import {offset, insertBefore, remove} from \"../webix/html\";\nimport {bind, copy, _to_array} from \"../webix/helpers\";\nimport base from \"../views/view\";\nimport {_event} from \"../webix/htmlevents\";\n\nimport DragControl from \"../core/dragcontrol\";\n\n/*\n\tRenders collection of items on demand\n*/\nconst VRenderStack = {\n\t$init:function(){\n\t\tthis._htmlmap = {};\n\t\t_event(this._viewobj, \"scroll\", bind(function(){\n\t\t\tthis.render(null, null, \"paint\");\n\t\t}, this));\n\t},\n\t//return html container by its ID\n\t//can return undefined if container doesn't exists\n\tgetItemNode:function(search_id){\n\t\treturn this._htmlmap && this._htmlmap[search_id];\n\t},\n\t/*change scrolling state of top level container, so related item will be in visible part*/\n\tshowItem:function(id){\n\t\tconst index = this.data.getIndexById(id);\n\t\tif (index > -1){\n\t\t\tconst top = index * this.type.height;\n\t\t\tconst bottom = top + this.type.height;\n\t\t\tconst scroll = this.getScrollState();\n\t\t\tconst box = offset(this.$view);\n\t\t\tif (top < scroll.y)\n\t\t\t\tthis.scrollTo(0, top);\n\t\t\telse if (bottom > scroll.y+box.height)\n\t\t\t\tthis.scrollTo(0, bottom-box.height);\n\t\t}\n\t},\n\t//update view after data update\n\t//when called without parameters - all view refreshed\n\trender:function(id,data,type){\n\t\tif (!this.isVisible(this._settings.id) || this.$blockRender)\n\t\t\treturn;\n\t\t\n\t\tconst parent = (this._renderobj||this._dataobj);\n\n\t\tif (id){\n\t\t\tif (type == \"paint\" || type == \"update\"){\n\t\t\t\tconst cont = this.getItemNode(id); //get html element of updated item\n\t\t\t\tif (cont){\n\t\t\t\t\tconst t = this._htmlmap[id] = this._toHTMLObject(data);\n\t\t\t\t\tt.style.top = cont.style.top;\n\t\t\t\t\tt.style.position = \"absolute\";\n\t\t\t\t\tt.style.left = 0; t.style.width = \"100%\";\n\n\t\t\t\t\tinsertBefore(t, cont); \n\t\t\t\t\tremove(cont);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t//updating not rendered yet item\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tlet isDrag, source, marked = this._marked_item_id;\n\t\tif (DragControl.active && type != \"drag-end\"){\n\t\t\tconst context = DragControl.getContext();\n\t\t\tisDrag = this._init_drop_area && context.from === this;\t\t//move and order modes\n\t\t\tsource = isDrag && _to_array(copy(context.source||[]));\n\t\t}\n\n\t\tif (type != \"paint\" || isDrag){\n\t\t\t//repaint all\n\t\t\tthis._htmlmap = {};\n\t\t\tparent.innerHTML = \"\";\n\t\t}\n\n\t\t//full reset\n\t\tif (this.callEvent(\"onBeforeRender\",[this.data])){\n\t\t\tconst count = this.data.count();\n\t\t\tconst scroll = this.getScrollState();\n\t\t\tconst box = offset(this._viewobj);\n\n\t\t\tlet top = Math.floor(scroll.y / this.type.height)-2;\n\t\t\tlet bottom = Math.ceil((scroll.y + box.height) / this.type.height)+2;\n\n\t\t\ttop = Math.max(0, top);\n\t\t\tbottom = Math.min(count-1, bottom+(isDrag?source.length-1:0));\n\n\t\t\tconst html = [];\n\t\t\tfor (let i=top; i<=bottom; i++){\n\t\t\t\tconst sid = this.data.order[i];\n\t\t\t\tif (isDrag && source.find(sid) !== -1){\n\t\t\t\t\tif (sid == marked) marked = this.data.order[i+1];\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (!this._htmlmap[sid]){\n\t\t\t\t\tconst item = this.data.getItem(sid);\n\t\t\t\t\tif (!item){\n\t\t\t\t\t\tthis._run_load_next({ \n\t\t\t\t\t\t\tcount:bottom-i+(this._settings.loadahead || 0),\n\t\t\t\t\t\t\tstart:i \n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\thtml.push(this._toHTML(item));\n\t\t\t\t} else {\n\t\t\t\t\thtml.push(`<div webix_skip=\"true\" ${this._id}=\"${sid}\"></div>`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._html.innerHTML = html.join(\"\");\n\n\t\t\tif (this._init_drop_area && type == \"drag-in\"){\t\t\t// can be external\n\t\t\t\tconst node = this._html.querySelector(`[${this._id}=\"${marked}\"]`);\n\t\t\t\tif (node) {\n\t\t\t\t\tthis._html.insertBefore(DragControl._dropHTML[0], node);\n\t\t\t\t} else this._html.appendChild(DragControl._dropHTML[0]);\n\t\t\t}\n\n\t\t\tparent.style.position = \"relative\";\n\t\t\tparent.style.height = count*this.type.height+\"px\";\n\n\t\t\tconst kids = this._html.childNodes;\n\t\t\tfor (let i=kids.length-1; i>=0; i--){\n\t\t\t\tconst child = kids[i];\n\t\t\t\tif (child.getAttribute(\"webix_skip\")) continue;\n\n\t\t\t\tconst cid = child.getAttribute(this._id);\n\t\t\t\tif (cid){\n\t\t\t\t\tchild.style.position = \"absolute\";\n\t\t\t\t\tchild.style.top = (top+i)*this.type.height+\"px\";\n\t\t\t\t\tchild.style.left = 0; child.style.width = \"100%\";\n\n\t\t\t\t\tparent.appendChild(child);\n\t\t\t\t\tthis._htmlmap[cid] = child;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.callEvent(\"onAfterRender\",[]);\n\t\t}\n\t},\n\t$setSize:function(){\n\t\tif (base.api.$setSize.apply(this, arguments)){\n\t\t\tthis.render(null, null, \"paint\");\n\t\t}\n\t},\n\t_run_load_next:function(conf){\n\t\tconst count = Math.max(conf.count, (this._settings.datafetch||this._settings.loadahead||0));\n\t\tif (this._maybe_loading_already(conf.count, conf.start)) return;\n\t\tthis.loadNext(count, conf.start);\n\t},\n\t_set_drop_area:function(){\n\t\tthis.render(null, null, \"drag-in\");\n\t},\n\t_remove_drop_area:function(){\n\t\tremove(DragControl._dropHTML);\n\t\tthis.render(null, null, \"drag-out\");\n\t},\n};\n\nexport default VRenderStack;","import {$active} from \"../../webix/skin\";\nimport {extend, isUndefined} from \"../../webix/helpers\";\n\nexport const errorMessage = \"non-existing view for export\";\n\nfunction getDataHelper(key, column, raw){\n\tif (!raw && column.format)\n\t\treturn function(obj){ return column.format(obj[key]); };\n\n\treturn function(obj){ return obj[key]; };\n}\n\nfunction getHeaderText(view, header){\n\tlet text = header.text;\n\tif (header.contentId){\n\t\tconst content = view.getHeaderContent(header.contentId);\n\t\tif (content && !content.type.$icon)\n\t\t\ttext = content.getValue(true);\n\t}\n\treturn (text||\"\").toString().replace( /<[^>]*>/gi, \"\");\n}\n\nexport function getStyles(r, c, styles){\n\t//row index, column index, styles array\n\tif(styles[r] && styles[r][c])\n\t\treturn styles[r][c];\n\treturn {};\n}\n\nexport function getExportScheme(view, options){\n\tconst scheme = [];\n\tlet h_count = 0, f_count = 0;\n\tconst isTable = view.getColumnConfig;\n\tlet columns = options.columns;\n\tconst raw = !!options.rawValues;\n\tconst isTree = view.data.name == \"TreeStore\";\n\n\tlet treeLines = options.treeLines;\n\tif(treeLines === true || isUndefined(treeLines))\n\t\ttreeLines = \"value\";\n\n\tscheme.heights = {};\n\n\tif(options.hidden || options.hide){\n\t\tscheme.hiddenCols = {};\n\t\tscheme.hiddenRows = {};\n\t}\n\n\tif (!columns){\n\t\tcolumns = [];\n\t\tif (isTable){\n\t\t\tconst order = view._hidden_column_order;\n\t\t\tif(options.hidden && order.length){\n\t\t\t\tfor (let i = 0; i < order.length; i++){\n\t\t\t\t\tconst col = view.getColumnConfig(order[i]);\n\t\t\t\t\tif(!view.isColumnVisible(col.id))\n\t\t\t\t\t\tscheme.hiddenCols[col.id] = 1;\n\t\t\t\t\tcolumns.push(col);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t\tcolumns = columns.concat(view._columns);\n\t\t}\n\t\telse {\n\t\t\tconst obj = view.data.pull[view.data.order[0]];\n\t\t\tfor (let key in obj)\n\t\t\t\tif(key !== \"id\" && key[0] != \"$\")\n\t\t\t\t\tcolumns.push({id:key, isTree: isTree && key === treeLines});\n\t\t}\n\t}\n\telse if(!columns.length){\n\t//export options are set as - columns:{ rank:true, title:{ header:\"custom\"}}\n\t\tconst arr = [];\n\t\tfor(let key in columns)\n\t\t\tarr.push(extend({ id:key}, extend({}, columns[key])));\n\t\tcolumns = arr;\n\t}\n\n\tif (options.ignore)\n\t\tfor (let i=columns.length-1; i>=0; i--)\n\t\t\tif (options.ignore[columns[i].id])\n\t\t\t\tcolumns.splice(i,1);\n\n\tif (options.id)\n\t\tscheme.push({ id:\"id\", width:50, header:\" \", template:function(obj){ return obj.id; }});\n\n\tif (options.flatTree){\n\t\tconst flatKey = options.flatTree.id;\n\t\tconst copy = [].concat(options.flatTree.columns);\n\t\tconst fill = [];\n\t\tconst fillMode = !!options.flatTree.fill;\n\t\tfor (let i = 1; i <= copy.length; i++)\n\t\t\tcopy[i-1].template = (function(i){ \n\t\t\t\treturn function(obj){ \n\t\t\t\t\treturn obj.$level == i ? (fill[i]=obj[flatKey]) : ((fillMode && i<obj.$level)?fill[i]:\"\"); \n\t\t\t\t};\n\t\t\t})(i);\n\n\t\tlet index = 0;\n\t\tfor (let i = columns.length-1; i >= 0; i--)\n\t\t\tif (columns[i].id === flatKey)\n\t\t\t\tindex = i;\n\n\t\tcolumns = [].concat(columns.slice(0,index)).concat(copy).concat(columns.slice(index+1));\n\t}\n\n\tlet treeColumn;\n\n\tfor (let j = 0; j < columns.length; j++) {\n\t\tlet column = columns[j];\n\t\tlet key = column.id;\n\n\t\tif (column.noExport) continue;\n\n\t\t// raw mode has sense only for datatable\n\t\t// in other cases we don't have built-in data templates\n\t\tlet rawColumn = raw && isTable;\n\t\tif (isTable){\n\t\t\tconst sourceColumn = view.getColumnConfig(key);\n\t\t\t// when these's no column to take raw data from, or custom template defined - ignore raw mode\n\t\t\tif (column.template && (!sourceColumn || sourceColumn.template != column.template))\n\t\t\t\trawColumn = false;\n\t\t\tif(sourceColumn)\n\t\t\t\tcolumn = extend(extend({}, column), sourceColumn);\n\t\t}\n\n\t\tconst record = {\n\t\t\tid:         column.id,\n\t\t\ttemplate:   (( rawColumn || !column.template) ? getDataHelper(key, column, raw)  : column.template ),\n\t\t\twidth:      ((column.width   || 200) * (options.export_mode===\"excel\"?8.43/70:1 )),\n\t\t\theader:     (column.header!==false?(column.header||key)  : \"\")\n\t\t};\n\n\t\tif (column.collection) record.collection = column.collection;\n\n\t\tif(isTree && key === treeLines)\n\t\t\trecord.isTree = treeColumn = true;\n\n\t\tif(options.export_mode === \"excel\"){\n\t\t\textend(record, {\n\t\t\t\ttype: column.exportType || \"\",\n\t\t\t\tformat:column.exportFormat || \"\"\n\t\t\t});\n\t\t\tif(column.hidden){\n\t\t\t\tif(!scheme.hiddenCols)\n\t\t\t\t\tscheme.hiddenCols = {};\n\t\t\t\tscheme.hiddenCols[column.id] = 1;\n\t\t\t}\n\t\t}\n\n\t\tif(typeof record.header === \"string\") record.header = [{text:record.header}];\n\t\telse record.header = [].concat(record.header);\n\n\t\tfor(let i = 0; i<record.header.length; i++)\n\t\t\trecord.header[i] = record.header[i] ? getHeaderText(view, record.header[i]) : \"\";\n\n\t\th_count = Math.max(h_count, record.header.length);\n\n\t\tif(view.config.footer){\n\t\t\tlet footer = column.footer || \"\";\n\t\t\tif(typeof footer == \"string\") footer = [{text:footer}];\n\t\t\telse footer = [].concat(footer);\n\n\t\t\tfor(let i = 0; i<footer.length; i++)\n\t\t\t\tfooter[i] = footer[i] ? getHeaderText(view, footer[i]) : \"\";\n\n\t\t\trecord.footer = footer;\n\t\t\tf_count = Math.max(f_count, record.footer.length);\n\t\t}\n\t\tscheme.push(record);\n\t}\n\n\n\tif(!treeColumn && isTree && options.treeLines != treeLines && scheme[0])\n\t\tscheme[0].isTree = true;\n\n\tfor(let i =0; i<scheme.length; i++){\n\n\t\tlet diff = h_count-scheme[i].header.length;\n\t\tfor(let d=0; d<diff; d++)\n\t\t\tscheme[i].header.push(\"\");\n\n\t\tif(view.config.footer){\n\t\t\tdiff = f_count-scheme[i].footer.length;\n\t\t\tfor(let d=0; d<diff; d++)\n\t\t\t\tscheme[i].footer.push(\"\");\n\t\t}\n\t}\n\n\treturn scheme;\n}\n\nexport function getFileName(name, extension){\n\tif(name)\n\t\tname = name.replace(/[/?\\\\<>:*|\"]/g, \"\").substring(0, 150);\n\treturn `${name || \"Data\"}.${extension}`;\n}\n\nexport function getExportData(view, options, scheme){\n\tconst filterHTML = !!options.filterHTML;\n\tconst htmlFilter = /<[^>]*>/gi;\n\tlet data = [];\n\tlet header, headers;\n\tconst mode = options.export_mode;\n\n\tif((mode === \"excel\" || mode == \"csv\") && options.docHeader){\n\t\tdata = [[(options.docHeader.text || options.docHeader).toString()], [\"\"]];\n\t\tif(mode === \"excel\" && options.docHeader.height)\n\t\t\tscheme.heights[0] = options.docHeader.height;\n\t}\n\n\tif( options.header !== false && scheme.length){\n\t\tfor(let h=0; h < scheme[0].header.length; h++){\n\t\t\theaders = [];\n\t\t\tfor (let i = 0; i < scheme.length; i++){ \n\t\t\t\theader = \"\";\n\t\t\t\tif(scheme[i].header[h]){\n\t\t\t\t\theader = scheme[i].header[h];\n\t\t\t\t\tif (filterHTML)\n\t\t\t\t\t\theader = scheme[i].header[h] = header.replace(htmlFilter, \"\");\n\t\t\t\t}\n\t\t\t\theaders.push(header);\n\t\t\t}\n\n\t\t\tif(mode ==\"excel\" && view._columns && options.heights !==false &&\n\t\t\t(view._headers[h] !== $active.barHeight || options.heights == \"all\")\n\t\t\t) scheme.heights[data.length] = view._headers[h];\n\n\t\t\tif (mode !== \"pdf\")\n\t\t\t\tdata[data.length] = headers;\n\t\t}\n\t}\n\toptions.yCorrection = (options.yCorrection||0)-data.length;\n\n\tconst treeline = (options.flatTree || options.plainOutput) ? \"\" : \"-\";\n\n\tview.data.each(function(item, index){\n\t\tif(!options.filter || options.filter(item)){\n\t\t\tconst reallyHidden = options.hidden && view.data._filter_order && view.getIndexById(item.id) == -1;\n\t\t\tif((options.hide && options.hide(item)) || reallyHidden){\n\t\t\t\tconst header = (options.docHeader?2:0)+(options.header===false?0:scheme[0].header.length);\n\t\t\t\tscheme.hiddenRows[header+index] = 1;\n\t\t\t}\n\n\t\t\tif(this.data._scheme_export){\n\t\t\t\titem = view.data._scheme_export(item);\n\t\t\t}\n\n\t\t\tlet line = [];\n\t\t\tfor (let i = 0; i < scheme.length; i++){\n\t\t\t\tlet column = scheme[i], cell = null;\n\t\t\t\t//spreadsheet use muon to store data, get value via $getExportValue\n\t\t\t\tif(view.$getExportValue)\n\t\t\t\t\tcell = view.$getExportValue(item.id, column.id, options);\n\t\t\t\telse {\n\t\t\t\t\t//datatable math\n\t\t\t\t\tlet formula;\n\t\t\t\t\tif(options.math && item[\"$\"+column.id] && item[\"$\"+column.id].charAt(0) ==\"=\"){\n\t\t\t\t\t\tif(mode == \"excel\")\n\t\t\t\t\t\t\tformula = item[\"$\"+column.id];\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcell = item[\"$\"+column.id];\n\t\t\t\t\t}\n\n\t\t\t\t\tif(this._spans_pull){\n\t\t\t\t\t\tlet span = this.getSpan(item.id, column.id);\n\t\t\t\t\t\tif(span && span[4] && span[0] == item.id && span[1] == column.id){\n\t\t\t\t\t\t\tcell = span[4];\n\t\t\t\t\t\t\tif(filterHTML && typeof cell === \"string\")\n\t\t\t\t\t\t\t\tcell = cell.replace(htmlFilter, \"\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!cell){\n\t\t\t\t\t\tcell = column.template(item, view.type, item[column.id], column, i);\n\t\t\t\t\t\tif (!cell && cell !== 0) cell = \"\";\n\t\t\t\t\t\tif(column.isTree && treeline)\n\t\t\t\t\t\t\tcell = \" \"+Array(item.$level).join(treeline)+\" \"+cell;\n\t\t\t\t\t\tif (filterHTML && typeof cell === \"string\"){\n\t\t\t\t\t\t\tcell = cell.replace(htmlFilter, \"\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//remove end/start spaces(ex.hierarchy data)\n\t\t\t\t\t\tif (typeof cell === \"string\" && mode === \"csv\")\n\t\t\t\t\t\t\tcell = cell.trim();\n\t\t\t\t\t\t//for multiline data\n\t\t\t\t\t\tif (typeof cell === \"string\" && (mode === \"excel\" || mode === \"csv\")){\n\t\t\t\t\t\t\tcell = cell.replace(/<br\\s*\\/?>/mg,\"\\n\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(formula)\n\t\t\t\t\t\tcell = { formula, value: cell };\n\t\t\t\t}\n\n\t\t\t\tline.push(cell);\n\t\t\t}\n\n\t\t\tif(mode ==\"excel\" && view._columns && options.heights !== false &&\n\t\t\t((item.$height && item.$height !== $active.rowHeight) || options.heights == \"all\")\n\t\t\t) scheme.heights[data.length] = item.$height || this.config.rowHeight;\n\n\t\t\tdata.push(line);\n\t\t}\n\t}, view, options.hidden);\n\n\tif( options.footer !==false ){\n\t\tlet f_count = scheme[0].footer?scheme[0].footer.length:0;\n\t\tfor (let f = 0; f < f_count; f++){\n\t\t\tlet footers  = [];\n\t\t\tfor(let i = 0; i<scheme.length; i++){\n\t\t\t\tlet footer = scheme[i].footer[f];\n\t\t\t\tif (filterHTML) footer = scheme[i].footer[f] = footer.toString().replace(htmlFilter, \"\");\n\t\t\t\tfooters.push(footer);\n\t\t\t}\n\n\t\t\tif(mode ==\"excel\" && view._columns && options.heights !==false &&\n\t\t\t(view._footers[f] !== $active.barHeight || options.heights==\"all\")\n\t\t\t) scheme.heights[data.length] = view._footers[f];\n\n\t\t\tif(mode !== \"pdf\")\n\t\t\t\tdata.push(footers);\n\t\t}\n\t}\n\n\tif(mode ===\"excel\" && options.docFooter){\n\t\tdata = data.concat([[], [(options.docFooter.text || options.docFooter).toString()]]);\n\t\tif(options.docFooter.height)\n\t\t\tscheme.heights[data.length-1] = options.docFooter.height;\n\t}\n\n\treturn data;\n}","import {errorMessage, getExportScheme, getExportData, getStyles, getFileName} from \"./common\";\n\nimport i18n from \"../../webix/i18n\";\nimport promise from \"../../thirdparty/promiz\";\nimport require from \"../../load/require\";\nimport env from \"../../webix/env\";\n\nimport {download} from \"../../webix/html\";\nimport {isArray} from \"../../webix/helpers\";\nimport {extend, isUndefined} from \"../../webix/helpers\";\nimport {$$} from \"../../ui/core\";\nimport {assert} from \"../../webix/debug\";\n\nlet font = {};\nexport const toPDF = function(id, options){\n\toptions = options || {};\n\n\toptions.export_mode = \"pdf\";\n\n\tconst fontFiles = {\n\t\tfontName: \"pt-sans.regular\",\n\t\tboldFontName: \"pt-sans.bold\",\n\t\titalicFontName: \"pt-sans.italic\",\n\t\titalicBoldFontName: \"pt-sans.italic-bold\"\n\t};\n\n\textend(options, fontFiles);\n\n\tid = isArray(id)?id:[id];\n\tlet views = [];\n\n\tfor (let i = 0; i < id.length; i++) {\n\t\tif(!id[i].id) id[i]  = { id:id[i] }; \n\n\t\tlet view = $$(id[i].id);\n\n\t\tif(view){\n\t\t\tconst viewOptions = extend(id[i].options || {}, options);\n\t\t\tconst display = viewOptions.display || \"table\";\n\t\t\tif(viewOptions.display == \"image\")\n\t\t\t\tdelete viewOptions.styles;\n\n\t\t\tif(view.$exportView)\n\t\t\t\tview = view.$exportView(viewOptions);\n\n\t\t\t//$exportView returns array\n\t\t\tif(isArray(view)){\n\t\t\t\tviews = views.concat(view);\n\t\t\t\tif(options.autowidth)\n\t\t\t\t\tgetAutowidth(viewOptions, options);\n\t\t\t}\n\t\t\telse{\n\t\t\t\t//display table should be first (in case of styles:true $exportView adds styles to the first view)\n\t\t\t\tif(display == \"table\" || display == \"all\"){\n\t\t\t\t\tif(view.data && view.data.pull){\n\t\t\t\t\t\tconst scheme = getExportScheme(view, viewOptions);\n\t\t\t\t\t\tviews.push({\n\t\t\t\t\t\t\tscheme, \n\t\t\t\t\t\t\texportData: getExportData(view, viewOptions, scheme),\n\t\t\t\t\t\t\tviewOptions\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif(options.autowidth)\n\t\t\t\t\t\t\tgetAutowidth(view, options, scheme);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(display == \"image\" || display == \"all\"){\n\t\t\t\t\tconst node = viewOptions._hidden ? cloneNodeWithStyles(view.$view) : view.$view;\n\n\t\t\t\t\tviews.push({ node, viewOptions });\n\t\t\t\t\tif(options.autowidth)\n\t\t\t\t\t\tgetAutowidth(view, options);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tassert(view, errorMessage);\n\t}\n\n\tif(options.dataOnly)\n\t\treturn views;\n\n\treturn require([\n\t\tenv.cdn + \"/extras/pdfjs.js\", env.cdn + \"/extras/html2canvas-1.0.min.js\"\n\t]).then(function(){\n\t\tif(views.length == 0)\n\t\t\treturn promise.reject(errorMessage);\n\n\t\tlet allFontsLoaded = true;\n\n\t\tfor(let name in fontFiles)\n\t\t\tif(!font[name]){\n\t\t\t\tallFontsLoaded = false;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\tif(allFontsLoaded){\n\t\t\treturn getPdfData(views, options).then(function(pdf){\n\t\t\t\treturn getBlob(pdf, options);\n\t\t\t});\n\t\t}\n\t\telse{\n\t\t\tconst defer = promise.defer();\n\t\t\t/* global pdfjs */\n\t\t\tpdfjs.load(options.fontURL||env.cdn + \"/extras/\"+options.fontName+\".ttf\", function(err, regular){\n\t\t\t\tif(err)\n\t\t\t\t\treturn defer.reject(err);\n\t\t\t\tpdfjs.load(options.italicBoldFontURL||env.cdn + \"/extras/\"+options.italicBoldFontName+\".ttf\", function(errIB, ib){\n\t\t\t\t\tpdfjs.load(options.italicFontURL||env.cdn + \"/extras/\"+options.italicFontName+\".ttf\", function(errI, i){\n\t\t\t\t\t\tpdfjs.load(options.boldFontURL||env.cdn + \"/extras/\"+options.boldFontName+\".ttf\", function(errB, b){\n\t\t\t\t\t\t\tfont[options.fontName] = new pdfjs.TTFFont(regular);\n\t\t\t\t\t\t\tfont[options.boldFontName] = errB ? null : new pdfjs.TTFFont(b);\n\t\t\t\t\t\t\tfont[options.italicFontName] = errI ? null : new pdfjs.TTFFont(i);\n\t\t\t\t\t\t\tfont[options.italicBoldFontName] = errIB ? null : new pdfjs.TTFFont(ib);\n\n\t\t\t\t\t\t\tdefer.resolve(\n\t\t\t\t\t\t\t\tgetPdfData(views, options).then(function(pdf){\n\t\t\t\t\t\t\t\t\treturn getBlob(pdf, options);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn defer;\n\t\t}\n\t});\n};\n\nfunction getBlob(pdf, options){\n\tconst filename = getFileName(options.filename, \"pdf\");\n\tconst blob = new Blob([pdf.toString()], { type: \"application/pdf\" });\n\n\tif(options.download !== false)\n\t\tdownload(blob, filename);\n\treturn blob;\n}\n\nfunction getPdfData(views, options){\n\tconst doc = addPDFDoc(options);\n\tlet promises = [];\n\tfor (let i = 0; i < views.length; i++) {\n\t\tif(views[i].node)\n\t\t\tpromises.push(getPDFImage(views[i].node));\n\t\telse\n\t\t\tpromises.push(promise.resolve());\n\t}\n\n\treturn promise.all(promises).then(function(images){\n\t\tfor(let i = 0; i < promises.length; i++){\n\t\t\tconst viewOptions = views[i].viewOptions;\n\t\t\tif(viewOptions.textBefore)\n\t\t\t\taddText(doc, \"before\", viewOptions.textBefore);\n\n\t\t\tif(images[i])\n\t\t\t\tdoc.image(images[i], {align:\"center\"});\n\t\t\telse\n\t\t\t\taddPDFTable(views[i], doc);\n\n\t\t\tif(viewOptions.textAfter)\n\t\t\t\taddText(doc, \"after\", viewOptions.textAfter);\n\t\t\tif(i != views.length - 1)\n\t\t\t\tdoc.pageBreak();\n\t\t}\n\t\treturn addPDFHeader(doc, options);\n\t});\n}\n\nfunction addText(doc, type, text){\n\tif(type == \"after\")\n\t\tdoc.text().br();\n\tif(typeof text == \"string\")\n\t\ttext = {text:text};\n\n\tdoc.text(text.text, text.options || {});\n\tif(type == \"before\")\n\t\tdoc.text().br();\n}\n\nfunction getPDFImage(node){\n\tconst hidden = !document.body.contains(node);\n\tif(hidden){\n\t\t//node is a cloneNode of the real view, so it shouldn't be visible\n\t\tdocument.body.appendChild(node);\n\t\tnode.style.position = \"absolute\";\n\t\tnode.style.left = \"-9999px\";\n\t}\n\n\treturn window.html2canvas(\n\t\tnode,\n\t\t{\n\t\t\tbackground:\"#fff\",\n\t\t\tlogging:false,\n\t\t\tuseCORS:true\n\t\t})\n\t\t.then(function(canvas){\n\t\t\tconst image = canvas.toDataURL(\"image/jpeg\");\n\t\t\tconst binary_string =  window.atob(image.split(\"base64,\")[1]);\n\t\t\tconst length = binary_string.length;\n\t\t\tconst bytes = new Uint8Array(length);\n\t\t\tfor (let i = 0; i < length; i++)\n\t\t\t\tbytes[i] = binary_string.charCodeAt(i);\n\t\t\treturn new pdfjs.Image(bytes.buffer);\n\t\t})\n\t\t.finally(function(){\n\t\t\tif(hidden)\n\t\t\t\tdocument.body.removeChild(node);\n\t\t});\n}\n\nexport function getAutowidth(view, options, scheme){\n\tconst prop = options.orientation && options.orientation == \"landscape\" ? \"height\" : \"width\";\n\tlet width;\n\n\tif(scheme){\n\t\twidth = 80; //paddings\n\t\tfor(let i = 0; i<scheme.length; i++)\n\t\t\twidth += scheme[i].width;\n\t}\n\telse if(view.$width)\n\t\twidth = view.$width;\n\telse //'view' can be local settings and we need to compare them with common ones\n\t\twidth = view[prop];\n\n\toptions[prop] = Math.max(options[prop] || 0, width || 0);\n}\n\nfunction addPDFDoc(options){\n\tlet width = options.width||595.296, height = options.height || 841.896;// default A4 size\n\n\tif(options.orientation && options.orientation ===\"landscape\")\n\t\theight = [width, width = height][0];\n\n\treturn new pdfjs.Document({\n\t\tpadding: 40,\n\t\tfont: font[options.fontName],\n\t\tthreshold:256,\n\t\twidth,\n\t\theight\n\t});\n}\n\nfunction addPDFTable(view, doc){\n\tconst scheme = view.scheme;\n\tconst data = view.exportData;\n\tconst options = view.viewOptions;\n\tconst styles = view.styles;\n\n\toptions.header = (isUndefined(options.header) || options.header === true) ? {} : options.header;\n\toptions.footer = (isUndefined(options.footer) || options.footer === true) ? {} : options.footer;\n\toptions.table = options.table || {};\n\n\t//render table\n\tconst h_count = options.header === false ? 0: scheme[0].header.length;\n\tconst f_count = (options.footer === false || !scheme[0].footer) ? 0: scheme[0].footer.length;\n\n\tconst colWidths = [];\n\tfor(let i = 0; i<scheme.length; i++)\n\t\tcolWidths[i] = scheme[i].width;\n\n\tconst tableOps = extend(options.table, {\n\t\tborderWidth: 1,height:20, lineHeight:1.1,\n\t\tborderColor: 0xEEEEEE, backgroundColor: 0xFFFFFF, color:0x666666,\n\t\ttextAlign:\"left\", paddingRight:10, paddingLeft:10,\n\t\theaderRows:h_count, widths: colWidths.length?colWidths:[\"100%\"]\n\t});\n\n\tconst table = doc.table(tableOps);\n\n\t//render table header\n\tif(h_count){\n\t\tconst headerOps = extend(options.header, {\n\t\t\tborderRightColor:0xB0CEE3, borderBottomColor:0xB0CEE3,\n\t\t\tcolor:0x4A4A4A, backgroundColor:0xD2E3EF,\n\t\t\theight:27, lineHeight:1.2\n\t\t});\n\n\t\tfor(let i = 0; i<h_count; i++){\n\t\t\tconst header = table.tr(headerOps);\n\t\t\tfor(let s=0; s<scheme.length; s++){\n\t\t\t\tconst cellStyle = styles ? getStyles(i, s, styles) : {};\n\t\t\t\tsetFont(cellStyle, options);\n\t\t\t\theader.td(scheme[s].header[i].toString(), cellStyle);\n\t\t\t}\n\t\t}\n\t}\n\n\t//render table data\n\tfor(let r=0; r<data.length;r++){\n\t\tlet row = table.tr({});\n\t\tfor(let c=0; c< data[r].length; c++){\n\t\t\tconst cellStyle = styles ? getStyles(r+h_count, c, styles) : {};\n\t\t\tsetFont(cellStyle, options);\n\t\t\trow.td(data[r][c], cellStyle);\n\t\t}\n\t}\n\n\t//render table footer\n\tif(f_count){\n\t\tlet footerOps = extend(options.footer, {\n\t\t\tborderRightColor:0xEEEEEE, borderBottomColor:0xEEEEEE,\n\t\t\tbackgroundColor: 0xFAFAFA, color:0x666666,\n\t\t\theight:27, lineHeight:1.2\n\t\t});\n\n\t\tfor(let i = 0; i<f_count; i++){\n\t\t\tconst beforeCount = h_count + data.length;\n\t\t\tlet footer = table.tr(footerOps);\n\t\t\tfor(let s=0; s<scheme.length; s++){\n\t\t\t\tconst cellStyle = styles ? getStyles(i+beforeCount, s, styles) : {};\n\t\t\t\tsetFont(cellStyle, options);\n\t\t\t\tfooter.td(scheme[s].footer[i].toString(), cellStyle);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction setFont(cellStyle, options){\n\tconst boldFont = font[options.boldFontName];\n\tconst italicFont = font[options.italicFontName];\n\tconst italicBoldFont = font[options.italicBoldFontName];\n\n\tif(cellStyle.bold && boldFont) {\n\t\tif(cellStyle.italic && italicBoldFont)\n\t\t\tcellStyle.font = italicBoldFont;\n\t\telse\n\t\t\tcellStyle.font = boldFont;\n\t}\n\telse if(cellStyle.italic && italicFont)\n\t\tcellStyle.font = italicFont;\n}\n\nfunction addPDFHeader(doc, options){\n\t//doc footer\n\tif (options.docFooter !== false){\n\t\toptions.docFooter = extend(options.docFooter||{}, {\n\t\t\tcolor: 0x666666, textAlign:\"center\"\n\t\t});\n\t\tdoc.footer().text(options.docFooter).append((i18n.dataExport.page||\"Page\")).pageNumber().append(\"  \"+(i18n.dataExport.of||\"of\")+\"  \").pageCount();\n\t}\n\n\tconst horder = { text:0, image:1};\n\n\t//doc header, configurable\n\tif (options.docHeader){\n\t\tif (typeof options.docHeader == \"string\") options.docHeader = { text:options.docHeader };\n\t\textend(options.docHeader, {\n\t\t\tcolor: 0x666666, textAlign:\"right\", order:0\n\t\t});\n\t\thorder.text = options.docHeader.order;\n\t}\n\n\tif (options.docHeaderImage){\n\t\tif(typeof options.docHeaderImage == \"string\") options.docHeaderImage = {url:options.docHeaderImage};\n\t\textend(options.docHeaderImage, {\n\t\t\talign:\"right\", order:1\n\t\t});\n\t\thorder.image = options.docHeaderImage.order;\n\t}\n\n\tif (options.docHeader && horder.image > horder.text)\n\t\tdoc.header({paddingBottom:10}).text(options.docHeader.text, options.docHeader);\n\n\tif (options.docHeaderImage){\n\t\tconst defer = promise.defer();\n\t\tpdfjs.load(options.docHeaderImage.url, function(err, buffer){\n\t\t\tif (!err){\n\t\t\t\tconst img = new pdfjs.Image(buffer);\n\t\t\t\tdoc.header({paddingBottom:10}).image(img, options.docHeaderImage);\n\n\t\t\t\tif(options.docHeader && horder.image < horder.text)\n\t\t\t\t\tdoc.header({paddingBottom:10}).text(options.docHeader.text, options.docHeader);\n\t\t\t}\n\t\t\t//render pdf and show in browser\n\t\t\tdefer.resolve(doc.render());\n\t\t});\n\t\treturn defer;\n\t} else\n\t\treturn promise.resolve(doc.render());\n}\n\nfunction cloneNodeWithStyles(node){\n\tconst clone = node.cloneNode(false);\n\n\tif(node.tagName){\n\t\tconst styles = window.getComputedStyle(node);\n\t\tclone.style.cssText = styles.cssText;\n\t}\n\n\tfor (let i = 0; i < node.childNodes.length; i++)\n\t\tclone.appendChild(cloneNodeWithStyles(node.childNodes[i]));\n\n\treturn clone;\n}","import env from \"../webix/env\";\nimport i18n from \"../webix/i18n\";\n\n\nconst wDate = {\n\tstartOnMonday:false,\n\n\ttoFixed:function(num, ms){\n\t\tif( num<10)\tnum = \"0\"+num;\n\t\tif( ms && num <100 ) num = \"0\"+num;\n\t\treturn num;\n\t},\n\tweekStart:function(date){\n\t\tdate = this.copy(date);\n\n\t\tvar shift=date.getDay();\n\t\tif (this.startOnMonday){\n\t\t\tif (shift===0) shift=6;\n\t\t\telse shift--;\n\t\t}\n\t\treturn this.datePart(this.add(date,-1*shift,\"day\"));\n\t},\n\tmonthStart:function(date){\n\t\tdate = this.copy(date);\n\n\t\tdate.setDate(1);\n\t\treturn this.datePart(date);\n\t},\n\tyearStart:function(date){\n\t\tdate = this.copy(date);\n\n\t\tdate.setMonth(0);\n\t\treturn this.monthStart(date);\n\t},\n\tdayStart:function(date){\n\t\treturn this.datePart(date, true);\n\t},\n\tdateToStr:function(format,utc){\n\t\tif (typeof format == \"function\") return format;\n\n\t\tif(env.strict){\n\t\t\treturn function(date){\n\t\t\t\tif (!date)\n\t\t\t\t\treturn \"\";\n\t\t\t\tif (!date.getMonth)\n\t\t\t\t\tdate = i18n.parseFormatDate(date);\n\n\t\t\t\tvar str = \"\";\n\t\t\t\tvar lastPos = 0;\n\t\t\t\tformat.replace(/%[a-zA-Z]/g,function(s,pos){\n\t\t\t\t\tstr += format.slice(lastPos,pos);\n\t\t\t\t\tvar fn = function(date){\n\t\t\t\t\t\tif( s == \"%d\")  return wDate.toFixed(date.getDate());\n\t\t\t\t\t\tif( s == \"%m\")  return wDate.toFixed((date.getMonth()+1));\n\t\t\t\t\t\tif( s == \"%j\")  return date.getDate();\n\t\t\t\t\t\tif( s == \"%n\")  return (date.getMonth()+1);\n\t\t\t\t\t\tif( s == \"%y\")  return wDate.toFixed(date.getFullYear()%100);\n\t\t\t\t\t\tif( s == \"%Y\")  return date.getFullYear();\n\t\t\t\t\t\tif( s == \"%D\")  return i18n.calendar.dayShort[date.getDay()];\n\t\t\t\t\t\tif( s == \"%l\")  return i18n.calendar.dayFull[date.getDay()];\n\t\t\t\t\t\tif( s == \"%M\")  return i18n.calendar.monthShort[date.getMonth()];\n\t\t\t\t\t\tif( s == \"%F\")  return i18n.calendar.monthFull[date.getMonth()];\n\t\t\t\t\t\tif( s == \"%h\")  return wDate.toFixed((date.getHours()+11)%12+1);\n\t\t\t\t\t\tif( s == \"%g\")  return ((date.getHours()+11)%12+1);\n\t\t\t\t\t\tif( s == \"%G\")  return date.getHours();\n\t\t\t\t\t\tif( s == \"%H\")  return wDate.toFixed(date.getHours());\n\t\t\t\t\t\tif( s == \"%i\")  return wDate.toFixed(date.getMinutes());\n\t\t\t\t\t\tif( s == \"%a\")  return (date.getHours()>11?i18n.pm[0]:i18n.am[0]);\n\t\t\t\t\t\tif( s == \"%A\")  return (date.getHours()>11?i18n.pm[1]:i18n.am[1]);\n\t\t\t\t\t\tif( s == \"%s\")  return wDate.toFixed(date.getSeconds());\n\t\t\t\t\t\tif( s == \"%S\")\treturn wDate.toFixed(date.getMilliseconds(), true);\n\t\t\t\t\t\tif( s == \"%W\")  return wDate.toFixed(Date.getISOWeek(date));\n\t\t\t\t\t\tif( s == \"%c\"){\n\t\t\t\t\t\t\tvar str = date.getFullYear();\n\t\t\t\t\t\t\tstr += \"-\"+wDate.toFixed((date.getMonth()+1));\n\t\t\t\t\t\t\tstr += \"-\"+wDate.toFixed(date.getDate());\n\t\t\t\t\t\t\tstr += \"T\";\n\t\t\t\t\t\t\tstr += wDate.toFixed(date.getHours());\n\t\t\t\t\t\t\tstr += \":\"+wDate.toFixed(date.getMinutes());\n\t\t\t\t\t\t\tstr += \":\"+wDate.toFixed(date.getSeconds());\n\t\t\t\t\t\t\treturn str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn s;\n\t\t\t\t\t};\n\t\t\t\t\tstr += fn(date);\n\t\t\t\t\tlastPos = pos + 2;\n\t\t\t\t});\n\t\t\t\tstr += format.slice(lastPos,format.length);\n\t\t\t\treturn str;\n\t\t\t};\n\n\t\t}\n\n\t\tformat=format.replace(/%[a-zA-Z]/g,function(a){\n\t\t\tswitch(a){\n\t\t\t\tcase \"%d\": return \"\\\"+wDate.toFixed(date.getDate())+\\\"\";\n\t\t\t\tcase \"%m\": return \"\\\"+wDate.toFixed((date.getMonth()+1))+\\\"\";\n\t\t\t\tcase \"%j\": return \"\\\"+date.getDate()+\\\"\";\n\t\t\t\tcase \"%n\": return \"\\\"+(date.getMonth()+1)+\\\"\";\n\t\t\t\tcase \"%y\": return \"\\\"+wDate.toFixed(date.getFullYear()%100)+\\\"\"; \n\t\t\t\tcase \"%Y\": return \"\\\"+date.getFullYear()+\\\"\";\n\t\t\t\tcase \"%D\": return \"\\\"+i18n.calendar.dayShort[date.getDay()]+\\\"\";\n\t\t\t\tcase \"%l\": return \"\\\"+i18n.calendar.dayFull[date.getDay()]+\\\"\";\n\t\t\t\tcase \"%M\": return \"\\\"+i18n.calendar.monthShort[date.getMonth()]+\\\"\";\n\t\t\t\tcase \"%F\": return \"\\\"+i18n.calendar.monthFull[date.getMonth()]+\\\"\";\n\t\t\t\tcase \"%h\": return \"\\\"+wDate.toFixed((date.getHours()+11)%12+1)+\\\"\";\n\t\t\t\tcase \"%g\": return \"\\\"+((date.getHours()+11)%12+1)+\\\"\";\n\t\t\t\tcase \"%G\": return \"\\\"+date.getHours()+\\\"\";\n\t\t\t\tcase \"%H\": return \"\\\"+wDate.toFixed(date.getHours())+\\\"\";\n\t\t\t\tcase \"%i\": return \"\\\"+wDate.toFixed(date.getMinutes())+\\\"\";\n\t\t\t\tcase \"%a\": return \"\\\"+(date.getHours()>11?i18n.pm[0]:i18n.am[0])+\\\"\";\n\t\t\t\tcase \"%A\": return \"\\\"+(date.getHours()>11?i18n.pm[1]:i18n.am[1])+\\\"\";\n\t\t\t\tcase \"%s\": return \"\\\"+wDate.toFixed(date.getSeconds())+\\\"\";\n\t\t\t\tcase \"%S\": return \"\\\"+wDate.toFixed(date.getMilliseconds(), true)+\\\"\";\n\t\t\t\tcase \"%W\": return \"\\\"+wDate.toFixed(wDate.getISOWeek(date))+\\\"\";\n\t\t\t\tcase \"%c\":\n\t\t\t\t\tvar str = \"\\\"+date.getFullYear()+\\\"\";\n\t\t\t\t\tstr += \"-\\\"+wDate.toFixed((date.getMonth()+1))+\\\"\";\n\t\t\t\t\tstr += \"-\\\"+wDate.toFixed(date.getDate())+\\\"\";\n\t\t\t\t\tstr += \"T\";\n\t\t\t\t\tstr += \"\\\"+wDate.toFixed(date.getHours())+\\\"\";\n\t\t\t\t\tstr += \":\\\"+wDate.toFixed(date.getMinutes())+\\\"\";\n\t\t\t\t\tstr += \":\\\"+wDate.toFixed(date.getSeconds())+\\\"\";\n\t\t\t\t\tif(utc === true)\n\t\t\t\t\t\tstr += \"Z\";\n\t\t\t\t\treturn str;\n\n\t\t\t\tdefault: return a;\n\t\t\t}\n\t\t});\n\t\tif (utc===true) format=format.replace(/date\\.get/g,\"date.getUTC\");\n\t\tconst temp = new Function(\"date\", \"i18n\", \"wDate\", \"if (!date) return ''; if (!date.getMonth) date=i18n.parseFormatDate(date);  return \\\"\"+format+\"\\\";\");\n\t\treturn function(v){ return temp(v, i18n, wDate); };\n\t},\n\tstrToDate:function(format,utc){\n\t\tif (typeof format == \"function\") return format;\n\n\t\tvar mask=format.match(/%[a-zA-Z]/g);\n\t\tvar splt=\"var temp=date.split(/[\\\\s\\\\./\\\\-\\\\:\\\\,]+/g); if(!temp.join('')){return ''}\";\n\t\tvar i,t,s;\n\n\t\tif(!i18n.calendar.monthShort_hash){\n\t\t\ts = i18n.calendar.monthShort;\n\t\t\tt = i18n.calendar.monthShort_hash = {};\n\t\t\tfor (i = 0; i < s.length; i++)\n\t\t\t\tt[s[i]]=i;\n\n\t\t\ts = i18n.calendar.monthFull;\n\t\t\tt = i18n.calendar.monthFull_hash = {};\n\t\t\tfor (i = 0; i < s.length; i++)\n\t\t\t\tt[s[i]]=i;\n\t\t}\n\n\t\tif(env.strict){\n\t\t\treturn function(date){\n\t\t\t\tif (!date) return \"\";\n\t\t\t\tif (typeof date == \"object\") return date;\n\t\t\t\tvar temp=date.split(/[\\s./\\-:,]+/g);\n\n\t\t\t\tif(!temp.join(\"\"))\n\t\t\t\t\treturn \"\";\n\n\t\t\t\tvar set=[0,0,1,0,0,0,0];\n\t\t\t\tfor (i=0; i<mask.length; i++){\n\t\t\t\t\tvar a = mask[i];\n\t\t\t\t\tif( a ==  \"%y\")\n\t\t\t\t\t\tset[0]=temp[i]*1+(temp[i]>30?1900:2000);\n\t\t\t\t\telse if( a ==  \"%Y\"){\n\t\t\t\t\t\tset[0]=(temp[i]||0)*1; if (set[0]<30) set[0]+=2000;\n\t\t\t\t\t}\n\t\t\t\t\telse if( a == \"%n\" || a == \"%m\")\n\t\t\t\t\t\tset[1]=(temp[i]||1)-1;\n\t\t\t\t\telse if( a ==  \"%M\")\n\t\t\t\t\t\tset[1]=i18n.calendar.monthShort_hash[temp[i]]||0;\n\t\t\t\t\telse if( a ==  \"%F\")\n\t\t\t\t\t\tset[1]=i18n.calendar.monthFull_hash[temp[i]]||0;\n\t\t\t\t\telse if( a == \"%j\" || a == \"%d\")\n\t\t\t\t\t\tset[2]=temp[i]||1;\n\t\t\t\t\telse if( a == \"%g\" || a == \"%G\" || a == \"%h\" || a == \"%H\")\n\t\t\t\t\t\tset[3]=temp[i]||0;\n\t\t\t\t\telse if( a == \"%a\")\n\t\t\t\t\t\tset[3]=set[3]%12+((temp[i]||\"\")==i18n.am[0]?0:12);\n\t\t\t\t\telse if( a == \"%A\")\n\t\t\t\t\t\tset[3]=set[3]%12+((temp[i]||\"\")==i18n.am[1]?0:12);\n\t\t\t\t\telse if( a ==  \"%i\")\n\t\t\t\t\t\tset[4]=temp[i]||0;\n\t\t\t\t\telse if( a ==  \"%s\")\n\t\t\t\t\t\tset[5]=temp[i]||0;\n\t\t\t\t\telse if( a ==  \"%S\")\n\t\t\t\t\t\tset[6]=temp[i]||0;\n\t\t\t\t\telse if( a ==  \"%c\"){\n\t\t\t\t\t\tvar reg = /(\\d+)-(\\d+)-(\\d+)T(\\d+):(\\d+):(\\d+)(\\+.*|)/g;\n\t\t\t\t\t\tvar res = reg.exec(date);\n\t\t\t\t\t\tset[0]= (res[1]||0)*1; if (set[0]<30) set[0]+=2000;\n\t\t\t\t\t\tset[1]= (res[2]||1)-1;\n\t\t\t\t\t\tset[2]= res[3]||1;\n\t\t\t\t\t\tset[3]= res[4]||0;\n\t\t\t\t\t\tset[4]= res[5]||0;\n\t\t\t\t\t\tset[5]= res[6]||0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(utc)\n\t\t\t\t\treturn new Date(Date.UTC(set[0],set[1],set[2],set[3],set[4],set[5], set[6]));\n\t\t\t\treturn new Date(set[0],set[1],set[2],set[3],set[4],set[5], set[6]);\n\t\t\t};\n\t\t}\n\n\t\tfor (i=0; i<mask.length; i++){\n\t\t\tswitch(mask[i]){\n\t\t\t\tcase \"%j\":\n\t\t\t\tcase \"%d\": splt+=\"set[2]=temp[\"+i+\"]||1;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%n\":\n\t\t\t\tcase \"%m\": splt+=\"set[1]=(temp[\"+i+\"]||1)-1;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%y\": splt+=\"set[0]=temp[\"+i+\"]*1+(temp[\"+i+\"]>30?1900:2000);\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%g\":\n\t\t\t\tcase \"%G\":\n\t\t\t\tcase \"%h\": \n\t\t\t\tcase \"%H\":\n\t\t\t\t\tsplt+=\"set[3]=temp[\"+i+\"]||0;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%i\":\n\t\t\t\t\tsplt+=\"set[4]=temp[\"+i+\"]||0;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%Y\":  splt+=\"set[0]=(temp[\"+i+\"]||0)*1; if (set[0]<30) set[0]+=2000;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%a\":\n\t\t\t\t\tsplt+= \"set[3]=set[3]%12+(temp[\"+i+\"]==i18n.am[0]?0:12);\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%A\":\n\t\t\t\t\tsplt+= \"set[3]=set[3]%12+(temp[\"+i+\"]==i18n.am[1]?0:12);\";\n\t\t\t\t\tbreak;\t\t\t\t\t\n\t\t\t\tcase \"%s\":  splt+=\"set[5]=temp[\"+i+\"]||0;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%S\":  splt+=\"set[6]=temp[\"+i+\"]||0;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%M\":  splt+=\"set[1]=i18n.calendar.monthShort_hash[temp[\"+i+\"]]||0;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%F\":  splt+=\"set[1]=i18n.calendar.monthFull_hash[temp[\"+i+\"]]||0;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%c\":\n\t\t\t\t\tsplt+= \"var res = date.split('T');\";\n\t\t\t\t\tsplt+= \"if(res[0]){ var d = res[0].split('-');\";\n\t\t\t\t\tsplt+= \"set[0]= (d[0]||0)*1; if (set[0]<30) set[0]+=2000;\";\n\t\t\t\t\tsplt+= \"set[1]= (d[1]||1)-1;\";\n\t\t\t\t\tsplt+= \"set[2]= d[2]||1;}\";\n\t\t\t\t\tsplt+= \"if(res[1]){ var t = res[1].split(':');\";\n\t\t\t\t\tsplt+= \"set[3]= t[0]||0;\";\n\t\t\t\t\tsplt+= \"set[4]= t[1]||0;\";\n\t\t\t\t\tsplt+= \"set[5]= parseInt(t[2])||0;}\";\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar code =\"set[0],set[1],set[2],set[3],set[4],set[5],set[6]\";\n\t\tif (utc) code =\" Date.UTC(\"+code+\")\";\n\t\tconst temp = new Function(\"date\", \"i18n\", \"if (!date) return ''; if (typeof date == 'object') return date; var set=[0,0,1,0,0,0,0]; \"+splt+\" return new Date(\"+code+\");\");\n\t\treturn function(v){ return temp(v, i18n ); };\n\t},\n\t\t\n\tgetISOWeek: function(ndate) {\n\t\tif(!ndate) return false;\n\t\tvar nday = ndate.getDay();\n\t\tif (nday === 0) {\n\t\t\tnday = 7;\n\t\t}\n\t\tvar first_thursday = new Date(ndate.valueOf());\n\t\tfirst_thursday.setDate(ndate.getDate() + (4 - nday));\n\t\tvar year_number = first_thursday.getFullYear(); // year of the first Thursday\n\t\tvar ordinal_date = Math.floor( (first_thursday.getTime() - new Date(year_number, 0, 1).getTime()) / 86400000); //ordinal date of the first Thursday - 1 (so not really ordinal date)\n\t\tvar weekNumber = 1 + Math.floor( ordinal_date / 7);\t\n\t\treturn weekNumber;\n\t},\n\t\n\tgetUTCISOWeek: function(ndate){\n\t\treturn this.getISOWeek(ndate);\n\t},\n\t_correctDate: function(d,d0,inc,checkFunc){\n\t\tif(!inc)\n\t\t\treturn;\n\t\tvar incorrect = checkFunc(d,d0);\n\t\tif(incorrect){\n\t\t\tvar i = (inc>0?1:-1);\n\n\t\t\twhile(incorrect){\n\t\t\t\td.setHours(d.getHours()+i);\n\t\t\t\tincorrect = checkFunc(d,d0);\n\t\t\t\ti += (inc>0?1:-1);\n\t\t\t}\n\t\t}\n\t},\n\tadd:function(date,inc,mode,copy){\n\t\tif (copy) date = this.copy(date);\n\t\tvar d = wDate.copy(date);\n\t\tswitch(mode){\n\t\t\tcase \"day\":\n\t\t\t\tdate.setDate(date.getDate()+inc);\n\t\t\t\tthis._correctDate(date,d,inc,function(d,d0){\n\t\t\t\t\treturn \twDate.datePart(d0,true).valueOf()== wDate.datePart(d,true).valueOf();\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"week\":\n\t\t\t\tdate.setDate(date.getDate()+7*inc);\n\t\t\t\tthis._correctDate(date,d,7*inc,function(d,d0){\n\t\t\t\t\treturn \twDate.datePart(d0,true).valueOf()== wDate.datePart(d,true).valueOf();\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"month\":\n\t\t\t\tdate.setMonth(date.getMonth()+inc);\n\t\t\t\tthis._correctDate(date,d,inc,function(d,d0){\n\t\t\t\t\treturn \td0.getMonth() == d.getMonth() && d0.getYear() == d.getYear();\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"quarter\":\n\t\t\t\tdate.setMonth(date.getMonth() + inc * 3);\n\t\t\t\tthis._correctDate(date,d,inc,function(d,d0){\n\t\t\t\t\treturn \td0.getMonth() == d.getMonth() && d0.getYear() == d.getYear();\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"year\":\n\t\t\t\tdate.setYear(date.getFullYear()+inc);\n\t\t\t\tthis._correctDate(date,d,inc,function(d,d0){\n\t\t\t\t\treturn \td0.getFullYear() == d.getFullYear();\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"hour\":\n\t\t\t\tdate.setHours(date.getHours()+inc);\n\t\t\t\tthis._correctDate(date,d,inc,function(d,d0){\n\t\t\t\t\treturn \td0.getHours() == d.getHours() && Date.datePart(d0,true)== Date.datePart(d,true);\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"minute\": \tdate.setMinutes(date.getMinutes()+inc); break;\n\t\t\tdefault:\n\t\t\t\twDate.add[mode](date, inc, mode);\n\t\t\t\tbreak;\n\t\t}\n\t\treturn date;\n\t},\n\tdatePart:function(date, copy){\n\t\tif (copy) date = this.copy(date);\n\n\t\t// workaround for non-existent hours\n\t\tvar d = this.copy(date);\n\t\td.setHours(0);\n\t\tif(d.getDate()!=date.getDate()){\n\t\t\tdate.setHours(1);\n\t\t}\n\t\telse{\n\t\t\tdate.setHours(0);\n\t\t}\n\n\t\tdate.setMinutes(0);\n\t\tdate.setSeconds(0);\n\t\tdate.setMilliseconds(0);\n\t\treturn date;\n\t},\n\ttimePart:function(date, copy){\n\t\tif (copy) date = this.copy(date);\n\t\treturn (date.valueOf()/1000 - date.getTimezoneOffset()*60)%86400;\n\t},\n\tcopy:function(date){\n\t\treturn new Date(date.valueOf());\n\t},\n\tequal:function(a,b){\n\t\tif (!a || !b) return false;\n\t\treturn a.valueOf() === b.valueOf();\n\t},\n\tisHoliday:function(day){ \n\t\tday = day.getDay();\n\t\tif (day === 0 || day==6) return \"webix_cal_event\"; \n\t}\n};\n\nexport default wDate;","import en from \"../i18n/en\";\nimport i18n from \"./i18n\";\n\nimport wDate from \"../core/date\";\nimport Number from \"../core/number\";\n\nimport {copy, isArray} from \"../webix/helpers\";\nimport template from \"./template\";\n\n\nfunction extend(base,source){\n\tfor (let method in source){\n\t\tif(typeof(source[method]) == \"object\" && !isArray(source[method])){\n\t\t\tif(!base[method]){\n\t\t\t\tbase[method] = {};\n\t\t\t}\n\t\t\textend(base[method],source[method]);\n\t\t}\n\t\telse\n\t\t\tbase[method] = source[method];\n\t}\n}\n\nconst helpers = [\"fullDateFormat\", \"timeFormat\", \"dateFormat\", \"longDateFormat\", \"parseFormat\", \"parseTimeFormat\"];\n\ni18n.setLocale = function(locale){\n\tif (typeof locale == \"string\"){\n\t\ti18n.locale = locale;\n\t\tlocale = i18n.locales[locale];\n\t}\n\tif (locale){\n\t\tconst origin = copy(en);\n\t\tlocale.priceSettings  = copy(locale.priceSettings || locale);\n\t\textend(origin, locale);\n\t\textend(i18n, origin);\n\t\tdelete i18n.calendar.monthShort_hash;\n\t\tdelete i18n.calendar.monthFull_hash;\n\t}\n\tfor( let i=0; i<helpers.length; i++){\n\t\tconst key = helpers[i];\n\t\tconst utc = i18n[key+\"UTC\"];\n\t\ti18n[key+\"Str\"] = wDate.dateToStr(i18n[key], utc);\n\t\ti18n[key+\"Date\"] = wDate.strToDate(i18n[key], utc);\n\t}\n\n\tconst _price_format = template(i18n.price);\n\tconst _price_settings = i18n.priceSettings || i18n;\n\n\ti18n.intFormat = Number.numToStr({ groupSize: i18n.groupSize, groupDelimiter: i18n.groupDelimiter, decimalSize: 0});\n\ti18n.priceFormat = function(value){\n\t\tconst sign = value < 0;\n\t\tif(sign)\n\t\t\tvalue = Math.abs(value);\n\n\t\tvalue = Number.format(value, _price_settings);\n\n\t\tif(sign){\n\t\t\tswitch(_price_settings.minusPosition){\n\t\t\t\tcase \"before\":\n\t\t\t\t\treturn _price_settings.minusSign + _price_format(value);\n\t\t\t\tcase \"parentheses\":\n\t\t\t\t\treturn _price_settings.minusSign[0] + _price_format(value) + _price_settings.minusSign[1];\n\t\t\t\tcase \"after\":\n\t\t\t\t\tvalue += _price_settings.minusSign;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"inside\":\n\t\t\t\t\tvalue = _price_settings.minusSign + value;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn _price_format(value);\n\t};\n\ti18n.numberFormat = Number.format;\n};\n\ni18n.locales={ \"en-US\" : en };\ni18n.setLocale(\"en-US\");\n\nexport default i18n;","import {ajax} from \"../load/ajax\";\nimport promise from \"../thirdparty/promiz\";\nimport {bind} from \"../webix/helpers\";\nimport {callEvent} from \"../webix/customevents\";\n\n\nvar error_key = \"__webix_remote_error\";\n\nfunction RemoteContext(url, config){\n\tthis._proxy = {};\n\tthis._queue = [];\n\tthis._url = url;\n\tthis._key = \"\";\n\n\tif (config)\n\t\tthis._process(config);\n\telse\n\t\tthis._ready = ajax(url)\n\t\t\t.then(function(data){\n\t\t\t\treturn data.text();\n\t\t\t})\n\t\t\t.then(bind(function(text){\n\t\t\t\ttext = text.split(\"/*api*/\")[1];\n\t\t\t\tthis._process(JSON.parse(text));\n\t\t\t\treturn this._proxy;\n\t\t\t}, this));\n}\nRemoteContext.prototype = {\n\t_process:function(config){\n\t\tif (config.$key)\n\t\t\tthis._key = config.$key;\n\t\tif (config.$vars)\n\t\t\tfor (var key in config.$vars)\n\t\t\t\tthis._proxy[key] = config.$vars[key];\n\n\t\tthis._parse(config, this._proxy, \"\");\n\t},\n\t_parse:function(api, obj, prefix){\n\t\tfor (var key in api){\n\t\t\tif (key === \"$key\" || key === \"$vars\") continue;\n\t\t\tvar val = api[key];\n\t\t\tif (typeof val == \"object\"){\n\t\t\t\tvar sub = obj[key] = {};\n\t\t\t\tthis._parse(val, sub, prefix+key+\".\");\n\t\t\t} else\n\t\t\t\tobj[key] = this._proxy_call(this, prefix+key);\n\t\t}\n\t},\n\t_call:function(name, args){\n\t\tvar def = this._deffer(this, name, args);\n\t\tthis._queue.push(def);\n\t\tthis._start_queue();\n\t\treturn def;\n\t},\n\t_start_queue:function(){\n\t\tif (!this._timer)\n\t\t\tthis._timer = setTimeout(bind(this._run_queue, this), 1);\n\t},\n\t_run_queue:function(){\n\t\tvar data = [], defs = this._queue;\n\t\tfor (var i=0; i<this._queue.length; i++){\n\t\t\tvar def = this._queue[i];\n\t\t\tif (def.$sync){\n\t\t\t\tdefs.splice(i,1); i--;\n\t\t\t} else\n\t\t\t\tdata.push({ name: def.$name, args: def.$args });\t\n\t\t}\n\n\t\tif (defs.length){\n\t\t\tvar request = ajax();\n\t\t\tvar pack = this._pack(data);\n\t\t\tcallEvent(\"onBeforeRemoteCall\", [request, pack, {}]);\n\t\t\tvar promise = request.post(this._url, pack)\n\t\t\t\t.then(function(response){\n\t\t\t\t\tvar data = response.json();\n\t\t\t\t\tvar results = data.data;\n\t\t\t\t\tfor (var i=0; i<results.length; i++){\n\t\t\t\t\t\tlet res = results[i];\n\t\t\t\t\t\tlet error = results[i] && results[i][error_key];\n\t\t\t\t\t\tif (error){\n\t\t\t\t\t\t\tcallEvent(\"onRemoteError\", [error]);\n\t\t\t\t\t\t\tdefs[i].reject(error);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdefs[i].resolve(res);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\t\n\t\t\t\t}, function(res){\n\t\t\t\t\tfor (var i=0; i<defs.length; i++)\n\t\t\t\t\t\tdefs[i].reject(res);\n\t\t\t\t\tthrow res;\n\t\t\t\t});\n\t\t\tcallEvent(\"onAfterRemoteCall\", [promise]);\n\t\t}\n\n\t\tthis._queue = [];\n\t\tthis._timer = null;\n\t},\n\t_sync:function(){\n\t\tvar value = null;\n\t\tthis.$sync = true;\n\t\tvar data = [{ name: this.$name, args: this.$args }];\n\n\t\ttry {\n\t\t\tvar request = ajax();\n\t\t\tvar pack = this.$context._pack(data);\n\t\t\tcallEvent(\"onBeforeRemoteCall\", [request, pack, { sync: true }]);\n\t\t\tvar xhr = request.sync().post(this.$context._url, pack);\n\t\t\tcallEvent(\"onAfterRemoteCall\", [null]);\n\t\t\tvalue = JSON.parse(xhr.responseText).data[0];\n\t\t\tif (value[error_key])\n\t\t\t\tvalue = null;\n\t\t} catch(e){} //eslint-disable-line\n\n\t\treturn value;\n\t},\n\t_deffer:function(master, name, args){\n\t\tvar pr = promise.defer();\n\t\tpr.sync = master._sync;\n\t\tpr.$name = name;\n\t\tpr.$args = args;\n\t\tpr.$context = this;\n\n\t\treturn pr;\n\t},\n\t_proxy_call:function(master, name){\n\t\treturn function(){\n\t\t\treturn master._call(name, [].slice.call(arguments));\n\t\t};\n\t},\n\t_getProxy:function(){\n\t\treturn this._ready || this._proxy;\n\t},\n\t_pack:function(obj){\n\t\treturn {\n\t\t\tkey: this._key,\n\t\t\tpayload:obj\n\t\t};\n\t}\n};\n\nfunction getApi(url, config){\n\tvar ctx = new RemoteContext(url, config);\n\tvar proxy = ctx._getProxy();\n\tfor (var key in proxy)\n\t\tremote[key] = proxy[key];\n\n\treturn proxy;\n}\n\nconst remote = function(url, config){\n\tif (typeof url === \"object\"){\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tconfig = url;\n\t\turl = scripts[scripts.length - 1].src;\n\t\treturn getApi(url, config);\n\t} else \n\t\treturn getApi(url, config);\n};\n\nexport default remote;","/*German (Germany) locale*/\nconst de = {\n\tgroupDelimiter:\".\",\n\tgroupSize:3,\n\tdecimalDelimiter:\",\",\n\tdecimalSize:2,\n\tminusPosition:\"before\",\n\tminusSign:\"-\",\n\n\tdateFormat:\"%d.%n.%Y\",\n\ttimeFormat:\"%H:%i\",\n\tlongDateFormat:\"%j. %F %Y\",\n\tfullDateFormat:\"%j. %F %Y %H:%i\",\n\tam:null,\n\tpm:null,\n\tprice:\"{obj} €\",\n\tpriceSettings:{\n\t\tgroupDelimiter:\".\",\n\t\tgroupSize:3,\n\t\tdecimalDelimiter:\",\",\n\t\tdecimalSize:2,\n\t\tminusPosition:\"before\",\n\t\tminusSign:\"-\"\n\t},\n\tcalendar:{\n\t\tmonthFull:[\"Januar\",\"Februar\",\"März\",\"April\",\"Mai\",\"Juni\",\"Juli\",\"August\",\"September\",\"Oktober\",\"November\",\"Dezember\"],\n\t\tmonthShort:[\"Jan\",\"Feb\",\"Mrz\",\"Apr\",\"Mai\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Okt\",\"Nov\",\"Dez\"],\n\t\tdayFull:[\"Sonntag\",\"Montag\",\"Dienstag\",\"Mittwoch\",\"Donnerstag\",\"Freitag\",\"Samstag\"],\n\t\tdayShort:[\"So\",\"Mo\",\"Di\",\"Mi\",\"Do\",\"Fr\",\"Sa\"],\n\t\thours: \"Stunden\",\n\t\tminutes: \"Minuten\",\n\t\tdone:\"Fertig\",\n\t\tclear: \"Entfernen\",\n\t\ttoday: \"Heute\"\n\t},\n\n\tdataExport:{\n\t\tpage:\"Seite\",\n\t\tof:\"von\"\n\t},\n\tPDFviewer:{\n\t\tof:\"von\",\n\t\tautomaticZoom:\"Automatisch Zoom\",\n\t\tactualSize:\"Aktuelles Ausmaß\",\n\t\tpageFit:\"Seite Ausmaß\",\n\t\tpageWidth:\"Seite Breite\",\n\t\tpageHeight:\"Seite Höhe\",\n\t\tenterPassword:\"Passwort eingeben\",\n\t\tpasswordError:\"Falsches passwort\"\n\t},\n\taria:{\n\t\tcalendar:\"Kalender\",\n\t\tincreaseValue:\"Wert erhöhen\",\n\t\tdecreaseValue:\"Wert verringern\",\n\t\tnavMonth:[\"Vorheriger Monat\", \"Nächsten Monat\"],\n\t\tnavYear:[\"Vorheriges Jahr\", \"Nächstes Jahr\"],\n\t\tnavDecade:[\"Zurück Jahrzehnt\", \"Als nächstes Jahrzehnt\"],\n\t\tdateFormat:\"%j. %F %Y\",\n\t\tmonthFormat:\"%F %Y\",\n\t\tyearFormat:\"%Y\",\n\t\thourFormat:\"Stunden: %H\",\n\t\tminuteFormat:\"Minuten: %i\",\n\t\tremoveItem:\"Element entfernen\",\n\t\tpages:[\"Erste Seite\", \"Vorherige Seite\", \"Folgeseite\", \"Letzte Seite\"],\n\t\tpage:\"Seite\",\n\t\theadermenu:\"Titelmenü\",\n\t\topenGroup:\"Öffnen Spaltengruppe \",\n\t\tcloseGroup:\"Schließen Spaltengruppe \",\n\t\tcloseTab:\"Tab schließen\",\n\t\tshowTabs:\"Weitere Tabs\",\n\t\tresetTreeMap:\"Zurück zur ursprünglichen Ansicht\",\n\t\tnavTreeMap:\"Aufleveln\",\n\t\tnextTab:\"Weiter tab\",\n\t\tprevTab:\"Zurück tab\",\n\t\tmultitextSection:\"Element hinzufügen\",\n\t\tmultitextextraSection:\"Element entfernen\",\n\t\tshowChart:\"Chart anzeigen\",\n\t\thideChart:\"Chart verstecken\",\n\t\tresizeChart:\"Chart Größe ändern\"\n\t},\n\trichtext:{\n\t\tunderline: \"Unterstreichen\",\n\t\tbold: \"Fettgedruckt\",\n\t\titalic: \"Kursiv\"\n\t},\n\tcombo:{\n\t\tselect:\"Auswählen\",\n\t\tselectAll:\"Alles auswählen\",\n\t\tunselectAll:\"Alles widerrufen\"\n\t},\n\tmessage:{\n\t\tok:\"OK\",\n\t\tcancel:\"Abbrechen\"\n\t},\n\tcomments:{\n\t\tsend: \"Absenden\",\n\t\tconfirmMessage: \"Der Kommentar wird entfernt. Sind Sie sicher?\",\n\t\tedit: \"Redigieren\",\n\t\tremove: \"Löschen\",\n\t\tplaceholder: \"Geben Sie hier ein..\",\n\t\tmoreComments:\"Mehr Kommentare\"\n\t},\n\tfilter:{\n\t\tless: \"weniger\",\n\t\tlessOrEqual: \"weniger oder gleich\",\n\t\tgreater: \"mehr\",\n\t\tgreaterOrEqual: \"größer oder gleich\",\n\t\tcontains: \"enthält\",\n\t\tnotContains: \"nicht enthält\",\n\t\tequal: \"gleich\",\n\t\tnotEqual: \"ungleich\",\n\t\tbeginsWith: \"beginnt mit\",\n\t\tnotBeginsWith: \"nicht beginnt mit\",\n\t\tendsWith: \"endet mit\",\n\t\tnotEndsWith: \"nicht endet mit\",\n\t\tbetween: \"zwischen\",\n\t\tnotBetween: \"nicht zwischen\"\n\t},\n\ttimeboard:{\n\t\tseconds: \"Sekunden\"\n\t}\n};\n\nexport default de;","/*Spanish (Spain, International Sort) locale*/\nconst es = {\n\tgroupDelimiter:\".\",\n\tgroupSize:3,\n\tdecimalDelimiter:\",\",\n\tdecimalSize:2,\n\tminusPosition:\"before\",\n\tminusSign:\"-\",\n\tdateFormat:\"%d/%n/%Y\",\n\ttimeFormat:\"%G:%i\",\n\tlongDateFormat:\"%d %F %Y\",\n\tfullDateFormat:\"%d %F %Y %G:%i\",\n\tam:null,\n\tpm:null,\n\tprice:\"{obj} €\",\n\tpriceSettings:{\n\t\tgroupDelimiter:\".\",\n\t\tgroupSize:3,\n\t\tdecimalDelimiter:\",\",\n\t\tdecimalSize:2,\n\t\tminusPosition:\"before\",\n\t\tminusSign:\"-\"\n\t},\n\tcalendar:{\n\t\tmonthFull:[\"enero\",\"febrero\",\"marzo\",\"abril\",\"mayo\",\"junio\",\"julio\",\"agosto\",\"septiembre\",\"octubre\",\"noviembre\",\"diciembre\"],\n\t\tmonthShort:[\"ene\",\"feb\",\"mar\",\"abr\",\"may\",\"jun\",\"jul\",\"ago\",\"sep\",\"oct\",\"nov\",\"dic\"],\n\t\tdayFull:[\"domingo\",\"lunes\",\"martes\",\"miércoles\",\"jueves\",\"viernes\",\"sábado\"],\n\t\tdayShort:[\"dom\",\"lun\",\"mar\",\"mié\",\"jue\",\"vie\",\"sáb\"],\n\t\thours: \"Horas\",\n\t\tminutes: \"Minutos\",\n\t\tdone:\"Listo\",\n\t\tclear: \"Reinicio\",\n\t\ttoday: \"Hoy\"\n\t},\n\n\tdataExport:{\n\t\tpage:\"Página\",\n\t\tof:\"de\"\n\t},\n\tPDFviewer:{\n\t\tof:\"de\",\n\t\tautomaticZoom:\"Zoom automático\",\n\t\tactualSize:\"Tamaño real\",\n\t\tpageFit:\"Tamaño de página\",\n\t\tpageWidth:\"Ancho de página\",\n\t\tpageHeight:\"Altura de la página\",\n\t\tenterPassword:\"Introduzca la contraseña\",\n\t\tpasswordError:\"Contraseña incorrecta\"\n\t},\n\taria:{\n\t\tcalendar:\"Сalendario\",\n\t\tincreaseValue:\"Aumentar el valor\",\n\t\tdecreaseValue:\"Disminuye el valor\",\n\t\tnavMonth:[\"Mes anterior\", \"Próximo mes\"],\n\t\tnavYear:[\"Año anterior\", \"Próximo año\"],\n\t\tnavDecade:[\"Década anterior\", \"Próxima década\"],\n\t\tdateFormat:\"%d %F %Y\",\n\t\tmonthFormat:\"%F %Y\",\n\t\tyearFormat:\"%Y\",\n\t\thourFormat:\"Horas: %G\",\n\t\tminuteFormat:\"Minutos: %i\",\n\t\tremoveItem:\"Retire el elemento\",\n\t\tpages:[\"Primera página\", \"Pagina anterior\", \"Siguiente página\", \"Última página\"],\n\t\tpage:\"Página\",\n\t\theadermenu:\"Menú de títulos\",\n\t\topenGroup:\"Grupo de columnas abiertas\",\n\t\tcloseGroup:\"Primer grupo de columnas\",\n\t\tcloseTab:\"Cerrar tab\",\n\t\tshowTabs:\"Mostrar más tabs\",\n\t\tresetTreeMap:\"Volver a la vista original\",\n\t\tnavTreeMap:\"Elevar a mismo nivel\",\n\t\tnextTab:\"Siguiente tab\",\n\t\tprevTab:\"Tab anterior\",\n\t\tmultitextSection:\"Añadir elemento\",\n\t\tmultitextextraSection:\"Retire el elemento\",\n\t\tshowChart:\"Espectáculo chart\",\n\t\thideChart:\"Esconder chart\",\n\t\tresizeChart:\"Cambiar el tamaño el chart\"\n\t},\n\trichtext:{\n\t\tunderline: \"Subrayar\",\n\t\tbold: \"Negrita\",\n\t\titalic: \"Itálico\"\n\t},\n\tcombo:{\n\t\tselect:\"Seleccionar\",\n\t\tselectAll:\"Seleccionar todo\",\n\t\tunselectAll:\"Deselecciona todo\"\n\t},\n\tmessage:{\n\t\tok:\"OK\",\n\t\tcancel:\"Cancelar\"\n\t},\n\tcomments:{\n\t\tsend: \"Enviar\",\n\t\tconfirmMessage: \"El comentario será eliminado. Estás seguro?\",\n\t\tedit: \"Corregir\",\n\t\tremove: \"Suprimir\",\n\t\tplaceholder: \"Escriba aquí..\",\n\t\tmoreComments:\"Más comentarios\"\n\t},\n\tfilter:{\n\t\tless: \"menos\",\n\t\tlessOrEqual: \"menor o igual\",\n\t\tgreater: \"mayor\",\n\t\tgreaterOrEqual: \"mayor o igual\",\n\t\tcontains: \"contiene\",\n\t\tnotContains: \"not contiene\",\n\t\tequal: \"igual\",\n\t\tnotEqual: \"no es igual\",\n\t\tbeginsWith: \"comienza con\",\n\t\tnotBeginsWith: \"no comienza con\",\n\t\tendsWith: \"termina con\",\n\t\tnotEndsWith: \"no termina con\",\n\t\tbetween: \"entre\",\n\t\tnotBetween: \"no entre\"\n\t},\n\ttimeboard:{\n\t\tseconds: \"segundos\"\n\t}\n};\n\nexport default es;","/*Chinese (Simplified, PRC) locale*/\nconst zh = {\n\tgroupDelimiter:\",\",\n\tgroupSize:3,\n\tdecimalDelimiter:\".\",\n\tdecimalSize:2,\n\tminusPosition:\"before\",\n\tminusSign:\"-\",\n\tdateFormat:\"%Y/%m/%j\",\n\ttimeFormat:\"%G:%i\",\n\tlongDateFormat:\"%Y'年'%m'月'%j'日'\",\n\tfullDateFormat:\"%Y'年'%m'月'%j'日' %G:%i\",\n\tam:[\"上午\",\"上午\"],\n\tpm:[\"下午\",\"下午\"],\n\tprice:\"¥{obj}\",\n\tpriceSettings:{\n\t\tgroupDelimiter:\",\",\n\t\tgroupSize:3,\n\t\tdecimalDelimiter:\".\",\n\t\tdecimalSize:2,\n\t\tminusPosition:\"inside\",\n\t\tminusSign:\"-\"\n\t},\n\tcalendar:{\n\t\tmonthFull:[\"一月\",\"二月\",\"三月\",\"四月\",\"五月\",\"六月\",\"七月\",\"八月\",\"九月\",\"十月\",\"十一月\",\"十二月\"],\n\t\tmonthShort:[\"一月\",\"二月\",\"三月\",\"四月\",\"五月\",\"六月\",\"七月\",\"八月\",\"九月\",\"十月\",\"十一月\",\"十二月\"],\n\t\tdayFull:[\"星期日\",\"星期一\",\"星期二\",\"星期三\",\"星期四\",\"星期五\",\"星期六\"],\n\t\tdayShort:[\"周日\",\"周一\",\"周二\",\"周三\",\"周四\",\"周五\",\"周六\"],\n\t\thours: \"小时\",\n\t\tminutes: \"分钟\",\n\t\tdone:\"完成\",\n\t\tclear: \"清除\",\n\t\ttoday: \"今天\"\n\t},\n\n\tdataExport:{\n\t\tpage:\"页\",\n\t\tof:\"从\"\n\t},\n\tPDFviewer:{\n\t\tof:\"从\",\n\t\tautomaticZoom:\"自动设置页面大小\",\n\t\tactualSize:\"实际尺寸\",\n\t\tpageFit:\"页面大小\",\n\t\tpageWidth:\"页面宽度\",\n\t\tpageHeight:\"页面高度\",\n\t\tenterPassword:\"输入密码\",\n\t\tpasswordError:\"密码错误\"\n\t},\n\taria:{\n\t\tcalendar:\"日历\",\n\t\tincreaseValue:\"增加值\",\n\t\tdecreaseValue:\"减少值\",\n\t\tnavMonth:[\"上个月\", \"下个月\"],\n\t\tnavYear:[\"去年\", \"明年\"],\n\t\tnavDecade:[\"过去十年\", \"下个十年\"],\n\t\tdateFormat:\"%Y'年'%m'月'%j'日'\",\n\t\tmonthFormat:\"%Y'年'%m'月\",\n\t\tyearFormat:\"%Y'年\",\n\t\thourFormat:\"小时: %G\",\n\t\tminuteFormat:\"分钟: %i\",\n\t\tremoveItem:\"删除项\",\n\t\tpages:[\"第一页\", \"上一页\", \"下一页\", \"最后一页\"],\n\t\tpage:\"页\",\n\t\theadermenu:\"标题菜单\",\n\t\topenGroup:\"打开列分组\",\n\t\tcloseGroup:\"关闭列分组\",\n\t\tcloseTab:\"关闭标签\",\n\t\tshowTabs:\"更多标签\",\n\t\tresetTreeMap:\"重置视图\",\n\t\tnavTreeMap:\"上一级\",\n\t\tnextTab:\"下一个标签\",\n\t\tprevTab:\"前一个标签\",\n\t\tmultitextSection:\"添加项\",\n\t\tmultitextextraSection:\"删除项\",\n\t\tshowChart:\"显示图表\",\n\t\thideChart:\"隐藏图表\",\n\t\tresizeChart:\"调整图表大小\"\n\t},\n\trichtext:{\n\t\tunderline: \"下划线\",\n\t\tbold: \"粗体\",\n\t\titalic: \"斜体\"\n\t},\n\tcombo:{\n\t\tselect:\"选择\",\n\t\tselectAll:\"全选\",\n\t\tunselectAll:\"取消全选\"\n\t},\n\tmessage:{\n\t\tok:\"确定\",\n\t\tcancel:\"取消\"  \n\t},\n\tcomments:{\n\t\tsend: \"发送\",\n\t\tconfirmMessage: \"你确定要删除评论吗?\",\n\t\tedit: \"编辑\",\n\t\tremove: \"删除\",\n\t\tplaceholder: \"在此输入..\",\n\t\tmoreComments:\"更多评论\"\n\t},\n\tfilter:{\n\t\tless: \"小于\",\n\t\tlessOrEqual: \"少于等于\",\n\t\tgreater: \"大于\",\n\t\tgreaterOrEqual: \"大于等于\",\n\t\tcontains: \"包含\",\n\t\tnotContains: \"不包含\",\n\t\tequal: \"等于\",\n\t\tnotEqual: \"不等于\",\n\t\tbeginsWith: \"开始于\",\n\t\tnotBeginsWith: \"不以开始\",\n\t\tendsWith: \"结束\",\n\t\tnotEndsWith: \"不以结束\",\n\t\tbetween: \"之间\",\n\t\tnotBetween: \"不介于\"\n\t},\n\ttimeboard:{\n\t\tseconds: \"秒\"\n\t}\n};\n\nexport default zh;","const be = {\n\tgroupDelimiter:\" \",\n\tgroupSize:3,\n\tdecimalDelimiter:\",\",\n\tdecimalSize:2,\n\tminusPosition:\"before\",\n\tminusSign:\"-\",\n\n\tdateFormat:\"%d.%m.%Y\",\n\ttimeFormat:\"%H:%i\",\n\tlongDateFormat:\"%d %F %Y\",\n\tfullDateFormat:\"%d.%m.%Y %H:%i\",\n\n\tprice:\"{obj} руб.\",\n\tpriceSettings:{\n\t\tgroupSize:3,\n\t\tgroupDelimiter:\" \",\n\t\tdecimalDelimiter:\",\",\n\t\tdecimalSize:0,\n\t\tminusPosition:\"before\",\n\t\tminusSign:\"-\"\n\t},\n\n\tcalendar:{\n\t\tmonthFull:[\"Студзень\", \"Люты\", \"Сакавік\", \"Красавік\", \"Травень\", \"Чэрвень\", \"Ліпень\", \"Жнівень\", \"Верасень\", \"Кастрычнік\", \"Лістапад\", \"Снежань\"],\n\t\tmonthShort:[\"Студз\", \"Лют\", \"Сак\", \"Крас\", \"Трав\", \"Чэр\", \"Ліп\", \"Жнів\", \"Вер\", \"Каст\", \"Ліст\", \"Снеж\"],\n\t\tdayFull:[ \"Нядзеля\", \"Панядзелак\", \"Аўторак\", \"Серада\", \"Чацвер\", \"Пятніца\", \"Субота\"],\n\t\tdayShort:[\"Нд\", \"Пн\", \"Аўт\", \"Ср\", \"Чцв\", \"Пт\", \"Сб\"],\n\t\thours: \"Гадзіны\",\n\t\tminutes: \"Хвіліны\",\n\t\tdone: \"Гатова\",\n\t\ttoday: \"Cёння\",\n\t\tclear: \"Ачысціць\"\n\t},\n\n\tdataExport:{\n\t\tpage:\"Старонка\",\n\t\tof:\"з\"\n\t},\n\tPDFviewer:{\n\t\tof:\"з\",\n\t\tautomaticZoom:\"Аўтаматычны зум\",\n\t\tactualSize:\"Сапраўдны памер\",\n\t\tpageFit:\"Памер старонкі\",\n\t\tpageWidth:\"Шырыня старонкі\",\n\t\tpageHeight:\"Вышыня старонкі\",\n\t\tenterPassword:\"Увядзіце пароль\",\n\t\tpasswordError:\"Няправільны пароль\"\n\t},\n\taria:{\n\t\tcalendar:\"Каляндар\",\n\t\tincreaseValue:\"Павялічыць значэнне\",\n\t\tdecreaseValue:\"Паменшыць значэнне\",\n\t\tnavMonth:[\"Папярэдні месяц\", \"Наступны месяц\"],\n\t\tnavYear:[\"Папярэдні год\", \"Наступны год\"],\n\t\tnavDecade:[\"Папярэднія дзесяць год\", \"Наступныя дзесяць год\"],\n\t\tdateFormat:\"%d %F %Y\",\n\t\tmonthFormat:\"%F %Y\",\n\t\tyearFormat:\"%Y\",\n\t\thourFormat:\"Hours: %h\",\n\t\tminuteFormat:\"Гадзіны: %i\",\n\t\tremoveItem:\"Прыбраць элемент\",\n\t\tpages:[\"Першая старонка\", \"Папярэдняя старонка\", \"Наступная старонка\", \"Апошняя старонка\"],\n\t\tpage:\"Старонка\",\n\t\theadermenu:\"Меню загалоўка\",\n\t\topenGroup:\"Адкрыць групу слупкоў\",\n\t\tcloseGroup:\"Закрыць групу слупкоў\",\n\t\tcloseTab:\"Закрыць укладку\",\n\t\tshowTabs:\"Паказаць больш укладак\",\n\t\tresetTreeMap:\"Вярнуцца да першапачатковага выгляду\",\n\t\tnavTreeMap:\"Падняцца на ўзровень вышэй\",\n\t\tnextTab:\"Наступная ўкладка\",\n\t\tprevTab:\"Папярэдняя ўкладка\",\n\t\tmultitextSection:\"Дадаць элемент\",\n\t\tmultitextextraSection:\"Прыбраць элемент\",\n\t\tshowChart:\"Паказаць графік\",\n\t\thideChart:\"Схаваць графік\",\n\t\tresizeChart:\"Змяніць памер графіка\"\n\t},\n\trichtext:{\n\t\tunderline: \"Падкрэсліванне\",\n\t\tbold: \"Паўтлусты\",\n\t\titalic: \"Курсіў\"\n\t},\n\tcombo:{\n\t\tselect:\"Абраць\",\n\t\tselectAll:\"Абраць усё\",\n\t\tunselectAll:\"Ачысціць ўсе\"\n\t},\n\tmessage:{\n\t\tok:\"ОК\",\n\t\tcancel:\"Адмена\"\n\t},\n\tcomments:{\n\t\tsend: \"Даслаць\",\n\t\tconfirmMessage: \"Каментарый будзе выдалены. Вы ўпэўнены?\",\n\t\tedit: \"Рэдагаваць\",\n\t\tremove: \"Выдаліць\",\n\t\tplaceholder: \"Пішыце тут..\",\n\t\tmoreComments:\"Больш каментарыяў\"\n\t},\n\tfilter:{\n\t\tless: \"менш\",\n\t\tlessOrEqual: \"менш або роўна\",\n\t\tgreater: \"больш\",\n\t\tgreaterOrEqual: \"больш або роўна\",\n\t\tcontains: \"змяшчае\",\n\t\tnotContains: \"не змяшчае\",\n\t\tequal: \"роўныя\",\n\t\tnotEqual: \"не роўныя\",\n\t\tbeginsWith: \"пачынаецца з\",\n\t\tnotBeginsWith: \"не пачынаецца з\",\n\t\tendsWith: \"заканчваецца\",\n\t\tnotEndsWith: \"не сканчаецца\",\n\t\tbetween: \"паміж\",\n\t\tnotBetween: \"не паміж\"\n\t},\n\ttimeboard:{\n\t\tseconds: \"Секунды\"\n\t}\n};\n\nexport default be;","import {assert} from \"../webix/debug\";\nimport {debug_size_box_start, debug_size_box_end} from \"../webix/debug\";\n\nimport {callEvent} from \"../webix/customevents\";\nimport {insertBefore, remove} from \"../webix/html\";\nimport {extend, _power_array, isUndefined, copy} from \"../webix/helpers\";\nimport {_each} from \"../ui/helpers\";\n\nimport {$$,ui,protoUI} from \"../ui/core\";\n\nimport state from \"../core/state\";\nimport IdSpace from \"../core/idspace\";\nimport EventSystem from \"../core/eventsystem\";\n\nimport base from \"./baseview\";\n\nconst api = {\n\tname:\"baselayout\",\n\trestore:function(state, factory, configOnly){\n\t\tvar out = this._restore(copy(state), factory);\n\t\tif (configOnly)\n\t\t\treturn out;\n\t\telse\n\t\t\tui((out.cols || out.rows), this);\n\t},\n\t_restore:function(state, factory){\n\t\tif (state.$layout){\n\t\t\tvar sub = state.cols || state.rows;\n\t\t\tfor (var i = 0; i < sub.length; i++) {\n\t\t\t\tsub[i] = this._restore(sub[i], factory);\n\t\t\t}\n\t\t} else {\n\t\t\treturn factory.call(this, state);\n\t\t}\n\n\t\treturn state;\n\t},\n\tserialize:function(serializer){\n\t\tvar out = [];\n\t\tvar childs = this.getChildViews();\n\n\t\tfor (var i=0; i<childs.length; i++){\n\t\t\tvar sub = childs[i];\n\t\t\tif (sub.movePortlet){\n\t\t\t\tvar child = sub.getChildViews();\n\t\t\t\tout.push(serializer.call(this, child[child.length-1]));\n\t\t\t} else if (sub.serialize){\n\t\t\t\t// some kind of layout\n\t\t\t\tout.push(sub.serialize(serializer, true));\n\t\t\t} else {\n\t\t\t\t// leaf view\n\t\t\t\tout.push(serializer.call(this, sub));\n\t\t\t}\n\t\t}\n\n\t\tvar obj = { $layout: true, type: this.config.type };\n\t\tif (this.config.rows)\n\t\t\tobj.rows = out;\n\t\telse\n\t\t\tobj.cols = out;\n\n\t\treturn obj;\n\t},\n\t$init:function(config){\n\t\tthis.$ready.push(this._parse_cells);\n\t\tthis._dataobj  = this._contentobj;\n\t\tthis._layout_sizes = [];\n\t\tthis._responsive = [];\n\t\tthis._padding = { top:0, left:0, right:0, bottom:0 };\n\n\t\tif (config.$topView){\n\t\t\tconfig.borderless = true;\n\t\t\tconfig._inner = { top:true, left:true, bottom:true, right:true };\n\t\t}\n\n\t\tif (config.isolate)\n\t\t\textend(this, IdSpace);\n\t},\n\trows_setter:function(value){\n\t\tthis._vertical_orientation = 1;\n\t\tthis._collection = value;\n\t\treturn true;\n\t},\n\tcols_setter:function(value){\n\t\tthis._vertical_orientation = 0;\n\t\tthis.$view.style.whiteSpace = \"nowrap\";\n\t\tthis._collection = value;\n\t\treturn true;\n\t},\n\t_remove:function(view){\n\t\tvar index = _power_array.find.call(this._cells, view);\n\t\tif(this._beforeRemoveView)\n\t\t\tthis._beforeRemoveView(index);\n\t\t_power_array.removeAt.call(this._cells, index);\n\t\tthis._fix_hidden_cells(true);\n\t},\n\t_fix_hidden_cells(resize){\n\t\tthis._hiddencells = 0;\n\t\tfor (let i = 0; i < this._cells.length; i++){\n\t\t\tconst cell = this._cells[i];\n\t\t\tif (cell._settings.hidden || cell.$nospace)\n\t\t\t\tthis._hiddencells++;\n\t\t}\n\n\t\tif (resize)\n\t\t\tthis.resizeChildren(true);\n\t},\n\t_replace:function(new_view,target_id){\n\t\tif (isUndefined(target_id)){\n\t\t\tfor (var i=0; i < this._cells.length; i++)\n\t\t\t\tthis._cells[i].destructor();\n\t\t\tthis._collection = new_view;\n\t\t\tthis._parse_cells();\n\t\t} else {\n\t\t\tvar source;\n\t\t\tif (typeof target_id == \"number\"){\n\t\t\t\tif (target_id<0 || target_id > this._cells.length)\n\t\t\t\t\ttarget_id = this._cells.length;\n\t\t\t\t_power_array.insertAt.call(this._cells, new_view, target_id);\n\t\t\t\tif (!new_view._settings.hidden)\n\t\t\t\t\tthis._insertBeforeView(new_view, this._cells[target_id]);\n\t\t\t} else {\n\t\t\t\tsource = $$(target_id);\n\t\t\t\ttarget_id = _power_array.find.call(this._cells, source);\n\t\t\t\tassert(target_id!=-1, \"Attempt to replace the non-existing view\");\n\t\t\t\tif (!new_view._settings.hidden)\n\t\t\t\t\tthis._insertBeforeView(new_view, source);\n\t\t\t\tsource.destructor();\t\n\t\t\t\tthis._cells[target_id] = new_view;\n\t\t\t}\n\n\t\t\tif (!this._vertical_orientation)\n\t\t\t\tthis._fix_vertical_layout(new_view);\n\t\t}\n\t\tthis._fix_hidden_cells(true);\n\n\t\tvar form = this.elements ? this : this.getFormView();\n\t\tif (form && !this._fill_data) form._recollect_elements();\n\n\t\tcallEvent(\"onReconstruct\",[this]);\n\t},\n\t_fix_vertical_layout:function(cell){\n\t\tcell._viewobj.style.display = \"inline-block\";\n\t\tcell._viewobj.style.verticalAlign = \"top\";\n\t},\n\taddView:function(view, index){\n\t\tif (isUndefined(index))\n\t\t\tindex = this._cells.length;\n\t\tvar top = this.$$ ? this : this.getTopParentView();\n\t\t\n\t\tstate._parent_cell = this;\n\t\tvar newui = (top && top.ui) ? top.ui(view, this, index) : ui(view, this, index);\n\t\tstate._parent_cell = null;\n\n\t\treturn newui._settings.id;\n\t},\n\tremoveView:function(id){\n\t\tvar view;\n\t\tif (typeof id != \"object\")\n\t\t\tview = $$(id) || (this.$$ ? this.$$(id) : null);\n\t\telse\n\t\t\tview = id;\n\n\t\tvar target = _power_array.find.call(this._cells, view);\n\t\tif (target >= 0){\n\t\t\tif (this._beforeRemoveView)\n\t\t\t\tthis._beforeRemoveView(target, view);\n\n\t\t\tvar form = this.elements ? this : this.getFormView();\n\n\t\t\tthis._cells.splice(target, 1);\n\t\t\tif (form)\n\t\t\t\t_each(view, function(sub){\n\t\t\t\t\tif (sub.name)\n\t\t\t\t\t\tdelete form.getCleanValues()[sub.config.name];\n\t\t\t\t}, form, true);\t\t\t\t\n\n\t\t\t\t\n\t\t\tview.destructor();\n\t\t\tthis._fix_hidden_cells(true);\n\t\t\t\n\t\t\tif (form)\n\t\t\t\tform._recollect_elements();\n\t\t} else\n\t\t\tassert(false, \"Attemp to remove not existing view: \"+id);\n\n\t\tcallEvent(\"onReconstruct\",[this]);\n\t},\n\treconstruct:function(){\n\t\tthis._hiddencells = 0;\n\t\tthis._replace(this._collection);\n\t},\n\t_hide:function(obj, settings, silent){\n\t\tif (obj._settings.hidden) return;\n\t\tobj._settings.hidden = true;\n\t\tremove(obj._viewobj);\n\t\tthis._hiddencells++;\n\t\tif (!silent && !state._ui_creation)\n\t\t\tthis.resizeChildren(true);\t\n\t},\n\t_signal_hidden_cells:function(view){\n\t\tif (view.callEvent)\n\t\t\tview.callEvent(\"onViewShow\",[]);\n\t},\n\tresizeChildren:function(){\n\t\tif (state._freeze_resize) return;\n\n\t\tif (this._layout_sizes){\n\t\t\tvar parent = this.getParentView();\n\t\t\tif (parent){\n\t\t\t\tif (parent.resizeChildren)\n\t\t\t\t\treturn parent.resizeChildren();\n\t\t\t\telse\n\t\t\t\t\treturn parent.resize();\n\t\t\t}\n\t\t\t\t\n\t\t\tvar sizes = this.$getSize(0,0);\n\n\t\t\tvar x,y,nx,ny;\n\t\t\tnx = x = this._layout_sizes[0] || 0;\n\t\t\tny = y = this._layout_sizes[1] || 0;\n\n\t\t\t//for auto-fill content, use adjust strategy\n\t\t\tif ((sizes[1]>=100000 || sizes[3] >= 100000) && this._viewobj.parentNode){\n\t\t\t\t//in hidden container adjust doesn't work, so fallback to last known size\n\t\t\t\t//also, ensure that min-size is not violated\n\t\t\t\tnx = x = Math.max(sizes[0], (this._settings.width || this._viewobj.parentNode.offsetWidth || x || 0));\n\t\t\t\tny = y = Math.max(sizes[2], (this._settings.height || this._viewobj.parentNode.offsetHeight || y || 0));\n\t\t\t}\n\t\t\t\n\t\t\tif (!parent){\n\t\t\t\t//minWidth\n\t\t\t\tif (sizes[0]>x) nx = sizes[0];\n\t\t\t\t//minHeight\n\t\t\t\tif (sizes[2]>y) ny = sizes[2];\n\n\t\t\t\tvar fullscreen = (this._viewobj.parentNode == document.body) && !this.setPosition;\n\t\t\t\t//maxWidth rule\n\t\t\t\tif (!fullscreen && x>sizes[1]) nx = sizes[1];\n\t\t\t\t//maxHeight rule\n\t\t\t\tif (!fullscreen && y>sizes[3]) ny = sizes[3];\n\n\t\t\t\tthis.$setSize(nx,ny);\n\t\t\t} else\n\t\t\t\tthis._set_child_size(x,y);\n\n\t\t\tif (state._responsive_exception){\n\t\t\t\tstate._responsive_exception = false;\n\t\t\t\tthis.resizeChildren();\n\t\t\t}\n\n\t\t\tcallEvent(\"onResize\",[]);\n\t\t}\n\t},\n\tgetChildViews:function(){\n\t\treturn this._cells;\n\t},\n\tindex:function(obj){\n\t\tif (obj._settings)\n\t\t\tobj = obj._settings.id;\n\t\tfor (var i=0; i < this._cells.length; i++)\n\t\t\tif (this._cells[i]._settings.id == obj)\n\t\t\t\treturn i;\n\t\treturn -1;\n\t},\n\t_insertBeforeView:function(view, before){\n\t\tif (before){\n\t\t\tif (before._settings.hidden || view === before){\n\t\t\t\t//index of sibling cell, next to which new item will appear\n\t\t\t\tvar index = this.index(before)+1;\n\t\t\t\t//locate nearest visible cell\n\t\t\t\twhile (this._cells[index] && this._cells[index]._settings.hidden) index++;\n\t\t\t\tbefore = this._cells[index] ? this._cells[index]._viewobj : null;\n\t\t\t} else {\n\t\t\t\tbefore = before._viewobj;\n\t\t\t}\n\t\t}\n\t\tinsertBefore(view._viewobj, before, (this._dataobj||this._viewobj));\n\t},\n\t_show:function(obj, settings, silent){\n\t\tif (!obj._settings.hidden) return;\n\t\tthis._insertBeforeView(obj, obj);\n\t\tobj._settings.hidden = false;\n\n\t\tthis._hiddencells--;\n\n\t\tif (!silent){\n\t\t\tthis.resizeChildren(true);\n\t\t\tif (obj.refresh)\n\t\t\t\tobj.refresh();\n\t\t}\n\n\t\tif (obj.callEvent){\n\t\t\tobj.callEvent(\"onViewShow\", []);\n\t\t\t_each(obj, this._signal_hidden_cells);\n\t\t}\n\t},\n\tshowBatch:function(name, mode){\n\t\tvar preserve = typeof mode != \"undefined\";\n\t\tmode = mode !== false;\n\n\t\tif (!preserve){\n\t\t\tif (this._settings.visibleBatch == name ) return;\n\t\t\tthis._settings.visibleBatch = name;\n\t\t} else \n\t\t\tthis._settings.visibleBatch = \"\";\n\n\t\tvar show = [];\n\t\tfor (let i=0; i < this._cells.length; i++){\n\t\t\tif (!this._cells[i]._settings.batch && !this._cells[i]._settings.hidden) \n\t\t\t\tshow.push(this._cells[i]);\n\t\t\telse if (this._cells[i]._settings.batch == name){\n\t\t\t\tif (mode)\n\t\t\t\t\tshow.push(this._cells[i]);\n\t\t\t\telse\n\t\t\t\t\tthis._hide(this._cells[i], null, true);\n\t\t\t} else if (!preserve)\n\t\t\t\tthis._hide(this._cells[i], null, true);\n\t\t}\n\n\t\tfor (let i=0; i < show.length; i++){\n\t\t\tthis._show(show[i], null, true);\n\t\t\tshow[i]._render_hidden_views();\n\t\t}\n\t\t\t\n\t\tthis.resizeChildren(true);\n\t},\n\t_parse_cells:function(collection){\n\t\tthis._cells=[];\n\n\t\tassert(collection,this.name+\" was incorrectly defined. <br><br> You have missed rows|cols|cells|elements collection\"); \n\t\tfor (var i=0; i<collection.length; i++){\n\t\t\tstate._parent_cell = this;\n\t\t\tif (!collection[i]._inner)\n\t\t\t\tcollection[i].borderless = true;\n\n\t\t\tthis._cells[i]=ui._view(collection[i], this);\n\t\t\tif (!this._vertical_orientation)\n\t\t\t\tthis._fix_vertical_layout(this._cells[i]);\n\t\t\t\n\t\t\tif (this._settings.visibleBatch && this._settings.visibleBatch != this._cells[i]._settings.batch && this._cells[i]._settings.batch){\n\t\t\t\tthis._cells[i]._settings.hidden = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (!this._cells[i]._settings.hidden){\n\t\t\t\t(this._dataobj||this._contentobj).appendChild(this._cells[i]._viewobj);\n\t\t\t}\n\t\t}\n\n\t\tthis._fix_hidden_cells();\n\t\tif (this._parse_cells_ext_end)\n\t\t\tthis._parse_cells_ext_end(collection);\t\n\t},\n\t_fix_container_borders:function(style, inner){\n\t\tif (inner.top) \n\t\t\tstyle.borderTopWidth=\"0px\";\n\t\tif (inner.left) \n\t\t\tstyle.borderLeftWidth=\"0px\";\n\t\tif (inner.right) \n\t\t\tstyle.borderRightWidth=\"0px\";\n\t\tif (inner.bottom) \n\t\t\tstyle.borderBottomWidth=\"0px\";\n\t},\n\t_bubble_size:function(prop, size, vertical){\n\t\tif (this._vertical_orientation != vertical)\n\t\t\tfor (var i=0; i<this._cells.length; i++){\n\t\t\t\tthis._cells[i]._settings[prop] = size;\n\t\t\t\tif (this._cells[i]._bubble_size)\n\t\t\t\t\tthis._cells[i]._bubble_size(prop, size, vertical);\n\t\t\t}\n\t},\n\t$getSize:function(dx, dy){\n\t\tif (DEBUG) debug_size_box_start(this, true);\n\t\tvar minWidth = 0; \n\t\tvar maxWidth = 100000;\n\t\tvar maxHeight = 100000;\n\t\tvar minHeight = 0;\n\t\tif (this._vertical_orientation) maxHeight=0; else maxWidth = 0;\n\t\t\n\t\tvar fixed = 0;\n\t\tvar fixed_count = 0;\n\t\tvar gravity = 0;\n\t\tthis._sizes=[];\n\t\tlet hiddenCount = 0;\n\n\t\tfor (var i=0; i < this._cells.length; i++) {\n\t\t\t//ignore hidden cells\n\t\t\tif(this._cells[i]._settings.hidden){\n\t\t\t\thiddenCount++;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar sizes = this._sizes[i] = this._cells[i].$getSize(0,0);\n\n\t\t\tif(this._cells[i]._hiddenByCells)\n\t\t\t\thiddenCount++;\n\n\t\t\tif (this._cells[i].$nospace){\n\t\t\t\tfixed_count++;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (this._vertical_orientation){\n\t\t\t\t//take max minSize value\n\t\t\t\tif (sizes[0]>minWidth) minWidth = sizes[0];\n\t\t\t\t//take min maxSize value\n\t\t\t\tif (sizes[1]<maxWidth) maxWidth = sizes[1];\n\n\t\t\t\tminHeight += sizes[2];\n\t\t\t\tmaxHeight += sizes[3];\n\n\t\t\t\tif (sizes[2] == sizes[3] && sizes[2] != -1){ fixed+=sizes[2]; fixed_count++; }\n\t\t\t\telse gravity += sizes[4];\n\t\t\t} else {\n\t\t\t\t//take max minSize value\n\t\t\t\tif (sizes[2]>minHeight) minHeight = sizes[2];\n\t\t\t\t//take min maxSize value\n\t\t\t\tif (sizes[3]<maxHeight) maxHeight = sizes[3];\n\n\t\t\t\tminWidth += sizes[0];\n\t\t\t\tmaxWidth += sizes[1];\n\n\t\t\t\tif (sizes[0] == sizes[1] && sizes[0] != -1){ fixed+=sizes[0]; fixed_count++; }\n\t\t\t\telse gravity += sizes[4];\n\t\t\t}\n\t\t}\n\n\t\tif(hiddenCount == this._cells.length){\n\t\t\tthis._hiddenByCells = true;\n\t\t\tconst pView = this.getParentView();\n\t\t\tif(pView && pView._collection){\n\t\t\t\tif (pView._vertical_orientation){\n\t\t\t\t\tmaxHeight = 0;\n\t\t\t\t\tmaxWidth = 100000;\n\t\t\t\t}else{\n\t\t\t\t\tmaxHeight = 100000;\n\t\t\t\t\tmaxWidth = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tdelete this._hiddenByCells;\n\n\t\tif (minHeight>maxHeight)\n\t\t\tmaxHeight = minHeight;\n\t\tif (minWidth>maxWidth)\n\t\t\tmaxWidth = minWidth;\n\n\t\tthis._master_size = [fixed, this._cells.length - fixed_count, gravity];\n\t\tthis._desired_size = [minWidth+dx, minHeight+dy];\n\n\t\t//get layout sizes\n\t\tvar self_size = base.api.$getSize.call(this, 0, 0);\n\t\t//use child settings if layout's one was not defined\n\t\tif (self_size[1] >= 100000) self_size[1]=0;\n\t\tif (self_size[3] >= 100000) self_size[3]=0;\n\n\t\tself_size[0] = (self_size[0] || minWidth ) +dx;\n\t\tself_size[1] = Math.max(self_size[0], (self_size[1] || maxWidth ) +dx);\n\t\tself_size[2] = (self_size[2] || minHeight) +dy;\n\t\tself_size[3] = Math.max(self_size[2], (self_size[3] || maxHeight) +dy);\n\n\t\tif (DEBUG) debug_size_box_end(this, self_size);\n\n\t\tif (!this._vertical_orientation && this._settings.responsive)\n\t\t\tself_size[0] = 0;\n\n\t\treturn self_size;\n\t},\n\t$setSize:function(x,y){\n\t\tthis._layout_sizes = [x,y];\n\t\tif (DEBUG) debug_size_box_start(this);\n\n\t\tbase.api.$setSize.call(this,x,y);\n\t\tthis._set_child_size(x,y);\n\n\t\tif (DEBUG) debug_size_box_end(this, [x,y]);\n\t},\n\t_set_child_size_a:function(sizes, min, max){\n\t\tmin = sizes[min]; max = sizes[max];\n\t\tvar height = min;\n\n\t\tif (min != max){\n\t\t\tvar ps = this._set_size_delta * sizes[4]/this._set_size_gravity;\n\t\t\tif (ps < min){\n\t\t\t\theight = min;\n\t\t\t\tthis._set_size_gravity -= sizes[4]; \n\t\t\t\tthis._set_size_delta -= height;\n\t\t\t} else  if (ps > max){\n\t\t\t\theight = max;\n\t\t\t\tthis._set_size_gravity -= sizes[4]; \n\t\t\t\tthis._set_size_delta -= height;\n\t\t\t} else {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\n\t\treturn height;\n\t},\n\t_responsive_hide:function(cell, mode){\n\t\tvar target =  $$(mode);\n\n\t\tif (target === \"hide\" || !target){\n\t\t\tcell.hide();\n\t\t\tcell._responsive_marker = \"hide\";\n\t\t} else{\n\t\t\t//for SideBar in Webix 1.9\n\t\t\tif (!target)\n\t\t\t\ttarget = ui({ view:\"popup\", body:[{}]});\n\n\t\t\tcell._responsive_width = cell._settings.width;\n\t\t\tcell._responsive_height = cell._settings.height;\n\t\t\tcell._responsive_marker = target._settings.id;\n\t\t\tcell._settings.width = 0;\n\t\t\tif (!cell._settings.height)\n\t\t\t\tcell._settings.autoheight = true;\n\n\t\t\tui(cell, target, this._responsive.length);\n\t\t}\n\n\t\tthis._responsive.push(cell);\n\t},\n\t_responsive_show:function(cell){\n\t\tvar target = cell._responsive_marker;\n\t\tcell._responsive_marker = 0;\n\n\t\tif (target === \"hide\" || !target){\n\t\t\tcell.show();\n\t\t} else {\n\t\t\tcell._settings.width = cell._responsive_width;\n\t\t\tcell._settings.height = cell._responsive_height;\n\t\t\tdelete cell._settings.autoheight;\n\n\t\t\tvar index = 0;\n\t\t\twhile (this._cells[index] && this._cells[index]._settings.responsiveCell === false) index++;\n\t\t\tui(cell, this, index);\n\t\t}\n\t\tthis._responsive.pop();\n\t},\n\t_responsive_cells:function(x){\n\t\tstate._responsive_tinkery = true;\n\t\tif (x + this._padding.left + this._padding.right + this._margin * (this._cells.length-1)< this._desired_size[0]){\n\t\t\tvar max = this._cells.length - 1;\n\t\t\tfor (var i = 0; i < max; i++){\n\t\t\t\tlet cell = this._cells[i];\n\t\t\t\tif (!cell._responsive_marker){\n\t\t\t\t\tif (cell._settings.responsiveCell !== false){\n\t\t\t\t\t\tthis._responsive_hide(cell, this._settings.responsive);\n\t\t\t\t\t\tcallEvent(\"onResponsiveHide\", [cell._settings.id]);\n\t\t\t\t\t\tstate._responsive_exception = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmax = this._cells.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else  if (this._responsive.length){\n\t\t\tlet cell = this._responsive[this._responsive.length-1];\n\t\t\tvar dx = cell._responsive_marker == \"hide\" ? 0 : cell._responsive_width;\n\t\t\tvar px = cell.$getSize(dx,0);\n\t\t\tif (px[0] + this._desired_size[0] + this._margin + 20 <= x ){\n\t\t\t\tthis._responsive_show(cell);\n\t\t\t\tcallEvent(\"onResponsiveShow\", [cell._settings.id]);\n\t\t\t\tstate._responsive_exception = true;\n\t\t\t}\n\t\t}\n\n\t\tstate._responsive_tinkery = false;\n\t},\n\t_set_child_size:function(x,y){ \n\t\tstate._child_sizing_active = (state._child_sizing_active||0)+1;\n\n\t\tif (!this._vertical_orientation && this._settings.responsive)\n\t\t\tthis._responsive_cells(x,y);\n\n\n\t\tthis._set_size_delta = (this._vertical_orientation?y:x) - this._master_size[0];\n\t\tthis._set_size_gravity = this._master_size[2];\n\t\tlet width = x; let height = y;\n\n\t\tvar auto = [];\n\t\tfor (let i=0; i < this._cells.length; i++){\n\t\t\t//ignore hidden cells\n\t\t\tif (this._cells[i]._settings.hidden || !this._sizes[i])\n\t\t\t\tcontinue;\n\n\t\t\tlet sizes = this._sizes[i];\n\n\t\t\tif (this._vertical_orientation){\n\t\t\t\theight = this._set_child_size_a(sizes,2,3);\n\t\t\t\tif (height < 0)\t{ auto.push({oldIndex:i, view:this._cells[i]}); continue; }\n\t\t\t} else {\n\t\t\t\twidth = this._set_child_size_a(sizes,0,1);\n\t\t\t\tif (width < 0)\t{ auto.push({oldIndex:i, view:this._cells[i]}); continue; }\n\t\t\t}\n\t\t\tthis._cells[i].$setSize(width,height);\n\t\t}\n\n\t\tfor (let i = 0; i < auto.length; i++){\n\t\t\tvar index = auto[i].oldIndex;\n\t\t\tlet sizes = this._sizes[index];\n\t\t\tvar dx = Math.round(this._set_size_delta * sizes[4]/this._set_size_gravity);\n\t\t\tthis._set_size_delta -= dx; this._set_size_gravity -= sizes[4];\n\t\t\tif (this._vertical_orientation)\n\t\t\t\theight = dx;\n\t\t\telse {\n\t\t\t\twidth = dx;\n\t\t\t}\n\n\t\t\tauto[i].view.$setSize(width,height);\n\t\t}\n\n\t\tstate._child_sizing_active -= 1;\n\t},\n\t_next:function(obj, mode){\n\t\tvar index = this.index(obj);\n\t\tif (index == -1) return null;\n\t\treturn this._cells[index+mode];\n\t}, \n\t_first:function(){\n\t\treturn this._cells[0];\n\t}\n};\n\nconst view = protoUI(api, EventSystem, base.view);\nexport default { api, view };","import base from \"../views/view\";\nimport Scrollable from \"../core/scrollable\";\nimport EventSystem from \"../core/eventsystem\";\nimport {protoUI, ui, $$} from \"../ui/core\";\nimport env from \"../webix/env\";\nimport state from \"../core/state\";\nimport {callEvent} from \"../webix/customevents\";\n\n\n/*scrollable view with another view insize*/\nconst api = {\n\tname:\"scrollview\",\n\tdefaults:{\n\t\tscroll:\"y\",\n\t\tscrollSpeed:\"300ms\"\n\t},\n\t$init:function(){\n\t\tthis._viewobj.className += \" webix_scrollview\";\n\t},\n\tbody_setter:function(config){\n\t\tconfig.borderless = true;\n\t\tstate._parent_cell = this;\n\t\tthis._body_cell = ui._view(config);\n\n\t\tthis._dataobj.appendChild(this._body_cell._viewobj);\n\t},\n\tgetChildViews:function(){\n\t\treturn [this._body_cell];\n\t},\n\tgetBody:function(){\n\t\treturn this._body_cell;\n\t},\n\tresizeChildren:function(){\n\t\tif (!this._body_cell) return;\n\n\t\tthis._desired_size = this._body_cell.$getSize(0, 0);\n\t\tthis._resizeChildren();\n\t\tcallEvent(\"onResize\",[]);\n\t},\n\t_resizeChildren:function(){\n\t\tconst cx = Math.max(this._content_width, this._desired_size[0]);\n\t\tconst cy = Math.max(this._content_height, this._desired_size[2]);\n\t\tthis._body_cell.$setSize(cx, cy);\n\n\t\tconst scroll = this.getScrollState();\n\t\tconst top = this._body_cell._content_height - this._content_height;\n\t\tif (top < scroll.y)\t\t// correct scrolling if necessary\n\t\t\tthis.scrollTo(null, top);\n\n\t\tif (state._responsive_exception){\n\t\t\tstate._responsive_exception = false;\n\t\t\tthis._desired_size = this._body_cell.$getSize(0, 0);\n\t\t\tthis._resizeChildren();\n\t\t}\n\t},\n\t$getSize:function(dx, dy){\n\t\tconst desired_size = this._desired_size = this._body_cell.$getSize(0, 0);\n\t\tconst self_sizes = base.api.$getSize.call(this, dx, dy);\n\t\tconst scroll_size = this._native_scroll || env.scrollSize;\n\n\t\tif(this._settings.scroll==\"x\"){\n\t\t\tself_sizes[2] = Math.max(self_sizes[2], desired_size[2]) + scroll_size;\n\t\t\tself_sizes[3] = Math.min(self_sizes[3], desired_size[3]) + scroll_size;\n\t\t}\n\t\telse if(this._settings.scroll==\"y\"){\n\t\t\tself_sizes[0] = Math.max(self_sizes[0], desired_size[0]) + scroll_size;\n\t\t\tself_sizes[1] = Math.min(self_sizes[1], desired_size[1]) + scroll_size;\n\t\t}\n\t\treturn self_sizes;\n\t},\n\t$setSize:function(x,y){\n\t\tconst temp = env.scrollSize;\n\t\tenv.scrollSize = this._native_scroll || temp;\n\n\t\tif (base.api.$setSize.call(this,x,y) || state._force_resize)\n\t\t\tthis._resizeChildren();\n\n\t\tenv.scrollSize = temp;\n\t},\n\tscroll_setter:function(value){\n\t\tconst custom = env.$customScroll;\n\t\tif (typeof value == \"string\" && value.indexOf(\"native-\") === 0){\n\t\t\tthis._native_scroll = 17;\n\t\t\tvalue = value.replace(\"native-\", \"\");\n\t\t\tenv.$customScroll = false;\n\t\t}\n\n\t\tvalue =  Scrollable.scroll_setter.call(this, value);\n\n\t\tenv.$customScroll = custom;\n\t\treturn value;\n\t},\n\t_replace:function(new_view){\n\t\tthis._body_cell.destructor();\n\t\tthis._body_cell = new_view;\n\n\t\tthis._dataobj.appendChild(this._body_cell._viewobj);\n\t\tthis.resizeChildren();\n\t},\n\tshowView: function(id){\n\t\tconst topPos = $$(id).$view.offsetTop-$$(id).$view.parentNode.offsetTop;\n\t\tthis.scrollTo(0, topPos);\n\t}\n};\n\n\nconst view = protoUI(api,  Scrollable, EventSystem, base.view);\nexport default {api, view};","import {protoUI} from \"../ui/core\";\nimport state from \"../core/state\";\nimport {$active} from \"../webix/skin\";\n\nimport {clone, extend} from \"../webix/helpers\";\nimport {debug_size_box_start, debug_size_box_end} from \"../webix/debug\";\n\n\nimport base from \"./baselayout\";\nimport baseview from \"./baseview\";\nimport viewA from \"./view\";\n\nconst api = {\n\tname:\"layout\",\n\t$init:function(){\n\t\tthis._hiddencells = 0;\n\t},\n\tdefaults:{\n\t\ttype:\"line\"\n\t},\n\t_parse_cells:function(){\n\t\tif (this._parse_cells_ext)\n\t\t\tcollection = this._parse_cells_ext(collection);\n\n\t\tif (!this._parse_once){\n\t\t\tthis._viewobj.className += \" webix_layout_\"+(this._settings.type||\"\");\n\t\t\tthis._parse_once = 1;\n\t\t}\n\n\t\tif (this._settings.margin !== undefined)\n\t\t\tthis._margin = this._settings.margin;\n\n\t\tif (this._settings.padding !== undefined && typeof this._settings.padding !== \"object\" )\n\t\t\tthis._padding.left = this._padding.right = this._padding.top = this._padding.bottom = this._settings.padding;\n\t\tif (this._settings.paddingX !== undefined)\n\t\t\tthis._padding.left = this._padding.right = this._settings.paddingX;\n\t\tif (this._settings.paddingY !== undefined)\n\t\t\tthis._padding.top = this._padding.bottom = this._settings.paddingY;\n\t\tif (typeof this._settings.padding === \"object\")\n\t\t\textend(this._padding, this._settings.padding, true);\n\n\t\tif (this._padding.left || this._padding.right || this._padding.top || this._padding.bottom)\n\t\t\tthis._padding.defined = true;\n\n\t\t//if layout has paddings we need to set the visible border \n\t\tif (this._hasBorders() && !this._settings.borderless){\n\t\t\tthis._contentobj.style.borderWidth=\"1px\";\n\t\t\t//if layout has border - normal bordering rules are applied\n\t\t\tthis._render_borders = true;\n\t\t}\n\t\n\t\t\n\t\tvar collection = this._collection;\n\t\n\t\tif (this._settings.borderless)\n\t\t\tthis._settings._inner = { top:true, left:true, right:true, bottom:true};\n\n\t\tthis._beforeResetBorders(collection);\n\t\tbase.api._parse_cells.call(this, collection);\n\t\tthis._afterResetBorders(collection);\n\t},\n\t$getSize:function(dx, dy){\n\t\tdx=dx||0; dy=dy||0;\n\n\t\tvar correction = this._margin*(this._cells.length-this._hiddencells-1);\n\t\tif (this._render_borders || this._hasBorders()){\n\t\t\tvar _borders = this._settings._inner;\n\t\t\tif (_borders){\n\t\t\t\tdx += (_borders.left?0:1)+(_borders.right?0:1);\n\t\t\t\tdy += (_borders.top?0:1)+(_borders.bottom?0:1);\n\t\t\t}\n\t\t}\n\n\t\tif (!this._settings.height)\n\t\t\tdy += this._padding.top + this._padding.bottom + (this._vertical_orientation ? correction : 0);\n\n\t\tif (!this._settings.width)\n\t\t\tdx += this._padding.left + this._padding.right + (this._vertical_orientation ? 0 : correction);\n\t\t\t\t\n\t\treturn base.api.$getSize.call(this, dx, dy);\n\t},\n\t$setSize:function(x,y){\n\t\tthis._layout_sizes = [x,y];\n\t\tif (DEBUG) debug_size_box_start(this);\n\n\t\tif (this._hasBorders()||this._render_borders)\n\t\t\tviewA.api.$setSize.call(this,x,y);\n\t\telse\t\n\t\t\tbaseview.api.$setSize.call(this,x,y);\n\n\t\t//form with scroll\n\t\ty = this._content_height;\n\t\tx = this._content_width;\n\n\t\tvar config = this._settings;\n\t\tif (config.scroll){\n\t\t\ty = Math.max(y, this._desired_size[1]);\n\t\t\tx = Math.max(x, this._desired_size[0]);\n\t\t}\n\t\t\n\t\tthis._set_child_size(x, y);\n\n\t\tif (DEBUG) debug_size_box_end(this, [x,y]);\n\t},\n\t_set_child_size:function(x,y){\n\t\tvar correction = this._margin*(this._cells.length-this._hiddencells-1);\n\n\t\ty -= this._padding.top + this._padding.bottom;\n\t\tx -= this._padding.left + this._padding.right;\n\t\tif (this._vertical_orientation)\n\t\t\ty-=correction;\n\t\telse x-=correction;\n\n\t\treturn base.api._set_child_size.call(this, x, y);\n\t},\n\tresizeChildren:function(structure_changed){ \n\t\tif (structure_changed){\n\t\t\tthis._last_size = null; //forces children resize\n\t\t\tvar config = [];\n\t\t\tfor (var i = 0; i < this._cells.length; i++){\n\t\t\t\tvar cell = this._cells[i];\n\t\t\t\tconfig[i] = cell._settings;\n\t\t\t\tvar n = ((cell._layout_sizes && !cell._render_borders) || cell._settings.borderless)?\"0px\":\"1px\";\n\n\t\t\t\tcell._viewobj.style.borderTopWidth=cell._viewobj.style.borderBottomWidth=cell._viewobj.style.borderLeftWidth=cell._viewobj.style.borderRightWidth=n;\n\t\t\t}\n\t\t\t\n\t\t\tthis._beforeResetBorders(config);\n\t\t\tfor (let i=0; i<config.length; i++)\n\t\t\t\tif (config[i].borderless && this._cells[i]._set_inner)\n\t\t\t\t\tthis._cells[i]._set_inner(config[i]);\n\t\t\tthis._afterResetBorders(this._cells);\n\t\t}\n\n\t\tif (state._responsive_tinkery) return;\n\t\tbase.api.resizeChildren.call(this);\n\t},\n\t_hasBorders:function(){\n\t\treturn this._padding.defined && this._margin>0 && !this._cleanlayout;\n\t},\n\t_beforeResetBorders:function(collection){\n\t\tif (this._hasBorders() && (!this._settings.borderless || this._settings.type == \"space\")){\n\t\t\tfor (let i=0; i < collection.length; i++){\n\t\t\t\tif (!collection[i]._inner || !collection[i].borderless)\n\t\t\t\t\tcollection[i]._inner={ top:false, left:false, right:false, bottom:false};\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let i=0; i < collection.length; i++)\n\t\t\t\tcollection[i]._inner=clone(this._settings._inner);\n\t\t\tvar mode = false;\n\t\t\tif (this._cleanlayout)\n\t\t\t\tmode = true;\n\t\t\t\t\n\t\t\tvar maxlength = collection.length;\t\t\t\t\n\t\t\tif (this._vertical_orientation){\n\t\t\t\tfor (let i=1; i < maxlength-1; i++)\n\t\t\t\t\tcollection[i]._inner.top = collection[i]._inner.bottom = mode;\n\t\t\t\tif (maxlength>1){\n\t\t\t\t\tif (this._settings.type!=\"head\")\n\t\t\t\t\t\tcollection[0]._inner.bottom = mode;\n\n\t\t\t\t\twhile (collection[maxlength-1].hidden && maxlength>1)\n\t\t\t\t\t\tmaxlength--;\n\t\t\t\t\tif (maxlength>0)\n\t\t\t\t\t\tcollection[maxlength-1]._inner.top = mode;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (let i=1; i < maxlength-1; i++)\n\t\t\t\t\tcollection[i]._inner.left = collection[i]._inner.right= mode;\n\t\t\t\tif (maxlength>1){\n\t\t\t\t\tif (this._settings.type!=\"head\")\n\t\t\t\t\t\tcollection[0]._inner.right= mode;\n\t\t\t\t\tcollection[maxlength-1]._inner.left = mode;\n\n\t\t\t\t\twhile (maxlength>1 && collection[maxlength-1].hidden)\n\t\t\t\t\t\tmaxlength--;\n\t\t\t\t\tif (maxlength>0)\n\t\t\t\t\t\tcollection[maxlength-1]._inner.left = mode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t_afterResetBorders:function(collection){\n\t\tvar start = 0; \n\t\tfor (let i=0; i<collection.length; i++){\n\t\t\tvar cell = this._cells[i];\n\n\t\t\tvar s_inner = cell._settings._inner;\n\t\t\tif (cell._settings.hidden && this._cells[i+1]){\n\t\t\t\tvar s_next = this._cells[i+1]._settings._inner;\n\t\t\t\tif (!s_inner.top)\n\t\t\t\t\ts_next.top = false;\n\t\t\t\tif (!s_inner.left)\n\t\t\t\t\ts_next.left = false;\n\n\t\t\t\tif (i==start) start++;\n\t\t\t}\n\t\t\tthis._fix_container_borders(cell._viewobj.style, cell._settings._inner);\n\t\t}\n\n\t\tvar style = this._vertical_orientation?\"marginLeft\":\"marginTop\";\n\t\tvar contrstyle = this._vertical_orientation?\"marginTop\":\"marginLeft\";\n\t\tvar padding = this._vertical_orientation?this._padding.left:this._padding.top;\n\t\tvar contrpadding = this._vertical_orientation?this._padding.top:this._padding.left;\n\n\t\t//add top offset to all\n\t\tfor (let i=0; i<collection.length; i++)\n\t\t\tthis._cells[i]._viewobj.style[style] = padding + \"px\";\n\n\t\t//add left offset to first cell\n\t\tif (this._cells.length)\n\t\t\tthis._cells[start]._viewobj.style[contrstyle] = contrpadding + \"px\";\n\n\t\t//add offset between cells\n\t\tfor (var index=start+1; index<collection.length; index++)\n\t\t\tthis._cells[index]._viewobj.style[contrstyle]=this._margin+\"px\";\n\t\t\n\t},\n\ttype_setter:function(value){\n\t\tthis._margin = (typeof this._margin_set[value] !== \"undefined\"? this._margin_set[value]: this._margin_set[\"line\"]);\n\t\tthis._padding.left = this._padding.right = this._padding.top = this._padding.bottom =\n\t\t\t(typeof this._margin_set[value] !== \"undefined\") ? this._padding_set[value] : this._padding_set[\"line\"];\n\t\tthis._cleanlayout = (value==\"material\" || value==\"clean\");\n\t\tif (value == \"material\")\n\t\t\tthis._settings.borderless = true;\n\n\t\treturn value;\n\t},\n\t$skin:function(){\n\t\tthis._margin_set = $active.layoutMargin;\n\t\tthis._padding_set = $active.layoutPadding;\n\t}\n};\n\nconst view = protoUI(api, base.view);\nexport default { api, view };\n\n//not necessary anymore\n//preserving for backward compatibility\nview.call(-1);","import {removeCss, addCss} from \"../webix/html\";\nimport {debug_size_box} from \"../webix/debug\";\nimport {protoUI, ui} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\n\nimport state from \"../core/state\";\nimport UIManager from \"../core/uimanager\";\nimport env from \"../webix/env\";\nimport MouseEvents from \"../core/mouseevents\";\nimport EventSystem from \"../core/eventsystem\";\n\nimport template from \"../webix/template\";\n\nimport base from \"./view\";\nimport baseview from \"./baseview\";\n\nconst api = {\n\tname:\"accordionitem\",\n\t$init:function(config){\n\t\tthis._viewobj.innerHTML = \"<div tabindex='0' \"+/*@attr*/\"webix_ai_id\"+\"='\"+config.id+\"'  class='webix_accordionitem_header'><div class='webix_accordionitem_button' ></div><div class='webix_accordionitem_label' ></div></div><div class='webix_accordionitem_body'></div>\";\n\t\tthis._contentobj = this._viewobj;\n\t\tthis._headobj = this._contentobj.childNodes[0];\n\t\tif(!config.header)\n\t\t\tthis._headobj.style.display = \"none\";\n\t\tthis._headlabel = this._contentobj.childNodes[0].childNodes[1];\n\t\tthis._headbutton = this._contentobj.childNodes[0].childNodes[0];\n\t\tthis._bodyobj = this._contentobj.childNodes[1];\n\t\tthis._viewobj.className +=\" webix_accordionitem\";\n\t\tthis._head_cell = this._body_cell = null;\n\t\tthis._cells = true;\n\n\t\tthis._bodyobj.setAttribute(\"role\", \"tabpanel\");\n\t\tthis._headobj.setAttribute(\"role\", \"tab\");\n\n\t\tthis.attachEvent(\"onKeyPress\", this._onKeyPress);\n\t},\n\t_remove:function(){\n\t\tthis.body_setter();\n\t},\n\t_replace:function(new_view){\n\t\tthis._body_cell.destructor();\n\t\tthis._body_cell = new_view;\n\t\t\n\t\tthis._bodyobj.appendChild(this._body_cell._viewobj);\n\t\tthis.resize();\n\t},\n\t_id:/*@attr*/\"webix_ai_id\",\n\tgetChildViews:function(){\n\t\treturn [this._body_cell];\n\t},\n\tbody_setter:function(value){\n\t\tif (typeof value != \"object\")\n\t\t\tvalue = {template:value };\n\n\t\tvalue._inner = { top:true, left:true, right:true, bottom:true};\n\t\tstate._parent_cell = this;\n\t\tthis._body_cell = ui._view(value);\n\n\t\tthis._bodyobj.appendChild(this._body_cell._viewobj);\n\t\treturn value;\n\t},\n\theader_setter:function(value){\n\t\tif(value)\n\t\t\tvalue = template(value);\n\t\treturn value;\n\t},\n\theaderAlt_setter:function(value){\n\t\tif(value)\n\t\t\tvalue = template(value);\n\t\treturn value;\n\t},\n\t$getSize:function(dx, dy){\n\t\tvar size =  this._body_cell.$getSize(0, 0);\n\n\t\t//apply external border to inner content sizes\n\t\tvar _borders = this._settings._inner;\n\t\tif (_borders){\n\t\t\tdx += (_borders.left?0:1)+(_borders.right?0:1);\n\t\t\tdy += (_borders.top?0:1)+(_borders.bottom?0:1);\n\t\t}\n\n\t\tvar header = 0;\n\t\tvar self_size = baseview.api.$getSize.call(this, 0, 0);\n\n\t\t//use child settings if layout's one was not defined\n\t\tself_size[0] = (self_size[0] || size[0] ) +dx;\n\t\tif (self_size[1] >= 100000)\n\t\t\tself_size[1] = size[1];\n\t\tself_size[1] +=\tdx;\n\t\t\n\t\tself_size[2] = (self_size[2] || size[2] ) +dy;\n\t\tvar fixedHeight = (self_size[3]< 100000);\n\t\tif (!fixedHeight)\n\t\t\tself_size[3] = size[3];\n\n\t\tself_size[3] += dy;\n\t\tif(this.getParentView()._vertical_orientation){\n\t\t\tif (this._settings.collapsed){\n\t\t\t\tself_size[2] = self_size[3] = this._getHeaderSize()+dy;\n\t\t\t} else if(this._settings.header)\n\t\t\t\theader = this._settings.headerHeight;\n\t\t} else {\n\t\t\tif (this._settings.collapsed)\n\t\t\t\tself_size[0] = self_size[1] = this._getHeaderSize()+dx;\n\t\t\tif(this._settings.header)\n\t\t\t\theader = this._settings.headerHeight;\n\t\t}\n\n\t\t//include header in total height calculation\n\t\tif(!fixedHeight){\n\t\t\tself_size[2] += header;\n\t\t\tself_size[3] += header;\n\t\t}\n\n\t\tif (DEBUG) debug_size_box(this, self_size, true);\n\t\treturn self_size;\n\t},\n\ton_click:{\n\t\twebix_accordionitem_header:function(e){\n\t\t\tthis._toggle(e);\n\t\t\treturn false;\n\t\t},\n\t\twebix_accordionitem_header_v:function(e){\n\t\t\tthis._toggle(e);\n\t\t\treturn false;\n\t\t}\n\t},\n\t_toggle:function(){\n\t\tthis.define(\"collapsed\", !this._settings.collapsed);\n\t},\n\tcollapsed_setter:function(value){\n\t\tif (this._settings.header === false) return;\n\t\t//use last layout element if parent is not known yet\n\t\tvar parent = this.getParentView();\n\t\tif(parent){\n\t\t\tif(!value)\n\t\t\t\tthis._expand();\n\t\t\telse{\n\t\t\t\tif ( parent._canCollapse(this))\n\t\t\t\t\tthis._collapse();\n\t\t\t\telse{\n\t\t\t\t\tvar success = 0;\n\t\t\t\t\tif(parent._cells.length > 1)\n\t\t\t\t\t\tfor (var i=0; i < parent._cells.length; i++){\n\t\t\t\t\t\t\tvar sibl = parent._cells[i];\n\t\t\t\t\t\t\tif (this != sibl && sibl.isVisible() && sibl.expand){\n\t\t\t\t\t\t\t\tsibl.expand();\n\t\t\t\t\t\t\t\tthis._collapse();\n\t\t\t\t\t\t\t\tsuccess = 1;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\tif (!success) return;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._settings.collapsed = value;\n\t\t\tif (!value) parent._afterOpen(this);\n\n\t\t\tthis.refresh();\n\t\t\tif (!state._ui_creation)\n\t\t\t\tthis.resize();\n\n\t\t\tparent.callEvent(\"onAfter\"+(value?\"Collapse\":\"Expand\"), [this._settings.id]);\n\n\t\t\tthis._settings.$noresize = value;\n\t\t}\n\t\treturn value;\n\t},\n\tcollapse:function(){\n\t\tthis.define(\"collapsed\", true);\n\t\tUIManager._moveChildFocus(this);\n\t},\n\texpand:function(){\n\t\tthis.define(\"collapsed\", false);\n\t},\n\t_show: function() {\n\t\tthis.show();\n\t},\n\t_hide: function() {\n\t\tthis.hide();\n\t},\n\t_expand:function(){\n\t\tthis._bodyobj.style.display = \"\";\n\t\tremoveCss(this.$view, \"collapsed\");\n\t\tremoveCss(this._headobj, \"collapsed\");\n\n\t\tthis._headobj.setAttribute(\"aria-expanded\", \"true\");\n\t\tthis._childRefresh(this._body_cell);\n\t},\n\t_childRefresh: function(view){\n\t\tif(view.refresh)\n\t\t\tview.refresh();\n\t\telse if(view.getChildViews){\n\t\t\tconst views = view.getChildViews();\n\t\t\tviews.forEach(v=>this._childRefresh(v));\n\t\t}\n\t},\n\t_collapse:function(){\n\t\tif(this._settings.headerAlt)\n\t\t\tthis._headlabel.innerHTML = this._settings.headerAlt();\n\t\tthis._bodyobj.style.display = \"none\";\n\t\taddCss(this.$view, \"collapsed\");\n\t\taddCss(this._headobj, \"collapsed\");\n\n\t\tthis._headobj.setAttribute(\"aria-expanded\", \"false\");\n\t},\n\trefresh:function(){\n\t\tvar template = this._settings[this._settings.collapsed?\"headerAlt\":\"header\"] ||this._settings.header;\n\t\tif (template){\n\t\t\tthis._headlabel.innerHTML = template();\n\t\t\tthis._headbutton.setAttribute(\"aria-label\", template());\n\t\t}\n\t\t\t\n\t\tvar css = (this.getParentView()._vertical_orientation?\"vertical\":\"horizontal\");\n\t\tif(this._viewobj.className.indexOf(\" \"+css) < 0 ){\n\t\t\taddCss(this._viewobj, css);\n\t\t}\n\t},\n\t_getHeaderSize:function(){\n\t\treturn (this._settings.collapsed?this._settings.headerAltHeight:this._settings.headerHeight);\n\t},\n\t$setSize:function(x,y){\n\t\tif (base.api.$setSize.call(this,x,y) || this._getHeaderSize() != this._last_set_header_size){\n\t\t\tx = this._content_width;\n\t\t\ty = this._content_height;\n\n\t\t\tvar headerSize = this._last_set_header_size = this._getHeaderSize();//-(this._settings._inner.top?0:1);\n\t\t\tif (this._settings.header){\n\n\t\t\t\tthis._headobj.style.height=headerSize+\"px\";\n\t\t\t\tthis._headobj.style.width=\"auto\";\n\t\t\t\tthis._headobj.style[env.transform]=\"\";\n\n\t\t\t\t\n\t\t\t\tthis._headobj.style.borderBottomWidth = (this._settings.collapsed?0:1)+\"px\";\n\n\t\t\t\tif(this.getParentView()._vertical_orientation||!this._settings.collapsed){\n\t\t\t\t\ty-=this._getHeaderSize();\n\t\t\t\t} else if (this._settings.collapsed){\n\t\t\t\t\t//-2 - borders\n\t\t\t\t\tthis._headobj.style.width = y + \"px\";\n\t\t\t\t\tthis._headobj.style.height = x + 3 + \"px\";\n\t\t\t\t\tvar d = Math.floor(y/2-x/2)+(x-this._settings.headerAltHeight)/2;\n\t\t\t\t\tthis._headobj.style[env.transform]=\"rotate(90deg) translate(\"+d+\"px, \"+(d+1)+\"px)\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!this._settings.collapsed){\n\t\t\t\tthis._body_cell.$setSize(x,y);\n\t\t\t\tthis._last_size_y = y;\n\t\t\t}\n\t\t} else if (!this._settings.collapsed){\n\t\t\tvar body = this._body_cell;\n\t\t\tif (this._last_size_y)\n\t\t\t\tbody.$setSize(this._content_width, this._last_size_y);\n\t\t}\n\t},\n\t$skin:function(){\n\t\tthis.defaults.headerAltHeight = this.defaults.headerHeight = $active.barHeight - $active.borderWidth*2;\n\t},\n\tdefaults:{\n\t\theader:false,\n\t\theaderAlt:false,\n\t\tbody:\"\"\n\t}\n};\n\n\nconst view = protoUI(api, MouseEvents, EventSystem, base.view);\nexport default {api, view};","import {pos as getPos, offset, addCss, removeCss} from \"../webix/html\";\nimport {ui, protoUI} from \"../ui/core\";\nimport env from \"../webix/env\";\n\nimport MouseEvents from \"../core/mouseevents\";\nimport Destruction from \"../core/destruction\";\n\nimport base from \"./view\";\n\n//used inderectly through ui\nimport \"./resizearea\";\n\nimport {bind} from \"../webix/helpers\";\nimport {_event, event, eventRemove} from \"../webix/htmlevents\";\nimport {assert} from \"../webix/debug\";\nimport {callEvent} from \"../webix/customevents\";\n\n\nconst api = {\n\tname:\"resizer\",\n\tdefaults:{\n\t\twidth:7, height:7\n\t},\n\t$init:function(config){\n\t\tassert(this.getParentView(), \"Resizer can't be initialized outside a layout\");\n\t\tthis._viewobj.className += \" webix_resizer\";\n\t\tvar space = this.getParentView()._margin;\n\t\t\n\t\t_event(this._viewobj, env.mouse.down, e => this._rsDown(e, \"mouse\"));\n\t\tif (env.touch)\n\t\t\t_event(this._viewobj, env.touch.down, e => this._rsDown(e, \"touch\"));\n\n\t\tvar dir = this._getResizeDir();\n\t\tthis._rs_started = false;\n\t\tthis._resizer_dir = dir;\n\n\t\tthis._resizer_dim = (dir==\"x\"?\"width\":\"height\");\n\t\t\n\t\tif (dir==\"x\")\n\t\t\tconfig.height = 0;\n\t\telse \n\t\t\tconfig.width = 0;\n\n\t\tif (space>0){\n\t\t\tthis._viewobj.className += \" webix_resizer_v\"+dir;\n\t\t\tthis._viewobj.style.marginRight = \"-\"+space+\"px\";\n\t\t\tif (dir == \"x\")\t\n\t\t\t\tconfig.width = space;\n\t\t\telse\n\t\t\t\tconfig.height = space;\n\t\t\tthis.$nospace = true;\n\t\t} else\n\t\t\tthis._viewobj.className += \" webix_resizer_\"+dir;\n\t\t\n\t\tthis._viewobj.innerHTML = \"<div class='webix_resizer_content'></div>\";\n\t\tif (dir == \"y\" && space>0) this._viewobj.style.marginBottom = \"-\"+(config.height||this.defaults.height)+\"px\";\n\t\tthis._viewobj.setAttribute(/*@attr*/\"webix_disable_drag\", \"true\");\n\t\tthis._viewobj.setAttribute(\"tabindex\", \"-1\");\n\t\tthis._viewobj.setAttribute(\"aria-grabbed\", \"false\");\n\n\t},\n\t_rsDown:function(e, pointer){\n\t\tvar cells = this._getResizerCells();\n\t\t//some sibling can block resize\n\t\tif(cells && !this._settings.disabled){\n\t\t\tthis._rs_started = true;\n\t\t\tthis._rs_process = getPos(e);\n\t\t\tthis._rsLimit = [];\n\t\t\tthis._viewobj.setAttribute(\"aria-grabbed\", \"true\");\n\t\t\t\n\t\t\tfor(var i=0; i<2; i++)\n\t\t\t\tcells[i].$view.setAttribute(\"aria-dropeffect\", \"move\");\n\t\t\tthis._viewobj.setAttribute(\"aria-dropeffect\", \"move\");\n\t\t\t\n\t\t\tthis._rsStart(e, cells[0]);\n\t\t\tconst handler = event(document, env[pointer].up, e => {\n\t\t\t\teventRemove(handler);\n\t\t\t\treturn this._rsUp(e);\n\t\t\t});\n\t\t}\n\t},\n\t_rsUp:function(){\n\t\tthis._rs_started = false;\n\t\tthis._rs_process = false;\n\t},\n\t_rsStart:function(e, cell){\n\t\tvar dir, cellOffset, pos,posParent,start;\n\t\tdir = this._resizer_dir;\n\n\t\t/*layout position:relative to place absolutely positioned elements in it*/\n\t\tthis.getParentView()._viewobj.style.position = \"relative\";\n\t\tpos = offset(this._viewobj);\n\t\tposParent = offset(this.getParentView()._viewobj);\n\t\tstart = pos[dir]-posParent[dir];\n\t\tcellOffset = offset(cell.$view)[dir]- offset(this.getParentView().$view)[dir];\n\n\t\tthis._rs_progress = [dir, cell, start, cellOffset];\n\t\t/*resizer stick (resizerea ext)*/\n\n\t\tthis._resizeStick = new ui.resizearea({\n\t\t\tcontainer:this.getParentView()._viewobj,\n\t\t\tdir:dir,\n\t\t\teventPos:this._rs_process[dir],\n\t\t\tstart:start-1,\n\t\t\theight: this.$height,\n\t\t\twidth: this.$width,\n\t\t\tborder: 1,\n\t\t\tmargin: this.getParentView()._padding[dir === \"x\"? \"left\" : \"top\"]\n\t\t});\n\n\t\t/*stops resizing on stick mouseup*/\n\t\tthis._resizeStick.attachEvent(\"onResizeEnd\", bind(this._rsEnd, this));\n\t\t/*needed to stop stick moving when the limit for dimension is reached*/\n\t\tthis._resizeStick.attachEvent(\"onResize\", bind(this._rsResizeHandler, this));\n\n\t\taddCss(document.body,\"webix_noselect\",1);\n\t},\n\t_getResizeDir: function(){\n\t\treturn this.getParentView()._vertical_orientation?\"y\":\"x\";\n\t},\n\t_rsResizeHandler:function(){\n\t\tlet cells,cDiff,diff,dir,i,limits,limitSizes,sizes,totalSize;\n\t\tif (this._rs_progress){\n\t\t\tcells = this._getResizerCells();\n\t\t\tdir = this._rs_progress[0];\n\t\t\t/*vector distance between resizer and stick*/\n\t\t\tdiff = this._resizeStick._last_result -this._rs_progress[2];\n\t\t\t/*new sizes for the resized cells, taking into account the stick position*/\n\t\t\tsizes = this._rsGetDiffCellSizes(cells,dir,diff);\n\t\t\t/*sum of cells dimensions*/\n\t\t\ttotalSize = cells[0][\"$\"+this._resizer_dim]+cells[1][\"$\"+this._resizer_dim];\n\t\t\tfor(i=0;i<2;i++){\n\t\t\t\tcDiff = (i?-diff:diff);/*if cDiff is positive, the size of i cell is increased*/\n\n\t\t\t\t/*max and min limits*/\n\t\t\t\tlimits = cells[i].$getSize(0,0);\n\t\t\t\t/*if size is bigger than max limit or size is smaller than min limit*/\n\t\t\t\tlet min = (dir==\"y\")?limits[2]:limits[0];\n\t\t\t\tlet max = (dir==\"y\")?limits[3]:limits[1];\n\n\t\t\t\t//if size is fixed, treat it as responsive (default behavior)\n\t\t\t\tif (min === max){\n\t\t\t\t\tmin = cells[i]._settings[ (dir==\"y\")?\"minHeight\":\"minWidth\" ]||3;\n\t\t\t\t\tmax = cells[i]._settings[ (dir==\"y\")?\"maxHeight\":\"maxWidth\" ]||100000;\n\t\t\t\t}\n\n\t\t\t\tif (cDiff>0&&max&&max<=sizes[i] || cDiff<0&&min&&min>=sizes[i]){\n\t\t\t\t\tthis._rsLimit[i] = (cDiff>0?max:min);\n\t\t\t\t\t/*new sizes, taking into account max and min limits*/\n\t\t\t\t\tlimitSizes = this._rsGetLimitCellSizes(cells,dir);\n\t\t\t\t\t/*stick position*/\n\t\t\t\t\tthis._resizeStick._dragobj.style[(dir==\"y\"?\"top\":\"left\")] = this._rs_progress[3] + limitSizes[0]+\"px\";\n\t\t\t\t\treturn;\n\t\t\t\t} else if(sizes[i]<3) {/*cells size can not be less than 1*/\n\t\t\t\t\tthis._resizeStick._dragobj.style[(dir==\"y\"?\"top\":\"left\")] = this._rs_progress[3] + i*totalSize+1+\"px\";\n\t\t\t\t} else {\n\t\t\t\t\tthis._rsLimit[i] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t_getResizerCells:function(){\n\t\tvar cells,i,res;\n\t\tcells = this.getParentView()._cells;\n\t\tfor(i=0; i< cells.length;i++){\n\t\t\tif(cells[i]==this){\n\t\t\t\tres = [this._getRsCell(cells, i, 1, -1), this._getRsCell(cells, i, 1, 1)];\n\t\t\t\tif (!res[0] || !res[1])\n\t\t\t\t\tres = null;\n\t\t\t\treturn res;\n\t\t\t}\n\t\t}\n\t},\n\t_getRsCell:function(cells, i, step, dir){\n\t\tvar cell = cells[i+(dir*step)];\n\t\tif(cell && cell._settings.hidden)\n\t\t\treturn this._getRsCell(cells, i, step+1, dir);\n\t\telse if(cell && cell._settings.$noresize)\n\t\t\treturn null;\n\t\telse\n\t\t\treturn cell;\n\t},\n\t_rsEnd:function(result){\n\t\tif (typeof result == \"undefined\") return;\n\n\t\tvar cells,dir,diff,size;\n\t\tvar vertical = this.getParentView()._vertical_orientation;\n\t\tthis._resizerStick = null;\n\t\tif (this._rs_progress){\n\t\t\tdir = this._rs_progress[0];\n\t\t\tdiff = result-this._rs_progress[2];\n\t\t\tcells = this._getResizerCells();\n\t\t\tif(cells[0]&&cells[1]){\n\t\t\t\t/*new cell sizes*/\n\t\t\t\tsize = this._rsGetCellSizes(cells,dir,diff);\n\n\t\t\t\tfor (let i=0; i<2; i++){\n\t\t\t\t\t//cell has not fixed size, of fully fixed layout\n\t\t\t\t\tvar cell_size = cells[i].$getSize(0,0);\n\t\t\t\t\tif (vertical?(cell_size[2] == cell_size[3]):(Math.abs(cell_size[1]-cell_size[0])<3)){\n\t\t\t\t\t\t/*set fixed sizes for both cells*/\n\t\t\t\t\t\tcells[i]._settings[this._resizer_dim]=size[i];\n\t\t\t\t\t\tif (cells[i]._bubble_size)\n\t\t\t\t\t\t\tcells[i]._bubble_size(this._resizer_dim, size[i], vertical);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar actualSize = cells[i].$view[vertical?\"offsetHeight\":\"offsetWidth\"];//cells[i][\"$\"+this._resizer_dim];\n\t\t\t\t\t\tcells[i]._settings.gravity = size[i]/actualSize*cells[i]._settings.gravity;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcells[0].resize();\n\n\t\t\t\tfor (let i = 0; i < 2; i++){\n\t\t\t\t\tif (cells[i].callEvent)\n\t\t\t\t\t\tcells[i].callEvent(\"onViewResize\",[]);\n\t\t\t\t\tcells[i].$view.removeAttribute(\"aria-dropeffect\");\n\t\t\t\t}\n\t\t\t\tcallEvent(\"onLayoutResize\", [cells]);\n\t\t\t}\n\t\t\tthis._rs_progress = false;\n\t\t}\n\t\tthis._rs_progress = false;\n\t\tthis._rs_started = false;\n\t\tthis._rsLimit = null;\n\t\tremoveCss(document.body,\"webix_noselect\");\n\n\t\tthis._viewobj.setAttribute(\"aria-grabbed\", \"false\");\n\t\tthis._viewobj.removeAttribute(\"aria-dropeffect\");\n\t},\n\t_rsGetLimitCellSizes: function(cells){\n\t\tvar size1,size2,totalSize;\n\t\ttotalSize = cells[0][\"$\"+this._resizer_dim]+cells[1][\"$\"+this._resizer_dim];\n\t\tif(this._rsLimit[0]){\n\t\t\tsize1 = this._rsLimit[0];\n\t\t\tsize2 = totalSize-size1;\n\t\t}\n\t\telse if(this._rsLimit[1]){\n\t\t\tsize2 = this._rsLimit[1];\n\t\t\tsize1 = totalSize-size2;\n\t\t}\n\t\treturn [size1,size2];\n\t},\n\t_rsGetDiffCellSizes:function(cells,dir,diff){\n\t\tvar sizes =[];\n\t\tvar styleDim = this._resizer_dim==\"height\"?\"offsetHeight\":\"offsetWidth\";\n\t\tfor(var i=0;i<2;i++)\n\t\t\tsizes[i] = cells[i].$view[styleDim]+(i?-1:1)*diff;\n\t\treturn sizes;\n\t},\n\t_rsGetCellSizes:function(cells,dir,diff){\n\t\tvar i,sizes,totalSize;\n\t\t/*if max or min dimentsions are set*/\n\t\tif(this._rsLimit[0]||this._rsLimit[1]){\n\t\t\tsizes = this._rsGetLimitCellSizes(cells,dir);\n\t\t}\n\t\telse{\n\t\t\tsizes = this._rsGetDiffCellSizes(cells,dir,diff);\n\t\t\tfor(i =0; i<2;i++ ){\n\t\t\t\t/*if stick moving is stopped outsize cells borders*/\n\t\t\t\tif(sizes[i]<0){\n\t\t\t\t\ttotalSize = sizes[0]+sizes[1];\n\t\t\t\t\tsizes[i] =1;\n\t\t\t\t\tsizes[1-i] = totalSize-1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn sizes;\n\t}\n};\n\nconst view = protoUI(api, MouseEvents, Destruction, base.view);\nexport default {api, view};","import {protoUI, ui} from \"../ui/core\";\nimport state from \"../core/state\";\n\nimport base from \"./view\";\nimport baseview from \"./baseview\";\n\n\nconst api = {\n\tname:\"align\",\n\tdefaults:{\n\t\tborderless:true,\n\t\tleft:0, top:0, right:0, bottom:0\n\t},\n\t$init:function(){\n\t\tthis._viewobj.className\t+= \" webix_view_align\";\n\t},\n\t_remove:function(){\n\t\tthis.body_setter({ });\n\t},\n\t_replace:function(new_view){\n\t\tthis._body_cell.destructor();\n\t\tthis._body_cell = new_view;\n\n\t\tthis._viewobj.appendChild(this._body_cell._viewobj);\n\t\tthis.resize();\n\t},\n\tgetChildViews:function(){\n\t\treturn [this._body_cell];\n\t},\n\tbody_setter:function(value){\n\t\tvalue._inner = { top:false, left:false, right:false, bottom:false};\n\t\tstate._parent_cell = this;\n\t\tthis._body_cell = ui._view(value);\n\n\t\tthis._viewobj.appendChild(this._body_cell._viewobj);\n\t\treturn value;\n\t},\n\talign_setter:function(value){\n\t\tif (typeof value === \"string\")\n\t\t\tvalue = value.split(\",\");\n\n\t\tthis._x_align = this._y_align = this._p_align = \"\";\n\t\tfor (var i=0; i<value.length; i++){\n\t\t\tvar c = value[i];\n\t\t\tif (c === \"center\" || c === \"left\" || c === \"right\")\n\t\t\t\tthis._x_align = c;\n\t\t\tif (c === \"top\" || c === \"bottom\" || c === \"middle\")\n\t\t\t\tthis._y_align = c;\n\t\t\tif (c === \"absolute\")\n\t\t\t\tthis._x_align = this._y_align = this._p_align = \"precise\";\n\t\t}\n\n\t\treturn value;\n\t},\n\tgetBody:function(){\n\t\treturn this._body_cell;\n\t},\n\t$setSize:function(x,y){\n\t\tbase.api.$setSize.call(this, x,y);\n\n\t\tvar dx, dy;\n\t\tif (this._p_align){\n\t\t\tdx = x - this._settings.left - this._settings.right;\n\t\t\tdy = y - this._settings.top - this._settings.bottom;\n\t\t} else {\n\t\t\tdx = this._desired_size[0] || x;\n\t\t\tdy = this._desired_size[2] || y;\n\t\t}\n\n\n\n\t\tthis._body_cell.$setSize(dx, dy);\n\n\t\tvar box = this._body_cell._viewobj;\n\n\t\tif (this._x_align == \"center\")\n\t\t\tbox.style.marginLeft = Math.ceil((x-dx)/2)+\"px\";\n\t\telse if (this._x_align == \"right\")\n\t\t\tbox.style.marginLeft = (x-dx)+\"px\";\n\t\telse\n\t\t\tbox.style.marginLeft = (this._p_align ? this._settings.left : 0) +\"px\";\n\n\t\tif (this._y_align == \"middle\") \n\t\t\tbox.style.marginTop = Math.ceil((y-dy)/2)+\"px\";\n\t\telse if (this._y_align == \"bottom\")\n\t\t\tbox.style.marginTop = (y-dy)+\"px\";\n\t\telse\n\t\t\tbox.style.marginTop = (this._p_align ? this._settings.top : 0) + \"px\";\n\t},\n\t$getSize:function(dx,dy){\n\t\tvar size = this._desired_size = this._body_cell.$getSize(0,0);\n\t\tvar self_size = baseview.api.$getSize.call(this, 0, 0);\n\t\n\t\tif (this._p_align){\n\t\t\tdx += this._settings.left + this._settings.right;\n\t\t\tdy += this._settings.top + this._settings.bottom;\n\t\t}\n\n\t\tif (!this._x_align || this._p_align){\n\t\t\tself_size[0] = size[0]+dx;\n\t\t\tself_size[1] = size[1]+dx;\n\t\t} else {\n\t\t\tself_size[0] = (self_size[0] || size[0] ) +dy;\n\t\t\tself_size[1] +=\tdx;\n\t\t}\n\n\t\tif (!this._y_align || this._p_align){\n\t\t\tself_size[2] = size[2]+dy;\n\t\t\tself_size[3] = size[3]+dy;\n\t\t} else {\n\t\t\tself_size[2] = (self_size[2] || size[2] ) +dy;\n\t\t\tself_size[3] +=\tdy;\n\t\t}\n\n\t\treturn self_size;\n\t}\n};\n\nconst view = protoUI(api, base.view);\nexport default {api, view};","import {remove} from \"../webix/html\";\nimport {protoUI, $$} from \"../ui/core\";\nimport {clone, extend, isUndefined} from \"../webix/helpers\";\nimport {_each} from \"../ui/helpers\";\nimport promise from \"../thirdparty/promiz\";\nimport {debug_size_box_start, debug_size_box_end} from \"../webix/debug\";\nimport {assert} from \"../webix/debug\";\n\nimport baselayout from \"../views/baselayout\";\nimport baseview from \"../views/baseview\";\nimport base from \"../views/view\";\n\nimport Settings from \"../core/settings\";\nimport animate from \"../webix/animate\";\n\n\n// #include ui/view.js\n\nconst api = {\n\tname:\"multiview\",\n\tdefaults:{\n\t\tanimate:{\n\t\t}\n\t},\n\tsetValue:function(val){\n\t\t$$(val).show();\n\t},\n\tgetValue:function(){\n\t\treturn this.getActiveId();\n\t},\n\t$init:function(){\n\t\tthis._active_cell = 0;\n\t\tthis._vertical_orientation = 1;\n\t\tthis._viewobj.style.position = \"relative\";\n\t\tthis._viewobj.className += \" webix_multiview\";\n\t\tthis._back_queue = [];\n\t},\n\t_ask_render:function(cell_id, view_id){\n\t\tvar cell = $$(cell_id);\n\t\tif (!cell._render_hash){\n\t\t\tcell._render_queue = [];\n\t\t\tcell._render_hash = {};\t\t\t\n\t\t}\n\t\tif (!cell._render_hash[view_id]){\n\t\t\tcell._render_hash[view_id]=true;\n\t\t\tcell._render_queue.push(view_id);\n\t\t}\n\t},\n\t_render_activation:function(cell_id){ \n\t\tvar cell = $$(cell_id);\n\t\tif(this._settings.keepViews)\n\t\t\tcell._viewobj.style.display = \"\";\n\t\t/*back array*/\n\t\tif(this._back_queue[this._back_queue.length-2]!=cell_id){\n\t\t\tif(this._back_queue.length==10)\n\t\t\t\tthis._back_queue.splice(0,1);\n\t\t\tthis._back_queue.push(cell_id);\n\t\t}\n\t\telse \n\t\t\tthis._back_queue.splice(this._back_queue.length-1,1);\t\n\t\t\n\t\tif (cell._render_hash){\n\t\t\tfor (var i=0; i < cell._render_queue.length; i++){\n\t\t\t\tvar subcell = $$(cell._render_queue[i]);\n\t\t\t\t//cell can be already destroyed\n\t\t\t\tif (subcell)\n\t\t\t\t\tsubcell.render();\n\t\t\t}\n\t\t\t\t\n\t\t\tcell._render_queue = [];\n\t\t\tcell._render_hash = {};\t\t\t\n\t\t}\n\t},\n\taddView:function(view, index){\n\t\tvar inc = !isUndefined(index) && index <= this._active_cell ? 1 : 0;\n\t\tvar id = baselayout.api.addView.apply(this, arguments);\n\n\t\tif(this._cells.length > 1){\n\t\t\tif(this._settings.keepViews)\n\t\t\t\t$$(id)._viewobj.style.display = \"none\";\n\t\t\telse\n\t\t\t\tremove($$(id)._viewobj);\n\n\t\t\tthis._active_cell += inc;\n\t\t}\n\n\t\treturn id;\n\t},\n\t_replace:function(view){\n\t\tif(!view._settings.borderless){\n\t\t\tconst settings = clone(this._settings._inner);\n\t\t\tview._settings._inner = settings;\n\t\t\tlet style = view._viewobj.style;\n\t\t\tstyle.borderTopWidth = style.borderBottomWidth = style.borderLeftWidth = style.borderRightWidth = \"1px\";\n\t\t\tthis._fix_container_borders(style, settings);\n\t\t}\n\t\tbaselayout.api._replace.apply(this, arguments);\n\t},\n\t_beforeRemoveView:function(index){\n\t\t//removing current view\n\t\tif (index == this._active_cell){\n\t\t\tvar next = index ? index-1 : 1;\n\t\t\tif (this._cells[next]){\n\t\t\t\tthis._animation_promise = null;\n\t\t\t\tthis._show(this._cells[next], false);\n\t\t\t}\n\t\t}\n\n\t\tif (index < this._active_cell)\n\t\t\tthis._active_cell--;\n\t},\n\t//necessary, as we want to ignore hide calls for elements in multiview\n\t_hide:function(){},\n\t_parse_cells:function(collection){\n\t\tcollection = collection || this._collection; \n\n\t\tfor (let i=0; i < collection.length; i++)\n\t\t\tcollection[i]._inner = this._settings.borderless?{top:1, left:1, right:1, bottom:1}:(this._settings._inner||{});\n\n\t\tbaselayout.api._parse_cells.call(this, collection);\n\n\t\tfor (let i=1; i < this._cells.length; i++){\n\t\t\tif(this._settings.keepViews)\n\t\t\t\tthis._cells[i]._viewobj.style.display = \"none\";\n\t\t\telse\n\t\t\t\tremove(this._cells[i]._viewobj);\n\t\t}\n\n\t\tfor (let i=0; i<collection.length; i++){\n\t\t\tvar cell = this._cells[i];\n\t\t\tif (cell._cells && !cell._render_borders) continue;\n\n\t\t\tthis._fix_container_borders(cell._viewobj.style, cell._settings._inner);\n\n\t\t\tcell._viewobj.setAttribute(\"role\", \"tabpanel\");\n\t\t}\n\t\tthis._render_activation(this.getActiveId());\n\t},\n\tcells_setter:function(value){\n\t\tassert(value && value.length,\"Multiview must have at least one view in 'cells'\");\n\t\tthis._collection = value;\n\t},\n\t_getDirection:function(next, active){\n\t\tvar dir = (this._settings.animate || {}).direction;\n\t\tvar vx = (dir == \"top\" || dir == \"bottom\");\n\t\treturn \t next < active ? (vx?\"bottom\":\"right\"):(vx?\"top\":\"left\");\n\t},\n\t_show:function(obj, animation_options){\n\t\tconst parent = this.getParentView();\n\t\tif (parent && parent.getTabbar){\n\t\t\tconst tabBar = parent.getTabbar();\n\t\t\ttabBar.blockEvent();\n\t\t\ttabBar.setValue(obj._settings.$id || obj._settings.id);\n\t\t\ttabBar.unblockEvent();\n\t\t}\n\n\t\tif (this._animation_promise)\n\t\t\treturn this._animation_promise.then(() => this._show.apply(this, arguments));\n\n\t\tvar _next_cell = -1;\n\t\tfor (var i=0; i < this._cells.length; i++)\n\t\t\tif (this._cells[i]==obj){\n\t\t\t\t_next_cell = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif (_next_cell < 0 || _next_cell == this._active_cell)\n\t\t\treturn;\n\n\n\t\tvar prev = this._cells[this._active_cell];\n\t\tvar next = this._cells[ _next_cell ];\n\t\tprev.$getSize(0,0);\n\n\t\t//need to be moved in animate\n\t\tif((animation_options || isUndefined(animation_options)) && this._settings.animate) {\n\t\t\tvar aniset = extend({}, this._settings.animate);\n\t\t\tif(this._settings.keepViews)\n\t\t\t\taniset.keepViews = true;\n\t\t\taniset.direction = this._getDirection(_next_cell,this._active_cell);\n\t\t\taniset = Settings._mergeSettings(animation_options||{}, aniset);\n\n\t\t\tvar line = animate.formLine(\n\t\t\t\tnext._viewobj,\n\t\t\t\tprev._viewobj,\n\t\t\t\taniset);\n\t\t\tnext.$getSize(0,0);\n\t\t\tnext.$setSize(this._content_width,this._content_height);\n\n\t\t\tvar callback_original = aniset.callback;\n\t\t\taniset.callback = function(){\n\t\t\t\tanimate.breakLine(line,this._settings.keepViews);\n\t\t\t\tthis._animation_promise = null;\n\t\t\t\taniset.wait_animation.resolve();\n\t\t\t\tif (callback_original) callback_original.call(this);\n\t\t\t\tcallback_original = aniset.master = aniset.callback = null;\n\t\t\t\tthis.resize();\n\t\t\t};\n\t\t\taniset.master = this;\n\n\t\t\tthis._active_cell = _next_cell;\n\t\t\tthis._render_activation(this.getActiveId());\n\n\t\t\tanimate(line, aniset);\n\t\t\tthis._animation_promise = aniset.wait_animation = promise.defer();\n\t\t}\n\t\telse { // animate:false in config\n\t\t\tif(this._settings.keepViews){\n\t\t\t\tprev._viewobj.style.display = \"none\";\n\t\t\t}\n\t\t\telse{\n\t\t\t\tremove(prev._viewobj);\n\t\t\t\tthis._viewobj.appendChild(this._cells[i]._viewobj);\n\t\t\t}\n\n\t\t\tthis._active_cell = _next_cell;\n\t\t\tthis.resizeChildren();\n\t\t\tthis._render_activation(this.getActiveId());\n\t\t}\n\n\t\tif (next.callEvent){\n\t\t\tnext.callEvent(\"onViewShow\",[]);\n\t\t\t_each(next, this._signal_hidden_cells);\n\t\t}\n\n\t\tthis.callEvent(\"onViewChange\",[prev._settings.id, next._settings.id]);\n\t\t\n\t},\n\t$getSize:function(dx, dy){\n\t\tif (!this._cells.length) return baseview.api.$getSize.call(this, 0, 0);\n\t\tif (DEBUG) debug_size_box_start(this, true);\n\t\tvar size = this._cells[this._active_cell].$getSize(0, 0);\n\t\tif (this._settings.fitBiggest){\n\t\t\tfor (var i=0; i<this._cells.length; i++)\n\t\t\t\tif (i != this._active_cell){\n\t\t\t\t\tvar other = this._cells[i].$getSize(0, 0);\n\t\t\t\t\tfor (var j = 0; j < 4; j++)\n\t\t\t\t\t\tsize[j] = Math.max(size[j], other[j]);\n\t\t\t\t}\n\t\t}\n\n\n\t\t//get layout sizes\n\t\tvar self_size = baseview.api.$getSize.call(this, 0, 0);\n\t\t//use child settings if layout's one was not defined\n\t\tif (self_size[1] >= 100000) self_size[1]=0;\n\t\tif (self_size[3] >= 100000) self_size[3]=0;\n\n\t\tself_size[0] = (self_size[0] || size[0] ) +dx;\n\t\tself_size[1] = (self_size[1] || size[1] ) +dx;\n\t\tself_size[2] = (self_size[2] || size[2] ) +dy;\n\t\tself_size[3] = (self_size[3] || size[3] ) +dy;\n\t\t\n\t\tif (DEBUG) debug_size_box_end(this, self_size);\n\t\t\n\t\treturn self_size;\n\t},\n\t$setSize:function(x,y){\n\t\tif (!this._cells.length) return;\n\t\tthis._layout_sizes = [x,y];\n\t\tbaseview.api.$setSize.call(this,x,y);\n\t\tthis._cells[this._active_cell].$setSize(x,y);\n\t},\n\tisVisible:function(base_id, cell_id){\n\t\tif (cell_id && cell_id != this.getActiveId()){\n\t\t\tif (base_id)\n\t\t\t\tthis._ask_render(cell_id, base_id);\n\t\t\treturn false;\n\t\t}\n\t\treturn base.api.isVisible.call(this, base_id, this._settings.id);\n\t},\n\tgetActiveId:function(){\n\t\treturn this._cells.length?this._cells[this._active_cell]._settings.id:null;\n\t},\n\tback:function(step){\t\t\n\t\tstep=step||1;\n\t\tif(this.callEvent(\"onBeforeBack\",[this.getActiveId(), step])){\n\t\t\tif(this._back_queue.length>step){\n\t\t\t\tvar viewId = this._back_queue[this._back_queue.length-step-1];\n\t\t\t\t$$(viewId).show();\n\t\t\t\treturn viewId;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\treturn null;\n\n\t},\n\t_insertBeforeView:function(view, before){\n\t\tif (this._settings.keepViews || (!before || before == this._cells[this._active_cell]))\n\t\t\tbaselayout.api._insertBeforeView.call(this, view, before);\n\t}\n};\n\n\nconst view = protoUI(api, baselayout.view);\nexport default {api, view};","import {protoUI, ui, $$} from \"../ui/core\";\nimport {copy, extend, bind} from \"../webix/helpers\";\nimport {_each} from \"../ui/helpers\";\nimport {assert} from \"../webix/debug\";\nimport {attachEvent, detachEvent} from \"../webix/customevents\";\n\nimport state from \"../core/state\";\nimport Touch from \"../core/touch\";\n\nimport base from \"../views/view\";\nimport baseview from \"../views/baseview\";\n\nimport EventSystem from \"../core/eventsystem\";\nimport NavigationButtons from \"../core/navigationbuttons\";\n\n\nconst api = {\n\tname:\"carousel\",\n\tdefaults:{\n\t\tscrollSpeed:\"300ms\",\n\t\ttype: \"clean\",\n\t\tnavigation: {},\n\t\tanimate:true\n\t},\n\t$init:function(){\n\t\tthis._viewobj.className += \" webix_carousel\";\n\t\tthis._layout = null;\n\t\tthis._dataobj = null;\n\t\tthis._active_cell = 0;\n\t\tthis.$ready.unshift(this._initLayout);\n\t\tthis.$ready.push(this._after_init_call);\n\t},\n\taddView: function(view, index){\n\t\tvar t = this._layout.addView(view, index);\n\t\tthis._fix_after_view_add();\n\t\treturn t;\n\t},\n\tremoveView: function(id){\n\t\tthis._layout.removeView(id);\n\t\tthis._fix_after_view_add();\n\t},\n\t_replace: function(new_view,target_id){\n\t\tthis._layout._replace(new_view, target_id);\n\t\tthis._fix_after_view_add();\n\t},\n\t_fix_after_view_add: function(){\n\t\tthis._cells = this._layout._cells;\n\t\tthis._renderPanel();\n\t\tthis.setActiveIndex(Math.min(this._active_cell, this._cells.length-1));\n\t},\n\t_initLayout: function(){\n\t\tif(this._layout && this._layout.destructor)\n\t\t\tthis._layout.destructor();\n\n\t\tvar layout = \"\";\n\n\t\tif(this.config.cols){\n\t\t\tlayout = \"cols\";\n\t\t\tthis._vertical_orientation = 0;\n\t\t}\n\t\telse{\n\t\t\tlayout = \"rows\";\n\t\t\tthis._vertical_orientation = 1;\n\t\t}\n\n\t\tvar config = {borderless: true, type: \"clean\"};\n\t\tconfig[layout] = copy(this._settings[layout]);\n\t\tvar layoutProp = [\"type\", \"margin\", \"marginX\", \"marginY\", \"padding\", \"paddingX\", \"paddingY\"];\n\t\tvar layoutConfig = {};\n\t\tfor(var i=0; i< layoutProp.length; i++){\n\t\t\tif(this._settings[layoutProp[i]]){\n\t\t\t\tlayoutConfig[layoutProp[i]] = this._settings[layoutProp[i]];\n\t\t\t}\n\t\t}\n\t\textend(config,layoutConfig,true);\n\n\t\tstate._parent_cell = this;\n\t\tthis._layout = ui._view(config);\n\n\t\tthis._viewobj.appendChild(this._layout._viewobj);\n\t\tthis._cells = this._layout._cells;\n\n\t\tthis._layout._show = bind(api._show,this);\n\t\tthis._layout.adjustScroll = bind(api.adjustScroll,this);\n\n\t\tconst e1 = attachEvent(\"onReconstruct\",  view => {\n\t\t\tif(view == this._layout)\n\t\t\t\tthis._setScroll();\n\t\t});\n\t\tthis.attachEvent(\"onDestruct\", function(){ detachEvent(e1); });\n\n\t\tthis._contentobj = this._viewobj.firstChild;\n\t},\n\t_onKeyPress:function(code, e){\n\t\tif(this._settings.navigation.items && e.target.getAttribute(\"role\") === \"tab\")\n\t\t\tthis._moveActive(code, e);\n\n\t\tbaseview.api._onKeyPress.call(this, code, e);\n\t},\n\tgetChildViews:function(){\n\t\treturn [this._layout];\n\t},\n\tgetLayout:function(){\n\t\treturn this._layout;\n\t},\n\t_after_init_call:function(){\n\t\tthis._contentobj.setAttribute(\"touch_scroll\", (this._vertical_orientation?\"y\":\"x\"));\n\n\t\tthis._layout.attachEvent(\"onAfterScroll\",bind(function(){\n\t\t\tthis.callEvent(\"onShow\",[this.getActiveId()]);\n\t\t},this));\n\n\t\t_each(this._layout, function(view){\n\t\t\tview._viewobj.setAttribute(\"role\", \"tabpanel\");\n\t\t});\n\t},\n\tadjustScroll:function(matrix){\n\t\tvar size =  (this._vertical_orientation?this._content_height:this._content_width);\n\n\t\tvar correction;\n\t\tif (this._vertical_orientation) {\n\t\t\tcorrection = Math.round(matrix.f/size);\n\t\t\tmatrix.f = correction*size;\n\t\t} else {\n\t\t\tcorrection = Math.round(matrix.e/size);\n\t\t\tmatrix.e = correction*size;\n\t\t}\n\t\t\n\t\tthis._active_cell = - correction;\n\n\t\tif(this._settings.navigation)\n\t\t\tthis._renderNavItems();\n\n\t\treturn true;\n\t},\n\t_show:function(obj){\n\t\tvar i, layout, _nextCell, _size, x, y;\n\t\t_nextCell = -1;\n\t\tlayout = this._layout;\n\t\tfor (i=0; i < layout._cells.length; i++){\n\t\t\tif (layout._cells[i]==obj){\n\t\t\t\t_nextCell = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (_nextCell < 0 || _nextCell == this._active_cell)\n\t\t\treturn;\n\n\t\tthis._active_cell = _nextCell;\n\t\t_size =  (layout._vertical_orientation?this._content_height:this._content_width);\n\n\t\tx = -(layout._vertical_orientation?0:_nextCell*_size);\n\t\ty = -(layout._vertical_orientation?_nextCell*_size:0);\n\n\t\tthis.scrollTo(x,y);\n\t\tthis.callEvent(\"onShow\",[layout._cells[this._active_cell]._settings.id]);\n\t\tif(this._settings.navigation)\n\t\t\tthis._renderPanel();\n\t},\n\tscrollTo:function(x,y){\n\t\tif (Touch && this._settings.animate)\n\t\t\tTouch._set_matrix(this._contentobj, x,y, this._settings.scrollSpeed||\"100ms\");\n\t\telse {\n\t\t\tthis._contentobj.style.marginLeft = x+\"px\";\n\t\t\tthis._contentobj.style.marginTop =  y+\"px\";\n\t\t}\n\t},\n\tnavigation_setter:function(config){\n\t\tthis._mergeSettings(config,{\n\t\t\ttype: \"corner\",\n\t\t\tbuttons: true,\n\t\t\titems: true\n\t\t});\n\t\treturn config;\n\t},\n\tshowNext:function(){\n\t\tif (this._active_cell < this._layout._cells.length - 1)\n\t\t\tthis.setActiveIndex(this._active_cell+1);\n\t},\n\tshowPrev:function(){\n\t\tif (this._active_cell > 0)\n\t\t\tthis.setActiveIndex(this._active_cell-1);\n\t},\n\tsetActiveIndex:function(value){\n\t\tassert(value < this._layout._cells.length, \"Not existing index in collection\");\n\n\t\tvar id = this._layout._cells[value]._settings.id;\n\t\t$$(id).show();\n\t},\n\tgetActiveIndex:function(){\n\t\treturn this._active_cell;\n\t},\n\t$getSize:function(dx, dy){\n\t\tvar layoutSizes = this._layout.$getSize(0, 0);\n\t\tvar selfSizes   = base.api.$getSize.call(this, dx, dy);\n\t\tif(this._layout._vertical_orientation){\n\t\t\tselfSizes[0] = Math.max(selfSizes[0], layoutSizes[0]);\n\t\t\tselfSizes[1] = Math.min(selfSizes[1], layoutSizes[1]);\n\n\t\t} else{\n\t\t\tselfSizes[2] = Math.max(selfSizes[2], layoutSizes[2]);\n\t\t\tselfSizes[3] = Math.min(selfSizes[3], layoutSizes[3]);\n\t\t}\n\t\treturn selfSizes;\n\t},\n\t$setSize:function(x,y){\n\t\tvar layout = this._layout;\n\t\tvar c = layout._cells.length;\n\n\t\tvar changed = base.api.$setSize.call(this,x,y);\n\t\tvar yc = this._content_height*(layout._vertical_orientation?c:1);\n\t\tvar xc = this._content_width*(layout._vertical_orientation?1:c);\n\n\t\tif (changed){\n\t\t\tthis._contentobj.style.height = yc+\"px\";\n\t\t\tthis._contentobj.style.width = xc+\"px\";\n\t\t\tlayout.$setSize(xc,yc);\n\t\t\tthis._setScroll();\n\t\t} else\n\t\t\tlayout.$setSize(xc,yc);\n\t},\n\t_setScroll: function(){\n\t\tvar layout = this._layout;\n\t\tvar activeCell = this._active_cell||0;\n\t\tvar size =  (layout._vertical_orientation?this._content_height:this._content_width);\n\n\t\tvar x = -(layout._vertical_orientation?0:activeCell*size);\n\t\tvar y = -(layout._vertical_orientation?activeCell*size:0);\n\n\n\t\tthis.scrollTo(x,y);\n\n\t\tif(this._settings.navigation)\n\t\t\tthis._renderPanel();\n\t},\n\tgetActiveId:function(){\n\t\tvar cell = this._layout._cells[this._active_cell];\n\t\treturn cell?cell._settings.id:null;\n\t},\n\tsetActive:function(value){\n\t\t$$(value).show();\n\t}\n};\n\n\nconst view = protoUI(api,  EventSystem,NavigationButtons, base.view);\nexport default {api, view};","import {protoUI} from \"../ui/core\";\n\nimport {_each} from \"../ui/helpers\";\nimport {extend} from \"../webix/helpers\";\nimport {debug_size_box} from \"../webix/debug\";\n\nimport layout from \"../views/layout\";\n\nimport Scrollable from \"../core/scrollable\";\nimport AtomDataLoader from \"../core/atomdataloader\";\nimport Values from \"../core/values\";\nimport ValidateData from \"../core/validatedata\";\n\n\nconst api = {\n\tname:\"toolbar\",\n\tdefaults:{\n\t\ttype:\"toolbar\"\n\t},\n\t_render_borders:true,\n\t_form_classname:\"webix_toolbar\",\n\t_form_vertical:false,\n\t$init:function(config){\n\t\tif (!config.borderless){\n\t\t\tthis._contentobj.style.borderWidth=\"1px\";\n\t\t\tthis._settings._inner = {top:false, left:false, right:false, bottom:false };\n\t\t}\n\n\t\tthis._contentobj.className+=\" \"+this._form_classname;\n\t\tthis._viewobj.setAttribute(\"role\", \"toolbar\");\n\t},\n\t_recollect_elements:function(){\n\t\tvar form = this;\n\t\tform.elements = {};\n\t\t_each(this, function(view){\n\t\t\tif (view._settings.name && view.getValue && view.setValue){\n\t\t\t\tform.elements[view._settings.name] = view;\n\t\t\t\tif (view.mapEvent)\n\t\t\t\t\tview.mapEvent({\n\t\t\t\t\t\tonbeforetabclick:form,\n\t\t\t\t\t\tonaftertabclick:form,\n\t\t\t\t\t\tonitemclick:form,\n\t\t\t\t\t\tonchange:form\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (view.setValues || view._fill_data) return false;\n\t\t});\n\t\tvar old = this._values;\n\t\tthis.setDirty(false);\n\t\tif (old) {\n\t\t\t//restore dirty state after form reconstructing\n\t\t\tvar now = this._values;\n\t\t\tfor (var key in form.elements) \n\t\t\t\tif (old[key] && now[key] != old[key]){\n\t\t\t\t\tnow[key] = old[key];\n\t\t\t\t\tthis.setDirty(true);\n\t\t\t\t}\n\t\t}\n\t},\n\t_parse_cells_ext_end:function(){\n\t\tthis._recollect_elements();\n\t},\n\t_parse_cells_ext:function(collection){\n\t\tvar config = this._settings;\n\t\tif (config.elements && !collection){\n\t\t\tthis._collection = collection = config.elements;\n\t\t\tthis._vertical_orientation = this._form_vertical;\n\t\t\tdelete config.elements;\n\t\t}\n\n\t\tif (this._settings.elementsConfig)\n\t\t\tthis._rec_apply_settings(this._collection, config.elementsConfig);\n\t\t\n\t\treturn collection;\n\t},\n\t_rec_apply_settings:function(col, settings){\n\t\tfor (var i=0; i<col.length; i++){\n\t\t\tvar element = col[i];\n\t\t\textend( element, settings );\n\t\t\tvar nextsettings = settings;\n\n\t\t\tif (element.elementsConfig)\n\t\t\t\tnextsettings = extend(extend({}, element.elementsConfig), settings);\n\n\t\t\tvar sub;\n\t\t\tif (element.body)\n\t\t\t\tsub = [element.body];\n\t\t\telse\n\t\t\t\tsub = element.rows || element.cols || element.cells || element.body;\n\n\t\t\tif (sub)\n\t\t\t\tthis._rec_apply_settings(sub, nextsettings);\n\t\t}\n\t},\n\t$getSize:function(dx, dy){\n\t\tvar sizes = layout.api.$getSize.call(this, dx, dy);\n\t\tvar parent = this.getParentView();\n\t\tvar index = this._vertical_orientation?3:1;\n\t\tif (parent && this._vertical_orientation != parent._vertical_orientation)\n\t\t\tsizes[index]+=100000;\n\t\t\n\t\tif (DEBUG) debug_size_box(this, sizes, true);\n\t\treturn sizes;\n\t},\n\trender:function(){\n\t},\n\trefresh:function(){\n\t\tthis.render();\n\t}\n};\n\nconst view = protoUI(api, Scrollable, AtomDataLoader, Values, layout.view, ValidateData);\nexport default {api, view};","import base from \"../views/view\";\nimport AutoTooltip from \"../core/autotooltip\";\nimport EditAbility from \"../core/editability\";\nimport MapCollection from \"../core/mapcollection\";\nimport MouseEvents from \"../core/mouseevents\";\nimport Scrollable from \"../core/scrollable\";\nimport SingleRender from \"../core/singlerender\";\nimport AtomDataLoader from \"../core/atomdataloader\";\nimport EventSystem from \"../core/eventsystem\";\nimport {locate, createCss} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport template from \"../webix/template\";\nimport {$active} from \"../webix/skin\";\nimport {uid, extend, clone, isUndefined} from \"../webix/helpers\";\nimport {addCss, removeCss} from \"../webix/html\";\nimport RenderStack from \"../core/renderstack\";\nimport CodeParser from \"../core/codeparser\";\n\n\nconst api = {\n\tname:\"property\",\n\t$init:function(){\n\t\tthis._contentobj.className+=\" webix_property\";\n\t\tthis._contentobj.setAttribute(\"role\", \"listbox\");\n\t\tthis._destroy_with_me = [];\n\n\t\tthis.attachEvent(\"onAfterEditStart\", function(id){\n\t\t\tvar node = this.getItemNode(id);\n\t\t\taddCss(node, \"webix_focused\");\n\t\t});\n\t\tthis.attachEvent(\"onAfterEditStop\", function(id, editor){\n\t\t\tvar node = this.getItemNode(editor.config.id);\n\t\t\tremoveCss(node, \"webix_focused\");\n\t\t});\n\t},\n\tdefaults:{\n\t\tnameWidth:100,\n\t\teditable:true\n\t},\n\ton_render:{\n\t\tpassword:function(value){\n\t\t\treturn !value && value !== 0 ? \"\" : \"&bull;\".repeat(value.toString().length);\n\t\t},\n\t\tcheckbox:function(value){\n\t\t\treturn \"<input type='checkbox' class='webix_property_check' \"+(value?\"checked\":\"\")+\">\";\n\t\t},\n\t\tcolor:function(value){\n\t\t\treturn \"<div class='webix_property_col_ind' style='background-color:\"+(value||\"#FFFFFF\")+\";'></div>\" + value;\n\t\t}\n\t},\n\ton_edit:{\n\t\tlabel:false\n\t},\n\t_id:/*@attr*/\"webix_f_id\",\n\ton_click:{\n\t\twebix_property_check:function(ev){\n\t\t\tconst id = this.locate(ev);\n\t\t\tconst item = this.getItem(id);\n\t\t\tthis.callEvent(\"onCheck\", [id, item.value = !item.value]);\n\t\t\treturn false;\n\t\t}\n\t},\n\ton_dblclick:{\n\t},\n\tregisterType:function(name, data){\n\t\tif (!isUndefined(data.template))\n\t\t\tthis.on_render[name] = data.template;\n\t\tif (!isUndefined(data.editor))\n\t\t\tthis.on_edit[name] = data.editor;\n\t\tif (!isUndefined(data.click))\n\t\t\tfor (var key in data.click)\n\t\t\t\tthis.on_click[key] = data.click[key];\n\t},\n\telements_setter:function(data){\n\t\tthis._idToLine = {};\n\t\tfor(var i =0; i < data.length; i++){\n\t\t\tvar line = data[i];\n\t\t\tif (line.type == \"multiselect\")\n\t\t\t\tline.optionslist = true;\n\n\t\t\t//line.type \t= \tline.type||\"label\";\n\t\t\tline.id \t=\tline.id||uid();\n\t\t\tline.label \t=\tline.label||\"\";\n\t\t\tline.value \t=\tline.value||\"\";\n\t\t\tthis._idToLine[line.id] = i;\n\t\t\tthis._map_options(data[i]);\n\t\t}\n\t\treturn data;\n\t},\n\tshowItem:function(id){\n\t\tRenderStack.showItem.call(this, id);\n\t},\n\tlocate:function(){\n\t\treturn locate(arguments[0], this._id);\n\t},\n\tgetItemNode:function(id){\n\t\treturn this._dataobj.childNodes[this._idToLine[id]];\n\t},\n\tgetItem:function(id){\n\t\treturn this._settings.elements[this._idToLine[id]];\n\t},\n\t_get_editor_type:function(id){\n\t\tvar type = this.getItem(id).type;\n\t\tif (type == \"checkbox\") return \"inline-checkbox\";\n\t\tvar alter_type = this.on_edit[type];\n\t\treturn (alter_type === false)?false:(alter_type||type);\n\t},\n\t_get_edit_config:function(id){\n\t\treturn this.getItem(id);\n\t},\n\t_find_cell_next:function(start, check , direction){\n\t\tlet row = this._idToLine[start.id];\n\t\tlet order = this._settings.elements;\n\t\t\n\t\tif (direction){\n\t\t\tfor (let i=row+1; i<order.length; i++){\n\t\t\t\tif (check.call(this, order[i].id))\n\t\t\t\t\treturn order[i].id;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let i=row-1; i>=0; i--){\n\t\t\t\tif (check.call(this, order[i].id))\n\t\t\t\t\treturn order[i].id;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\tupdateItem:function(key, data){\n\t\tconst line = this.getItem(key);\n\t\tif (line)\n\t\t\textend(line, data||{}, true);\n\t\tthis.refresh();\n\t},\n\t_cellPosition:function(id){\n\t\tvar html = this.getItemNode(id);\n\t\treturn {\n\t\t\tleft:html.offsetLeft+this._settings.nameWidth,\n\t\t\ttop:html.offsetTop,\n\t\t\theight:html.firstChild.offsetHeight,\n\t\t\twidth:this._data_width,\n\t\t\tparent:this._contentobj\n\t\t};\n\t},\n\t_clear:function(){\n\t\tvar lines = this._settings.elements;\n\t\tfor (var i=0; i<lines.length; i++)\n\t\t\tlines[i].value = \"\";\n\t},\n\tclear:function(){\n\t\tthis._clear();\n\t\tthis._props_dataset = {};\n\t\tthis.refresh();\n\t},\n\tsetValues:function(data, update){\n\t\tif (this._settings.complexData)\n\t\t\tdata = CodeParser.collapseNames(data, \"\", {}, (v) => isUndefined(this._idToLine[v]));\n\n\t\tif(!update) this._clear();\n\t\tfor(var key in data){\n\t\t\tvar line = this.getItem(key);\n\t\t\tif (line)\n\t\t\t\tline.value = data[key];\n\t\t}\n\n\t\tthis._props_dataset = data;\n\t\tthis.refresh();\n\t},\n\tgetValues:function(){\n\t\tvar data = clone(this._props_dataset||{});\n\t\tfor (var i = 0; i < this._settings.elements.length; i++) {\n\t\t\tvar line = this._settings.elements[i];\n\t\t\tif (line.type != \"label\")\n\t\t\t\tdata[line.id] = line.value;\n\t\t}\n\n\t\tif (this._settings.complexData)\n\t\t\tdata = CodeParser.expandNames(data);\n\n\t\treturn data;\n\t},\n\trefresh:function(){\n\t\tthis.render();\n\t},\n\t$setSize:function(x,y){\n\t\tif (base.api.$setSize.call(this, x, y)){\n\t\t\tthis._data_width = this._content_width - this._settings.nameWidth;\n\t\t\tthis.render();\n\t\t}\n\t},\n\t$getSize:function(dx,dy){\n\t\tif (this._settings.autoheight){\n\t\t\tvar count = this._settings.elements.length;\n\t\t\tthis._settings.height = Math.max(this.type.height*count, this._settings.minHeight||0);\n\t\t}\n\t\treturn base.api.$getSize.call(this, dx, dy);\n\t},\n\t_toHTML:function(){\n\t\tvar html = [];\n\t\tvar els = this._settings.elements;\n\t\tif (els)\n\t\t\tfor (var i=0; i<els.length; i++){\n\t\t\t\tvar data = els[i];\n\t\t\t\tif (data.css && typeof data.css == \"object\")\n\t\t\t\t\tdata.css = createCss(data.css);\n\n\t\t\t\tvar pre = \"<div \"+/*@attr*/\"webix_f_id\"+\"=\\\"\"+data.id+\"\\\"\"+(data.type!==\"label\"?\"role=\\\"option\\\" tabindex=\\\"0\\\"\":\"\")+\" class=\\\"webix_property_line \"+(data.css||\"\")+\"\\\">\";\n\t\t\t\tif (data.type == \"label\")\n\t\t\t\t\thtml[i] = pre+\"<div class='webix_property_label_line'>\"+data.label+\"</div></div>\";\n\t\t\t\telse {\n\t\t\t\t\tvar render = this.on_render[data.type],\n\t\t\t\t\t\tcontent;\n\t\t\t\t\tvar post = \"<div class='webix_property_label' style='width:\"+this._settings.nameWidth+\"px'>\"+data.label+\"</div><div class='webix_property_value' style='width:\"+this._data_width+\"px'>\";\n\t\t\t\t\tif (data.collection || data.options){\n\t\t\t\t\t\tcontent = data.template(data, this.type, data.value, data);\n\t\t\t\t\t} else if(data.format){\n\t\t\t\t\t\tcontent = data.format(data.value);\n\t\t\t\t\t} else\n\t\t\t\t\t\tcontent = data.value;\n\t\t\t\t\tif (render)\n\t\t\t\t\t\tcontent = render.call(this, data.value, data);\n\t\t\t\t\thtml[i] = pre+post+content+\"</div></div>\";\n\t\t\t\t}\n\t\t\t}\n\t\treturn html.join(\"\");\n\t},\n\ttype:{\n\t\theight:24,\n\t\ttemplateStart:template(\"\"),\n\t\ttemplateEnd:template(\"</div>\")\n\t},\n\t$skin: function(){\n\t\tthis.type.height = $active.propertyItemHeight;\n\t}\n};\n\n\nconst view = protoUI(api, AutoTooltip, EditAbility, MapCollection, MouseEvents, Scrollable, SingleRender, AtomDataLoader, EventSystem, base.view);\nexport default {api, view};","import {index, triggerEvent, preventEvent} from \"../webix/html\";\nimport {protoUI, $$} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport {extend, copy, toFunctor, isArray} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport template from \"../webix/template\";\n\nimport i18n from \"../webix/i18n\";\nimport MouseEvents from \"../core/mouseevents\";\nimport EventSystem from \"../core/eventsystem\";\nimport base from \"../views/view\";\nimport DateHelper from \"../core/date\";\nimport KeysNavigation from \"../core/keysnavigation\";\n\n\nconst api = {\n\tname:\"calendar\",\n\n\tdefaults:{\n\t\tdate: DateHelper.datePart(new Date()), //selected date, not selected by default\n\t\tnavigation: true,\n\t\tmonthSelect: true,\n\t\tweekHeader: true,\n\t\tmonthHeader: true,\n\t\tweekNumber: false,\n\t\tskipEmptyWeeks: false,\n\t\tcalendarHeader: \"%F %Y\",\n\t\t//calendarTime: \"%H:%i\",\n\t\tevents:DateHelper.isHoliday,\n\t\tminuteStep: 5,\n\t\ttimeIcon:\"wxi-clock\",\n\t\ticons: false,\n\t\ttimepickerHeight: 30,\n\t\theaderHeight: 30,\n\t\tdayTemplate: function(d){\n\t\t\treturn d.getDate();\n\t\t},\n\t\twidth: 260,\n\t\theight: 250,\n\t\tseparator:\", \"\n\t},\n\n\tdayTemplate_setter: template,\n\tcalendarHeader_setter:DateHelper.dateToStr,\n\tcalendarTime_setter:function(format){\n\t\tthis._calendarTime = format;\n\t\treturn DateHelper.dateToStr(format);\n\t},\n\tdate_setter:function(date){\n\t\tdate = DateHelper.copy( this._string_to_date(date) );\n\t\tdate.setDate(1);\n\t\treturn date;\n\t},\n\tmaxDate_setter:function(date){\n\t\treturn DateHelper.datePart( this._string_to_date(date) );\n\t},\n\tminDate_setter:function(date){\n\t\treturn DateHelper.datePart( this._string_to_date(date) );\n\t},\n\tminTime_setter:function(time){\n\t\tif(typeof(time) == \"string\"){\n\t\t\ttime = i18n.parseTimeFormatDate(time);\n\t\t\ttime = [time.getHours(), time.getMinutes()];\n\t\t}\n\t\treturn time;\n\t},\n\tmaxTime_setter:function(time){\n\t\tif(typeof(time) == \"string\"){\n\t\t\ttime = i18n.parseTimeFormatDate(time);\n\t\t\ttime = [time.getHours(), time.getMinutes()];\n\t\t}\n\t\treturn time;\n\t},\n\t_ariaFocus:function(){\n\t\t_event(this.$view, \"mousedown\", () => {\n\t\t\tthis._mouse_time = new Date();\n\t\t});\n\t\t_event(this.$view, \"focus\", e => {\n\t\t\t// in daterange\n\t\t\tif (this._settings.master) return;\n\n\t\t\tconst prev = e.relatedTarget;\n\t\t\tconst css = e.target.className.indexOf(\"webix_cal_day\") !== -1;\n\t\t\tif (prev && (new Date() - this._mouse_time > 100) && css && this.$view.contains(prev)){\n\t\t\t\tconst day = this._locate_day(e.target);\n\t\t\t\tif (!this._selectedDay(day)) this._moveSelection(day);\n\t\t\t}\n\t\t}, { capture: true });\n\t},\n\t$init: function() {\n\t\tthis._viewobj.className += \" webix_calendar\";\n\t\tthis._viewobj.setAttribute(\"role\", \"region\");\n\t\tthis._viewobj.setAttribute(\"aria-label\", i18n.aria.calendar);\n\n\t\t//special dates\n\t\tthis._special_dates = {};\n\t\tthis._selected_days = {};\n\t\tthis._zoom_level = 0;\n\n\t\t//navigation and aria\n\t\tthis._ariaFocus();\n\t\tthis.attachEvent(\"onKeyPress\", this._onKeyPress);\n\t},\n\t_onKeyPress:function(code, e){\n\t\tconst target = e.target, role = target.getAttribute(\"role\");\n\t\tif((code === 13 || code === 32) && (role == \"button\" || role == \"log\") && !this._settings.disabled){\n\t\t\ttriggerEvent(target, \"MouseEvent\", \"click\");\n\t\t\tpreventEvent(e);\n\t\t}\n\t},\n\tminuteStep_setter(value){\n\t\treturn Math.max( Math.min(value, 60), this.defaults.minuteStep );\n\t},\n\ttype_setter: function(value){\n\t\tif(value == \"time\"){\n\t\t\tthis._zoom_in = true;\n\t\t\tthis._zoom_level = -1;\n\t\t}\n\t\telse if(value == \"year\"){\n\t\t\tthis._fixed = true;\n\t\t}\n\t\treturn value;\n\t},\n\t$setSize:function(x,y){\n\n\t\tif(base.api.$setSize.call(this,x,y)){\n\t\t\t//repaint calendar when size changed\n\t\t\tthis.render();\n\t\t}\n\t},\n\t$getSize:function(dx, dy){\n\t\tconst s = this._settings;\n\t\tif (s.cellHeight && !s.type){\n\t\t\tconst state = this._getDateBoundaries(s.date);\n\t\t\ts.height = s.cellHeight * state._rows + s.headerHeight + (s.weekHeader?$active.calendarWeekHeaderHeight:0) +\n\t\t\t\t(s.timepicker||this._icons?s.timepickerHeight:0) + (this._content_padding+$active.borderWidth)*2;\n\t\t}\n\t\treturn base.api.$getSize.call(this, dx,dy);\n\t},\n\tmoveSelection:function(mode, details, focus){\n\t\tif (this.config.master) return; //in daterange\n\t\tvar start = this.getSelectedDate(true);\n\t\tvar date = DateHelper.copy(start || this.getVisibleDate());\n\t\tthis._moveSelection(date, mode, focus);\n\t},\n\t_moveSelection:function(date, mode, focus){\n\t\tconst css = this._zoom_logic[this._zoom_level]._keyshift(date, mode, this);\n\t\tif (focus !== false)\n\t\t\tthis._restore_focus(css);\n\t},\n\t_restore_focus:function(css, ind){\n\t\tlet sel;\n\t\tif (ind) {\n\t\t\tsel = this._viewobj.querySelector(\".webix_cal_body\");\n\t\t\tsel = sel.childNodes[ind.rind].childNodes[ind.cind + (this._settings.weekNumber?1:0)];\n\t\t} else\n\t\t\tsel = this._viewobj.querySelector(\".\"+css+\"[tabindex='0']\");\n\t\tif (sel) sel.focus();\n\t},\n\t_getDateBoundaries: function(date, reset) {\n\t\t// addition information about rendering event:\n\t\t// how many days from the previous month,\n\t\t// next,\n\t\t// number of weeks to display and so on\n\t\t\n\t\tif (!this._set_date_bounds || reset){\n\t\t\tvar month = date.getMonth();\n\t\t\tvar year = date.getFullYear();\n\n\t\t\tvar next = new Date(year, month+1, 1);\n\t\t\tvar start = DateHelper.weekStart(new Date(year, month, 1));\n\n\t\t\tvar days = Math.round((next.valueOf() - start.valueOf())/(60*1000*60*24));\n\t\t\tvar rows = this._settings.skipEmptyWeeks?Math.ceil(days/7):6;\n\n\t\t\tthis._set_date_bounds = { _month: month, _start:start, _next:next, _rows: rows};\n\t\t}\n\n\t\treturn this._set_date_bounds;\n\t},\n\t$skin:function(){\n\t\tif($active.calendar){\n\t\t\tif( $active.calendar.width)\n\t\t\t\tthis.defaults.width = $active.calendar.width;\n\t\t\tif( $active.calendar.height)\n\t\t\t\tthis.defaults.height = $active.calendar.height;\n\t\t\tif( $active.calendar.headerHeight)\n\t\t\t\tthis.defaults.headerHeight = $active.calendar.headerHeight;\n\t\t\tif( $active.calendar.timepickerHeight)\n\t\t\t\tthis.defaults.timepickerHeight = $active.calendar.timepickerHeight;\n\t\t}\n\t\tthis._content_padding = $active.layoutPadding.form;\n\t},\n\t_getColumnConfigSizes: function(date){ \n\t\tvar bounds = this._getDateBoundaries(date);\n\n\t\tvar s = this._settings;\n\t\tvar _columnsHeight = [];\n\t\tvar _columnsWidth = [];\n\n\t\tvar containerWidth = this._content_width - (this._content_padding+$active.borderWidth)*2;\n\n\t\tvar containerHeight = this._content_height - (s.monthHeader?s.headerHeight:0) - (s.weekHeader?$active.calendarWeekHeaderHeight:0) -\n\t\t\t(s.timepicker||this._icons?s.timepickerHeight:0) - (this._content_padding+$active.borderWidth)*2;\n\n\t\tvar columnsNumber = (s.weekNumber)?8:7;\n\t\tfor(var i=0; i<columnsNumber; i++) {\n\t\t\t_columnsWidth[i] = Math.ceil(containerWidth/(columnsNumber-i));\n\t\t\tcontainerWidth -= _columnsWidth[i];\n\t\t}\n\n\t\tvar rowsNumber = bounds._rows;\n\t\tfor (var k = 0; k < rowsNumber; k++) {\n\t\t\t_columnsHeight[k] = Math.ceil(containerHeight/(rowsNumber-k) );\n\t\t\tcontainerHeight -= _columnsHeight[k];\n\t\t}\n\t\treturn [_columnsWidth, _columnsHeight];\n\t},\n\ticons_setter: function(value){\n\t\tif(!value)\n\t\t\tthis._icons = null;\n\t\telse if(typeof value == \"object\")\n\t\t\tthis._icons = value;\n\t\telse\n\t\t\tthis._icons = this._icons2;\n\t},\n\t_icons: [],\n\t_icons2: [\n\n\t\t{\n\t\t\ttemplate: function(){\n\t\t\t\treturn \"<span role='button' tabindex='0' class='webix_cal_icon_today webix_cal_icon'>\"+i18n.calendar.today+\"</span>\";\n\t\t\t},\n\t\t\ton_click:{\n\t\t\t\t\"webix_cal_icon_today\": function(){\n\t\t\t\t\tvar date = new Date();\n\t\t\t\t\tif(!this._settings.timepicker)\n\t\t\t\t\t\tdate = DateHelper.datePart(date);\n\t\t\t\t\tthis.setValue(date, \"user\");\n\t\t\t\t\tthis.callEvent(\"onTodaySet\",[this.getSelectedDate()]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\ttemplate: function(){\n\t\t\t\treturn \"<span role='button' tabindex='0' class='webix_cal_icon_clear webix_cal_icon'>\"+i18n.calendar.clear+\"</span>\";\n\t\t\t},\n\t\t\ton_click:{\n\t\t\t\t\"webix_cal_icon_clear\": function(){\n\t\t\t\t\tthis.setValue(\"\", \"user\");\n\t\t\t\t\tthis.callEvent(\"onDateClear\",[this.getSelectedDate()]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t],\n\trefresh:function(){ this.render(); },\n\trender: function() {\n\t\t//reset zoom level\n\t\tthis._zoom_level = 0;\n\t\tthis._zoom_size = false;\n\n\t\tvar s = this._settings;\n\n\t\tif (!this.isVisible(s.id)) return;\n\t\tthis._current_time = DateHelper.datePart(new Date());\n\n\t\tthis.callEvent(\"onBeforeRender\",[]);\n\n\t\tvar date = this.getVisibleDate();\n\n\t\tvar bounds = this._getDateBoundaries(date, true);\n\t\tvar sizes = this._getColumnConfigSizes(date);\n\t\tvar cpad = this._content_padding + \"px\";\n\t\tvar width = sizes[0];\n\t\tvar height = sizes[1];\n\n\t\tvar html = \"\";\n\t\tif (s.monthHeader){\n\t\t\thtml += \"<div class='webix_cal_month' style='margin:0 \"+cpad+\"'><span role='log' aria-live='assertive' aria-atomic='true' class='webix_cal_month_name\"+((!s.monthSelect || !s.navigation)?\" webix_readonly'\":\"' role='button' tabindex='0'\")+\">\"+s.calendarHeader(date)+\"</span>\";\n\t\t\tif (s.navigation)\n\t\t\t\thtml += \"<div role='button' tabindex='0' aria-label='\"+i18n.aria.navMonth[0]+\"' class='webix_cal_prev_button'></div><div role='button' tabindex='0' aria-label='\"+i18n.aria.navMonth[1]+\"' class='webix_cal_next_button'></div>\";\n\t\t\thtml += \"</div>\";\n\t\t}\n\n\t\tif(s.weekHeader)\n\t\t\thtml += \"<div class='webix_cal_header' style='margin:0 \"+cpad+\"' aria-hidden='true'>\"+this._week_template(width)+\"</div>\";\n\t\thtml += \"<div class='webix_cal_body' role='grid' style='margin:0 \"+cpad+\"'>\"+this._body_template(width, height, bounds)+\"</div>\";\n\n\t\tif (s.timepicker || this._icons){\n\t\t\thtml += \"<div class='webix_cal_footer' style='margin:0 \"+cpad+\"'>\";\n\t\t\tif(s.timepicker)\n\t\t\t\thtml += this._timepicker_template(date);\n\n\t\t\tif(this._icons)\n\t\t\t\thtml += this._icons_template();\n\t\t\thtml += \"</div>\";\n\t\t}\n\n\t\tthis._contentobj.innerHTML = html;\n\t\tthis._contentobj.firstChild.style.marginTop = cpad;\n\n\t\tif(s.type == \"time\"){\n\t\t\tthis._changeZoomLevel(-1,date);\n\t\t}\n\t\telse if(s.type == \"month\"){\n\t\t\tthis._changeZoomLevel(1,date);\n\t\t}\n\t\telse if(s.type == \"year\"){\n\t\t\tthis._changeZoomLevel(2,date);\n\t\t}\n\n\t\tthis._fix_cover();\n\t\tthis.callEvent(\"onAfterRender\",[]);\n\t},\n\t_icons_template: function(date){\n\t\tvar html =\t\"<div class='webix_cal_icons'>\";\n\t\tvar icons = this._icons;\n\n\t\tfor(var i=0; i < icons.length; i++){\n\t\t\tif(icons[i].template){\n\t\t\t\tvar template = (typeof(icons[i].template) == \"function\"?icons[i].template: template(icons[i].template));\n\t\t\t\thtml += template.call(this,date);\n\t\t\t}\n\t\t\tif(icons[i].on_click){\n\t\t\t\textend(this.on_click,icons[i].on_click);\n\t\t\t}\n\t\t}\n\t\thtml += \"</div>\";\n\t\treturn html;\n\t},\n\t_timepicker_template:function(date){\n\t\tvar timeFormat = this._settings.calendarTime||i18n.timeFormatStr;\n\t\tvar clock = this._settings.timeIcon;\n\t\tvar tpl = \"\";\n\n\t\tif(!this._settings.master)\n\t\t\ttpl = \"<div role='button' tabindex='0' class='webix_cal_time\"+(this._icons?\" webix_cal_time_icons\":\"\")+\"'><span class='webix_icon \"+clock+\"'></span> \"+timeFormat(date)+\"</div>\";\n\t\telse{\n\t\t\t//daterange needs two clocks\n\t\t\tvar range_date = copy($$(this._settings.master)._settings.value);\n\t\t\tif(DateHelper.equal(range_date.end, date))\n\t\t\t\trange_date.start = range_date.end;\n\t\t\t\t\n\t\t\tfor(var i in range_date){\n\t\t\t\ttpl += \"<div role='button' tabindex='0' class='webix_range_time_\"+i+\" webix_cal_time'><span class='webix_icon \"+clock+\"'></span> \"+timeFormat(range_date[i])+\"</div>\";\n\t\t\t}\n\t\t}\n\t\treturn tpl;\n\t},\n\t_week_template: function(widths){\n\t\tvar s = this._settings;\n\t\tvar week_template = \"\";\n\t\tvar correction = 0;\n\n\t\tif(s.weekNumber) {\n\t\t\tcorrection = 1;\n\t\t\tweek_template += \"<div class='webix_cal_week_header' style='width: \"+widths[0]+\"px;' >\"+(s.calendarWeekHeader||\"\")+\"</div>\";\n\t\t}\n\t\t\n\t\tvar k = (DateHelper.startOnMonday)?1:0;\n\t\tfor (var i=0; i<7; i++){ // 7 days total\n\t\t\tvar day_index = (k + i) % 7; // 0 - Sun, 6 - Sat as in Locale.date.day_short\n\t\t\tvar day = i18n.calendar.dayShort[day_index]; // 01, 02 .. 31\n\t\t\tweek_template += \"<div day='\"+day_index+\"' style='width: \"+widths[i+correction]+\"px;' >\"+day+\"</div>\";\n\t\t}\n\t\t\n\t\treturn week_template;\n\t},\n\tblockDates_setter:function(value){\n\t\treturn toFunctor(value, this.$scope);\n\t},\n\t_day_css:function(day, bounds){\n\t\tvar css = \"\", isOutside = false;\n\t\tif (DateHelper.equal(day, this._current_time))\n\t\t\tcss += \" webix_cal_today\";\n\t\tif (!this._checkDate(day))\n\t\t\tcss += \" webix_cal_day_disabled\";\n\t\tif (day.getMonth() != bounds._month){\n\t\t\tisOutside = true;\n\t\t\tcss += \" webix_cal_outside\";\n\t\t}\n\t\tif (!isOutside && this._selectedDay(day))\n\t\t\tcss += \" webix_cal_select\";\n\t\tif (this._settings.events)\n\t\t\tcss+=\" \"+(this._settings.events(day, isOutside) || \"\");\n\t\tcss += \" webix_cal_day\";\n\t\treturn css;\n\t},\n\t_body_template: function(widths, heights, bounds){\n\t\tconst s = this._settings;\n\t\tconst start = s.weekNumber ? 1 : 0;\n\t\tlet day = DateHelper.datePart(DateHelper.copy(bounds._start));\n\t\tlet weekNumber = DateHelper.getISOWeek(DateHelper.add(day, 2, \"day\", true));\n\n\t\tlet html = \"\", focusable, sqSize;\n\t\tfor (let y=0; y<heights.length; y++){\n\t\t\thtml += \"<div class='webix_cal_row' role='row' style='height:\"+heights[y]+\"px;line-height:\"+heights[y]+\"px'>\";\n\n\t\t\tif (start){\n\t\t\t\t// recalculate week number for the first week of a year\n\t\t\t\tif(!day.getMonth() && day.getDate()<7)\n\t\t\t\t\tweekNumber =  DateHelper.getISOWeek(DateHelper.add(day,2,\"day\", true));\n\t\t\t\thtml += \"<div class='webix_cal_week_num' aria-hidden='true' style='width:\"+widths[0]+\"px'>\"+weekNumber+\"</div>\";\n\t\t\t}\n\n\t\t\tfor (let x=start; x<widths.length; x++){\n\t\t\t\tconst sel = this._selectedDay(day);\n\t\t\t\tconst css = this._day_css(day, bounds);\n\t\t\t\tlet d = s.dayTemplate.call(this, day);\n\n\t\t\t\tlet alabel = \"\";\n\t\t\t\tif (typeof d == \"object\"){\n\t\t\t\t\talabel = d.aria || alabel;\n\t\t\t\t\td = d.text;\n\t\t\t\t} else\n\t\t\t\t\talabel = DateHelper.dateToStr(i18n.aria.dateFormat)(day);\n\n\t\t\t\tconst isOutside = day.getMonth() != bounds._month;\n\t\t\t\tlet tabindex = sel && !isOutside ? \"0\" : \"-1\";\n\t\t\t\tif (day.getDate() == 1 && !isOutside) tabindex = \"$webix_tabindex\";\n\t\t\t\tif (tabindex == \"0\") focusable = true;\n\n\t\t\t\tsqSize = Math.min(heights[y], widths[x]);\n\t\t\t\thtml += \"<div day='\"+x+\"' role='gridcell' \"+(isOutside?\"aria-hidden='true'\":\"\")+\" aria-label='\"+alabel+\n\t\t\t\t\t\"' tabindex='\"+tabindex+\"' aria-selected='\"+(sel && !isOutside?\"true\":\"false\")+\"' class='\"+css+\"' style='text-align:center; width:\"+widths[x]+\n\t\t\t\t\t\"px'><span aria-hidden='true' class='webix_cal_day_inner' style='display:inline-block; \"+this._getCalSizesString(sqSize,sqSize)+\"'>\"+d+\"</span></div>\";\n\t\t\t\tday = DateHelper.add(day, 1, \"day\");\n\n\t\t\t\tif (day.getHours())\n\t\t\t\t\tday = DateHelper.datePart(day);\n\t\t\t}\n\n\t\t\thtml += \"</div>\";\n\t\t\tweekNumber++;\n\t\t}\n\t\treturn html.replace(\"$webix_tabindex\", (focusable || s.master) ? \"-1\" : \"0\");\n\t},\n\t_changeDate:function(dir, step){\n\t\tif(!step) { step = this._zoom_logic[this._zoom_level]._changeStep; }\n\n\t\tconst now = this._settings.date;\n\t\tconst next = DateHelper.add(now, dir*step, \"month\", true);\n\t\tthis._changeDateInternal(now, next, dir);\n\t},\n\t_changeDateInternal:function(now, next, dir){\n\t\tif(this.callEvent(\"onBeforeMonthChange\", [now, next])){\n\t\t\tif (this._zoom_level){\n\t\t\t\tthis._update_zoom_level(next);\n\t\t\t} else {\n\t\t\t\tthis.showCalendar(next);\n\t\t\t\tif (this._settings.monthHeader && this._settings.navigation){\n\t\t\t\t\tconst css = \"webix_cal_\"+(dir>0?\"next\":\"prev\")+\"_button\";\n\t\t\t\t\tthis._restore_focus(css);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.callEvent(\"onAfterMonthChange\", [next, now]);\n\t\t}\n\t},\n\t_zoom_logic:{\n\t\t\"-2\":{\n\t\t\t_isBlocked: function(i){\n\t\t\t\tvar config = this._settings,\n\t\t\t\t\tdate = config.date,\n\t\t\t\t\tisBlocked = false;\n\n\t\t\t\tvar minHour = (config.minTime ? config.minTime[0] : 0);\n\t\t\t\tvar maxHour = (config.maxTime ? (config.maxTime[0] + ( config.maxTime[1] ? 1 : 0 )) : 24);\n\n\t\t\t\tvar minMinute = (config.minTime && (date.getHours()==minHour) ? config.minTime[1] : 0);\n\t\t\t\tvar maxMinute = (config.maxTime && config.maxTime[1] && (date.getHours()==(maxHour-1)) ? config.maxTime[1] : 60);\n\n\t\t\t\tif(this._settings.blockTime){\n\t\t\t\t\tvar d = DateHelper.copy(date);\n\t\t\t\t\td.setMinutes(i);\n\t\t\t\t\tisBlocked = this._settings.blockTime(d);\n\t\t\t\t}\n\t\t\t\treturn (i < minMinute || i >= maxMinute || isBlocked);\n\n\t\t\t},\n\t\t\t_setContent:function(next, i){ next.setMinutes(i); },\n\t\t\t_findActive:function(date, mode, calendar){\n\t\t\t\tif(!this._isBlocked.call(calendar, date.getMinutes()))\n\t\t\t\t\treturn date;\n\t\t\t\telse{\n\t\t\t\t\tvar step = calendar._settings.minuteStep;\n\t\t\t\t\tvar newdate = DateHelper.add(date, mode ==\"right\"?step:-step, \"minute\", true);\n\t\t\t\t\tif(date.getHours() === newdate.getHours())\n\t\t\t\t\t\treturn  this._findActive(newdate, mode, calendar);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"-1\":{\n\t\t\t_isBlocked: function(i){\n\t\t\t\tvar config = this._settings,\n\t\t\t\t\tdate = config.date;\n\n\t\t\t\tvar minHour = (config.minTime? config.minTime[0]:0);\n\t\t\t\tvar maxHour = (config.maxTime? config.maxTime[0]+(config.maxTime[1]?1:0):24);\n\n\t\t\t\tif (i < minHour || i >= maxHour) return true;\n\n\t\t\t\tif(config.blockTime){\n\t\t\t\t\tvar d = DateHelper.copy(date);\n\t\t\t\t\td.setHours(i);\n\t\t\t\t\t\n\t\t\t\t\tvar minMinute = (config.minTime && (i==minHour) ? config.minTime[1] : 0);\n\t\t\t\t\tvar maxMinute = (config.maxTime && config.maxTime[1] && (i==(maxHour-1)) ? config.maxTime[1] : 60);\n\n\t\t\t\t\tfor (var j=minMinute; j<maxMinute; j+= config.minuteStep){\n\t\t\t\t\t\td.setMinutes(j);\n\t\t\t\t\t\tif (!config.blockTime(d))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t},\n\t\t\t_setContent:function(next, i){ next.setHours(i); },\n\t\t\t_keyshift:function(date, mode, calendar){\n\t\t\t\tvar newdate, inc, step = calendar._settings.minuteStep;\n\t\t\t\t\n\t\t\t\tif(mode === \"bottom\" || mode === \"top\"){\n\t\t\t\t\tdate.setHours(mode===\"bottom\"?23:0);\n\t\t\t\t\tdate.setMinutes(mode===\"bottom\"?55:0);\n\t\t\t\t\tdate.setSeconds(0);\n\t\t\t\t\tdate.setMilliseconds(0);\n\t\t\t\t\tnewdate = date;\n\t\t\t\t}\n\t\t\t\telse if(mode === \"left\" || mode === \"right\"){//minutes\n\n\t\t\t\t\tinc = (mode===\"right\"?step:-step);\n\t\t\t\t\tif(mode === \"left\" && date.getMinutes() < step ) inc = 60-step;\n\t\t\t\t\tif(mode === \"right\" && date.getMinutes() >= (60-step)) inc = step-60;\n\t\t\t\t\tinc -= date.getMinutes()%step;\n\t\t\t\t\tnewdate = calendar._zoom_logic[\"-2\"]._findActive(DateHelper.add(date, inc, \"minute\"), mode, calendar);\n\t\t\t\t}\n\t\t\t\telse if(mode === \"up\" || mode === \"down\"){ //hours\n\t\t\t\t\tinc = mode===\"down\"?1:-1;\n\t\t\t\t\tif(mode === \"down\" && date.getHours() === 23) inc = -23;\n\t\t\t\t\tif(mode === \"up\" && date.getHours() === 0) inc = 23;\n\t\t\t\t\tnewdate = this._findActive(DateHelper.add(date, inc, \"hour\"), mode, calendar);\n\t\t\t\t}\n\t\t\t\telse if(mode === false)\n\t\t\t\t\tnewdate = this._findActive(date, mode, calendar);\n\n\t\t\t\tif(newdate){\n\t\t\t\t\tcalendar._update_zoom_level(newdate);\n\t\t\t\t\tcalendar.selectDate(newdate, false, false, \"user\");\n\t\t\t\t}\n\n\t\t\t\treturn \"webix_cal_block\"+(mode === \"left\" || mode === \"right\"?\"_min\":\"\");\n\t\t\t},\n\t\t\t_findActive:function(date, mode, calendar){\n\t\t\t\tif(!this._isBlocked.call(calendar, date.getHours()))\n\t\t\t\t\treturn date;\n\t\t\t\telse{\n\t\t\t\t\tvar newdate = DateHelper.add(date, mode ==\"down\"?1:-1, \"hour\", true);\n\t\t\t\t\tif(date.getDate() === newdate.getDate())\n\t\t\t\t\t\treturn  this._findActive(newdate, mode, calendar);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"0\":{//days\n\t\t\t_changeStep:1,\n\t\t\t_keyshift:function(date, mode, calendar){\n\t\t\t\tvar newdate = date;\n\t\t\t\tif(mode === \"pgup\" || mode === \"pgdown\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"pgdown\"?1:-1), \"month\");\n\t\t\t\telse if(mode === \"bottom\")\n\t\t\t\t\tnewdate = new Date(date.getFullYear(), date.getMonth()+1, 0);\n\t\t\t\telse if(mode === \"top\")\n\t\t\t\t\tnewdate = new Date(date.setDate(1));\n\t\t\t\telse if(mode === \"left\" || mode === \"right\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"right\"?1:-1), \"day\");\n\t\t\t\telse if(mode === \"up\" || mode === \"down\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"down\"?1:-1), \"week\");\n\t\t\t\t\n\t\t\t\tif(!calendar._checkDate(newdate))\n\t\t\t\t\tnewdate = calendar._findActive(date, mode);\n\t\t\t\t\n\t\t\t\tif(newdate)\n\t\t\t\t\tcalendar.selectDate(newdate, true, false, \"user\");\n\t\t\t\treturn \"webix_cal_day\";\n\t\t\t},\n\t\t\t\n\t\t},\n\t\t\"1\":{\t//months\n\t\t\t_isBlocked: function(i){\n\t\t\t\tconst date = this.getVisibleDate();\n\t\t\t\tdate.setMonth(i);\n\n\t\t\t\tvar blocked = (this._settings.blockDates && this._settings.blockDates.call(this,date));\n\t\t\t\tvar min = this._settings.minDate,\n\t\t\t\t\tmax = this._settings.maxDate,\n\t\t\t\t\tyear = this._settings.date.getFullYear();\n\n\t\t\t\tif (min && !blocked){\n\t\t\t\t\tvar minYear = min.getFullYear();\n\t\t\t\t\tblocked = year<minYear || (year==minYear && min.getMonth()>i);\n\t\t\t\t}\n\n\t\t\t\tif (max && !blocked){\n\t\t\t\t\tvar maxYear = max.getFullYear();\n\t\t\t\t\tblocked = year>maxYear || (year==maxYear && max.getMonth()<i);\n\t\t\t\t}\n\n\t\t\t\treturn blocked;\n\t\t\t},\n\t\t\t_correctDate: function(date,calendar){\n\t\t\t\tdate = DateHelper.monthStart(date);\n\n\t\t\t\tif (date < calendar._settings.minDate){\n\t\t\t\t\tdate = DateHelper.copy(calendar._settings.minDate);\n\t\t\t\t}\n\t\t\t\telse if (date > calendar._settings.maxDate){\n\t\t\t\t\tdate = DateHelper.copy(calendar._settings.maxDate);\n\t\t\t\t}\n\n\t\t\t\treturn date;\n\t\t\t},\n\t\t\t_getTitle:function(date){ return date.getFullYear(); },\n\t\t\t_getContent:function(i){ return i18n.calendar.monthShort[i]; },\n\t\t\t_setContent:function(next, i){ if(i!=next.getMonth()) next.setDate(1);next.setMonth(i); },\n\t\t\t_changeStep:12,\n\t\t\t_keyshift:function(date, mode, calendar){\n\t\t\t\tvar newdate = date;\n\t\t\t\tif(mode === \"pgup\" || mode === \"pgdown\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"pgdown\"?1:-1), \"year\");\n\t\t\t\telse if(mode === \"bottom\")\n\t\t\t\t\tnewdate = new Date(date.setMonth(11));\n\t\t\t\telse if(mode === \"top\")\n\t\t\t\t\tnewdate = new Date(date.setMonth(0));\n\t\t\t\telse if(mode === \"left\" || mode === \"right\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"right\"?1:-1), \"month\");\n\t\t\t\telse if(mode === \"up\" || mode === \"down\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"down\"?4:-4), \"month\");\n\n\t\t\t\tnewdate = calendar._correctDate(newdate);\n\n\t\t\t\tif(!calendar._checkDate(newdate)){\n\t\t\t\t\tnewdate = calendar._findActive(date, mode);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(newdate){\n\t\t\t\t\tcalendar._update_zoom_level(newdate);\n\t\t\t\t\tcalendar.selectDate(newdate, false, false, \"user\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn \"webix_cal_block\";\n\t\t\t}\n\t\t},\n\t\t\"2\":{\t//years\n\t\t\t_isBlocked: function(i){\n\t\t\t\ti += this._zoom_start_date;\n\n\t\t\t\tconst date = this.getVisibleDate();\n\t\t\t\tdate.setFullYear(i);\n\n\t\t\t\tvar blocked = (this._settings.blockDates && this._settings.blockDates.call(this,date));\n\t\t\t\tvar min = this._settings.minDate;\n\t\t\t\tvar max = this._settings.maxDate;\n\n\t\t\t\tif (blocked || (min && min.getFullYear() > i) || (max && max.getFullYear() < i))\n\t\t\t\t\treturn true;\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\t_correctDate: function(date,calendar){\n\t\t\t\tdate = DateHelper.yearStart(date);\n\t\t\t\tif (date < calendar._settings.minDate){\n\t\t\t\t\tdate = DateHelper.copy(calendar._settings.minDate);\n\t\t\t\t}\n\t\t\t\telse if (date > calendar._settings.maxDate){\n\t\t\t\t\tdate = DateHelper.copy(calendar._settings.maxDate);\n\t\t\t\t}\n\t\t\t\treturn date;\n\t\t\t},\n\t\t\t_getTitle:function(date, calendar){\n\t\t\t\tvar start = date.getFullYear();\n\t\t\t\tcalendar._zoom_start_date = start = start - start%10 - 1;\n\t\t\t\treturn start+\" - \"+(start+10 + 1);\n\t\t\t},\n\t\t\t_getContent:function(i, calendar){ return calendar._zoom_start_date+i; },\n\t\t\t_setContent:function(next, i, calendar){ next.setFullYear(calendar._zoom_start_date+i); },\n\t\t\t_changeStep:12*10,\n\t\t\t_keyshift:function(date, mode, calendar){\n\t\t\t\tvar newdate = date;\n\t\t\t\tif(mode === \"pgup\" || mode === \"pgdown\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"pgdown\"?10:-10), \"year\");\n\t\t\t\telse if(mode === \"bottom\")\n\t\t\t\t\tnewdate = new Date(date.setYear(calendar._zoom_start_date+10));\n\t\t\t\telse if(mode === \"top\")\n\t\t\t\t\tnewdate = new Date(date.setYear(calendar._zoom_start_date));\n\t\t\t\telse if(mode === \"left\" || mode === \"right\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"right\"?1:-1), \"year\");\n\t\t\t\telse if(mode === \"up\" || mode === \"down\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"down\"?4:-4), \"year\");\n\n\t\t\t\tnewdate = calendar._correctDate(newdate);\n\n\t\t\t\tif(!calendar._checkDate(newdate))\n\t\t\t\t\tnewdate = calendar._findActive(date, mode);\n\t\t\t\t\n\t\t\t\tif(newdate){\n\t\t\t\t\tcalendar._update_zoom_level(newdate);\n\t\t\t\t\tcalendar.selectDate(newdate, false, false, \"user\");\n\t\t\t\t}\n\n\t\t\t\treturn \"webix_cal_block\";\n\t\t\t}\n\t\t}\n\t},\n\t_correctBlockedTime: function(){\n\t\tvar i, isDisabledHour, isDisabledMinutes;\n\t\tisDisabledHour = this._zoom_logic[-1]._isBlocked.call(this,this._settings.date.getHours());\n\t\tif(isDisabledHour){\n\t\t\tfor (i= 0; i< 24; i++){\n\t\t\t\tif(!this._zoom_logic[-1]._isBlocked.call(this,i)){\n\t\t\t\t\tthis._settings.date.setHours(i);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tisDisabledMinutes = this._zoom_logic[-2]._isBlocked.call(this,this._settings.date.getMinutes());\n\t\tif(isDisabledMinutes){\n\t\t\tfor (i=0; i<60; i+=this._settings.minuteStep){\n\t\t\t\tif(!this._zoom_logic[-2]._isBlocked.call(this,i)){\n\t\t\t\t\tthis._settings.date.setMinutes(i);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t_update_zoom_level:function(date){\n\t\tvar config, css, height, i, index,  sections, selected, type, width, zlogic, temp, sqSize;\n\t\tvar html = \"\";\n\t\tvar cpad = this._content_padding + \"px\";\n\n\t\tconfig = this._settings;\n\t\tindex = 2 - (config.weekHeader?0:1) - (config.monthHeader?0:1);\n\t\tzlogic = this._zoom_logic[this._zoom_level];\n\t\tsections  = this._contentobj.childNodes;\n\n\t\tif (date)\n\t\t\tthis.define(\"date\", date);\n\t\ttype = config.type;\n\n\t\t//store width and height of draw area\n\t\tif (!this._zoom_size){\n\n\t\t\tthis._reserve_box_height = this._contentobj.offsetHeight - (config.monthHeader||this._zoom_in?config.headerHeight:0) -\n\t\t\t\t(this._content_padding+$active.borderWidth)*2;\n\t\t\tif(type != \"year\" && type != \"month\")\n\t\t\t\tthis._reserve_box_height -= config.timepickerHeight;\n\n\t\t\tthis._reserve_box_width = sections[index].offsetWidth;\n\t\t\tthis._zoom_size = 1;\n\t\t}\n\n\t\t//main section\n\t\tif (this._zoom_in){\n\t\t\t//hours and minutes\n\t\t\theight = this._reserve_box_height/6;\n\t\t\tvar timeColNum = 6;\n\t\t\tvar timeFormat = this._calendarTime||i18n.timeFormat;\n\t\t\tvar enLocale = timeFormat.match(/%([a,A])/);\n\t\t\tif(enLocale)\n\t\t\t\ttimeColNum++;\n\t\t\twidth = parseInt((this._reserve_box_width-3)/timeColNum,10);\n\t\t\tsqSize = Math.min(width,height);\n\n\t\t\thtml += \"<div class='webix_time_header' style='margin:0 \"+cpad+\"'>\"+this._timeHeaderTemplate(width,enLocale)+\"</div>\";\n\t\t\thtml += \"<div  class='webix_cal_body' style='height:\"+this._reserve_box_height+\"px; margin:0 \"+cpad+\";'>\";\n\n\t\t\t// check and change blocked selected time\n\t\t\tthis._correctBlockedTime();\n\n\t\t\thtml += \"<div role='grid' class='webix_hours'><div role='row'>\";\n\t\t\tselected = config.date.getHours();\n\t\t\ttemp = DateHelper.copy(config.date);\n\n\t\t\tfor (i= 0; i< 24; i++){\n\t\t\t\tcss=\"\";\n\t\t\t\tif(enLocale){\n\t\t\t\t\tif(i%4===0){\n\t\t\t\t\t\tvar label = (!i ? i18n.am[0] : (i==12?i18n.pm[0]:\"\"));\n\t\t\t\t\t\thtml += \"<div class='webix_cal_block_empty\"+css+\"' style='\"+this._getCalSizesString(width,height)+\"clear:both;\"+\"'>\"+label+\"</div>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(this._zoom_logic[-1]._isBlocked.call(this,i)){\n\t\t\t\t\tcss += \" webix_cal_day_disabled\";\n\t\t\t\t}\n\t\t\t\telse if(selected ==  i)\n\t\t\t\t\tcss += \" webix_selected\";\n\n\t\t\t\t\n\t\t\t\ttemp.setHours(i);\n\n\t\t\t\thtml += \"<div aria-label='\"+DateHelper.dateToStr(i18n.aria.hourFormat)(temp)+\"' role='gridcell'\"+\n\t\t\t\t\t\" tabindex='\"+(selected==i?\"0\":\"-1\")+\"' aria-selected='\"+(selected==i?\"true\":\"false\")+\n\t\t\t\t\t\"' class='webix_cal_block\"+css+\"' data-value='\"+i+\"' style='\"+this._getCalSizesString(width,height)+(i%4===0&&!enLocale?\"clear:both;\":\"\")+\n\t\t\t\t\t\"'><span style='display:inline-block; \"+this._getCalSizesString(sqSize,sqSize)+\"'>\"+DateHelper.toFixed(enLocale?(!i||i==12?12:i%12):i)+\"</span></div>\";\n\t\t\t}\n\t\t\thtml += \"</div></div>\";\n\n\t\t\thtml += \"<div role='grid' class='webix_minutes'><div role='row'>\";\n\t\t\tselected = config.date.getMinutes();\n\t\t\ttemp = DateHelper.copy(config.date);\n\n\n\t\t\tfor (i=0; i<60; i+=config.minuteStep){\n\t\t\t\tcss = \"\";\n\t\t\t\tif(this._zoom_logic[-2]._isBlocked.call(this,i)){\n\t\t\t\t\tcss = \" webix_cal_day_disabled\";\n\t\t\t\t}\n\t\t\t\telse if(selected ==  i)\n\t\t\t\t\tcss = \" webix_selected\";\n\n\t\t\t\ttemp.setMinutes(i);\n\n\t\t\t\thtml += \"<div aria-label='\"+DateHelper.dateToStr(i18n.aria.minuteFormat)(temp)+\"' role='gridcell' tabindex='\"+(selected==i?\"0\":\"-1\")+\n\t\t\t\t\t\"' aria-selected='\"+(selected==i?\"true\":\"false\")+\"' class='webix_cal_block webix_cal_block_min\"+css+\"' data-value='\"+i+\"' style='\"+\n\t\t\t\t\tthis._getCalSizesString(width,height)+((i/config.minuteStep)%2===0?\"clear:both;\":\"\")+\"'><span style='display:inline-block; \"+\n\t\t\t\t\tthis._getCalSizesString(sqSize,sqSize)+\"'>\"+DateHelper.toFixed(i)+\"</span></div>\";\n\t\t\t}\n\t\t\thtml += \"</div></div>\";\n\n\t\t\thtml += \"</div>\";\n\t\t\thtml += \"<div class='webix_time_footer' style='margin:0 \"+cpad+\"'>\"+this._timeButtonsTemplate()+\"</div>\";\n\t\t\tthis._contentobj.innerHTML = html;\n\t\t\tthis._contentobj.firstChild.style.marginTop = cpad;\n\t\t} else {\n\t\t\t//years and months\n\n\t\t\t//reset header\n\t\t\tif (config.monthHeader){\n\t\t\t\tconst header = sections[0].childNodes;\n\t\t\t\tconst title = zlogic._getTitle(config.date, this);\n\t\t\t\tif (header[0].innerHTML != title) header[0].innerHTML = title;\n\n\t\t\t\tif (config.navigation){\n\t\t\t\t\tconst labels = i18n.aria[\"nav\"+(this._zoom_level==1?\"Year\":\"Decade\")];\n\t\t\t\t\theader[1].setAttribute(\"aria-label\", labels[0]);\n\t\t\t\t\theader[2].setAttribute(\"aria-label\", labels[1]);\n\t\t\t\t}\n\t\t\t} else\t//needed for \"year\" to set start value\n\t\t\t\tzlogic._getTitle(config.date, this);\n\n\t\t\theight = Math.floor(this._reserve_box_height/3);\n\t\t\twidth = Math.floor(this._reserve_box_width/4);\n\t\t\tsqSize = Math.min(height, width);\n\n\t\t\tselected = (this._zoom_level === 1) ? config.date.getMonth() : config.date.getFullYear() - this._zoom_start_date;\n\t\t\tfor (i=0; i<12; i++){\n\t\t\t\tcss = \"\";\n\t\t\t\tif (zlogic._isBlocked.call(this, i)) {\n\t\t\t\t\tcss = \" webix_cal_day_disabled\";\n\t\t\t\t}\n\t\t\t\telse if(selected == i)\n\t\t\t\t\tcss = \" webix_selected\";\n\n\t\t\t\tvar format = i18n.aria[(this._zoom_level==1?\"month\":\"year\")+\"Format\"];\n\t\t\t\thtml+=\"<div role='gridcell' aria-label='\"+DateHelper.dateToStr(format)(config.date)+\n\t\t\t\t\t\"' tabindex='\"+(css.indexOf(\"selected\")!==-1?\"0\":\"-1\")+\n\t\t\t\t\t\"' aria-selected='\"+(css.indexOf(\"selected\")!==-1?\"true\":\"false\")+\n\t\t\t\t\t\"' class='webix_cal_block\"+css+\"' data-value='\"+i+\"' style='\"+this._getCalSizesString(width,height)+\n                    \"'><span style='display:inline-block; \"+this._getCalSizesString(sqSize,sqSize)+\"'>\"+zlogic._getContent(i, this)+\"</span></div>\";\n\t\t\t}\n\t\t\tif (config.weekHeader){\n\t\t\t\tsections[index-1].style.display = \"none\";\n\t\t\t\tif (index === 1) sections[index].style.marginTop = cpad;\n\t\t\t}\n\t\t\tsections[index].innerHTML = \"<div role='row'>\" + html + \"</div>\";\n\t\t\tif (type != \"year\" && type != \"month\"){\n\t\t\t\tif(!sections[index+1])\n\t\t\t\t\tthis._contentobj.innerHTML += \"<div class='webix_time_footer' style='margin:0 \"+cpad+\"'>\"+this._timeButtonsTemplate()+\"</div>\";\n\t\t\t\telse\n\t\t\t\t\tsections[index+1].innerHTML = this._timeButtonsTemplate();\n\t\t\t} else if (sections[index+1]){\n\t\t\t\tsections[index+1].style.display = \"none\";\n\t\t\t}\n\t\t\tsections[index].style.height = this._reserve_box_height+\"px\";\n\t\t}\n\t},\n\t_getCalSizesString: function(width,height){\n\t\treturn \"width:\"+width+\"px; height:\"+height+\"px; line-height:\"+height+\"px;\";\n\t},\n\t_timeButtonsTemplate: function(){\n\t\treturn \"<input type='button' style='width:100%' class='webix_cal_done' value='\"+i18n.calendar.done+\"'>\";\n\t},\n\t_timeHeaderTemplate: function(width,enLocale){\n\t\tvar w1 = width*(enLocale?5:4);\n\t\tvar w2 = width*2;\n\t\treturn \"<div class='webix_cal_hours' style='width:\"+w1+\"px'>\"+i18n.calendar.hours+\"</div><div class='webix_cal_minutes' style='width:\"+w2+\"px'>\"+i18n.calendar.minutes+\"</div>\";\n\t},\n\t_changeZoomLevel: function(zoom,date){\n\t\tvar oldzoom = this._zoom_level;\n\t\tif(this.callEvent(\"onBeforeZoom\",[zoom, oldzoom])){\n\t\t\tthis._zoom_level = zoom;\n\n\t\t\tif(zoom)\n\t\t\t\tthis._update_zoom_level(date);\n\t\t\telse\n\t\t\t\tthis.showCalendar(date);\n\t\t\tthis.callEvent(\"onAfterZoom\",[zoom, oldzoom]);\n\t\t}\n\t},\n\t_correctDate:function(date){\n\t\tif(this._zoom_logic[this._zoom_level]._correctDate && !this._checkDate(date))\n\t\t\tdate = this._zoom_logic[this._zoom_level]._correctDate(date,this);\n\t\treturn date;\n\t},\n\t_mode_selected:function(target, config){\n\t\tvar next = this._locate_date(target);\n\t\tvar zoom = this._zoom_level-(this._fixed?0:1);\n\n\t\tnext = this._correctDate(next);\n\t\tif(this._checkDate(next)){\n\t\t\tthis._changeZoomLevel(zoom, next);\n\t\t\tvar type = this._settings.type;\n\t\t\tif(type == \"month\" || type == \"year\")\n\t\t\t\tthis._selectDate(next, false, config);\n\t\t}\n\t},\n\t// selects date and redraw calendar\n\t_selectDate: function(date, add, config){\n\t\tif(this.callEvent(\"onBeforeDateSelect\", [date])){\n\t\t\tthis.selectDate(date, true, add, config);\n\t\t\tthis.callEvent(\"onAfterDateSelect\", [date]);\n\t\t}\n\t},\n\t_locate_day:function(target, ind){\n\t\tconst cind = index(target) - (this._settings.weekNumber?1:0);\n\t\tconst rind = index(target.parentNode);\n\t\tif (ind) return { cind, rind };\n\n\t\tconst date = DateHelper.add(this._getDateBoundaries()._start, cind + rind*7, \"day\", true);\n\t\tif (this._settings.timepicker){\n\t\t\tdate.setHours(this._settings.date.getHours());\n\t\t\tdate.setMinutes(this._settings.date.getMinutes());\n\t\t}\n\t\treturn date;\n\t},\n\t_locate_date:function(target){\n\t\tvar value = target.getAttribute(\"data-value\")*1;\n\t\tvar level = (target.className.indexOf(\"webix_cal_block_min\")!=-1?this._zoom_level-1:this._zoom_level);\n\t\tvar next = this.getVisibleDate();\n\n\t\tthis._zoom_logic[level]._setContent(next, value, this);\n\t\treturn next;\n\t},\n\ton_click:{\n\t\twebix_cal_prev_button: function(){\n\t\t\tthis._changeDate(-1);\n\t\t},\n\t\twebix_cal_next_button: function(){\n\t\t\tthis._changeDate(1);\n\t\t},\n\t\twebix_cal_day_disabled: function(){\n\t\t\treturn false;\n\t\t},\n\t\twebix_cal_outside: function(){\n\t\t\tif(!this._settings.navigation)\n\t\t\t\treturn false;\n\t\t},\n\t\twebix_cal_day: function(e, id, target){\n\t\t\tconst date = this._locate_day(target);\n\t\t\tconst ind = this._settings.multiselect ? this._locate_day(target, true) : null;\n\n\t\t\tconst add = this._settings.multiselect === \"touch\"  || (e.ctrlKey || e.metaKey);\n\t\t\tthis._selectDate(date, add, \"user\");\n\n\t\t\tthis._restore_focus(\"webix_cal_day\", ind);\n\t\t},\n\t\twebix_cal_time:function(){\n\t\t\tif(this._zoom_logic[this._zoom_level-1]){\n\t\t\t\tthis._zoom_in = true;\n\t\t\t\tvar zoom = this._zoom_level - 1;\n\t\t\t\tthis._changeZoomLevel(zoom);\n\t\t\t}\n\t\t},\n\t\twebix_range_time_start:function(){\n\t\t\t$$(this._settings.master)._time_mode = \"start\";\n\t\t},\n\t\twebix_range_time_end:function(){\n\t\t\t$$(this._settings.master)._time_mode = \"end\";\n\t\t},\n\t\twebix_cal_done:function(){\n\t\t\tlet date = this.getVisibleDate();\n\t\t\tif (this._zoom_in) {\n\t\t\t\tconst start = this.getSelectedDate(true);\n\t\t\t\tif (start) {\n\t\t\t\t\tstart.setHours(date.getHours());\n\t\t\t\t\tstart.setMinutes(date.getMinutes());\n\t\t\t\t\tdate = start;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdate = this._correctDate(date);\n\t\t\tthis._selectDate(date, false, \"user\");\n\t\t},\n\t\twebix_cal_month_name:function(){\n\t\t\tif (!this._settings.navigation) return;\n\n\t\t\tthis._zoom_in = false;\n\t\t\t//maximum zoom reached\n\t\t\tif (this._zoom_level == 2 || !this._settings.monthSelect) return;\n\n\t\t\tvar zoom = Math.max(this._zoom_level, 0) + 1;\n\t\t\tthis._changeZoomLevel(zoom);\n\t\t},\n\t\twebix_cal_block:function(e, id, trg){\n\t\t\tif (this._zoom_in){\n\t\t\t\tif (trg.className.indexOf(\"webix_cal_day_disabled\") !== -1)\n\t\t\t\t\treturn false;\n\n\t\t\t\tconst next = this._locate_date(trg);\n\t\t\t\tthis._update_zoom_level(next);\n\n\t\t\t\tlet css = \"webix_cal_block\";\n\t\t\t\tif (trg.className.indexOf(\"webix_cal_block_min\") !== -1)\n\t\t\t\t\tcss = \"webix_cal_block_min\";\n\t\t\t\tthis._restore_focus(css);\n\t\t\t} else {\n\t\t\t\tif (trg.className.indexOf(\"webix_cal_day_disabled\") == -1)\n\t\t\t\t\tthis._mode_selected(trg, \"user\");\n\t\t\t}\n\t\t}\n\t},\n\t_string_to_date: function(date, format){\n\t\tif (!date)\n\t\t\treturn DateHelper.datePart(new Date());\n\n\t\tif (typeof date == \"string\"){\n\t\t\tif (format)\n\t\t\t\tdate = DateHelper.strToDate(format)(date);\n\t\t\telse\n\t\t\t\tdate = i18n.parseFormatDate(date);\n\t\t}\n\t\treturn date;\n\t},\n\t_checkDate: function(date){\n\t\tvar blockedDate = (this._settings.blockDates && this._settings.blockDates.call(this,date));\n\t\tvar minDate = this._settings.minDate;\n\t\tvar maxDate = this._settings.maxDate;\n\t\tvar outOfRange = (minDate && date < minDate) || (maxDate && date >= DateHelper.add(maxDate, 1, \"day\", true));\n\t\treturn !blockedDate && !outOfRange;\n\t},\n\t_findActive:function(date, mode){\n\t\tvar dir = (mode === \"top\" || mode === \"left\" || mode === \"pgup\" || mode === \"up\") ? -1 : 1;\n\t\tvar newdate = DateHelper.add(date, dir, \"day\", true);\n\t\tif (this._checkDate(newdate))\n\t\t\treturn newdate;\n\t\telse {\n\t\t\tvar compare;\n\t\t\tif(this._zoom_level === 0) compare = (date.getMonth() === newdate.getMonth());\n\t\t\telse if(this._zoom_level === 1 ) compare = (date.getFullYear() === newdate.getFullYear());\n\t\t\telse if(this._zoom_level === 2) compare = (newdate.getFullYear() > this._zoom_start_date && newdate.getFullYear() < this._zoom_start_date+10);\n\n\t\t\tif(compare)\n\t\t\t\treturn this._findActive(newdate, mode);\n\t\t}\n\t},\n\tshowCalendar: function(date) {\n\t\tthis.define(\"date\", date);\n\t\tthis.render();\n\t\tthis.resize();\n\t},\n\t_selectedDay: function(day){\n\t\treturn day && this._selected_days[day.valueOf()];\n\t},\n\tgetSelectedDate: function(first) {\n\t\tconst result = [];\n\n\t\tconst keys = Object.keys(this._selected_days);\n\t\tconst length = first ? Math.min(1, keys.length) : keys.length;\n\t\tfor (let i=0; i<length; i++)\n\t\t\tresult.push(DateHelper.copy(this._selected_days[keys[i]]));\n\n\t\treturn (this.config.multiselect && !first) ? result : (result[0] || null);\n\t},\n\tgetVisibleDate: function() {\n\t\treturn DateHelper.copy(this._settings.date);\n\t},\n\tsetValue: function(date, config){\n\t\tthis.selectDate(date, true, false, config);\n\t},\n\tgetValue: function(format){\n\t\tlet date = this.getSelectedDate();\n\n\t\tif(isArray(date)){\n\t\t\tdate = date.map(date => this._formatValue(date, format));\n\t\t\tif(this._settings.stringResult)\n\t\t\t\tdate = date.join(this._settings.separator);\n\t\t}\n\t\telse\n\t\t\tdate = this._formatValue(date, format);\n\n\t\treturn date;\n\t},\n\t_formatValue: function(date, format){\n\t\tif (format)\n\t\t\tdate = DateHelper.dateToStr(format)(date);\n\t\telse if(this._settings.stringResult){\n\t\t\tif(this._settings.type == \"time\")\n\t\t\t\tdate = i18n.parseTimeFormatStr(date);\n\t\t\telse\n\t\t\t\tdate = i18n.parseFormatStr(date);\n\t\t}\n\t\treturn date;\n\t},\n\tselectDate: function(date, show, add, config){\n\t\tif (!date || !add || !this.config.multiselect)\n\t\t\tthis._selected_days = {};\n\n\t\tif (date){\n\t\t\tif(typeof date == \"string\")\n\t\t\t\tdate = date.split(this._settings.separator);\n\t\t\telse if (!isArray(date)) date = [date];\n\t\t\tfor (let i=0; i<date.length; i++){\n\t\t\t\tconst days = this._string_to_date(date[i]);\n\t\t\t\tconst key = DateHelper.datePart(DateHelper.copy(days)).valueOf();\n\t\t\t\tif (this._selected_days[key] && add)\n\t\t\t\t\tdelete this._selected_days[key];\n\t\t\t\telse\n\t\t\t\t\tthis._selected_days[key] = days;\n\n\t\t\t\tif (!this.config.multiselect)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tif (date.length && show)\n\t\t\t\tthis.showCalendar(date[0]);\n\t\t}\n\n\t\tif (show !== false)\n\t\t\tthis.render();\n\n\t\tthis.callEvent(\"onChange\",[date,config]);\n\t}, \n\tlocate:function(){ return null; }\n};\n\n\nconst view = protoUI(api, KeysNavigation, MouseEvents, base.view, EventSystem);\nexport default {api, view};","import {locate, addCss, removeCss} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport {bind} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport template from \"../webix/template\";\nimport {$active} from \"../webix/skin\";\n\nimport color from \"../webix/color\";\nimport KeysNavigation from \"../core/keysnavigation\";\nimport EventSystem from \"../core/eventsystem\";\nimport base from \"../views/view\";\n\nconst api = {\n\tname:\"colorboard\",\n\tdefaults:{\n\t\ttemplate:(obj) => {\n\t\t\treturn `<div class=\"webix_color_item\" style=\"background-color:${obj.val};\"></div>`;\n\t\t},\n\t\tpalette:null,\n\t\theight:250,\n\t\twidth:260,\n\t\tcols:11,\n\t\trows:10,\n\t\tminLightness:0.15,\n\t\tmaxLightness:1,\n\t\tnavigation:true,\n\t\tgrayScale:true,\n\t\ttype:\"material\" // \"classic\"\n\t},\n\t$init:function(){\n\t\t_event(this._viewobj, \"click\", bind(function(e){\n\n\t\t\t// prevent selection the main item container\n\t\t\tconst node = e.target.parentNode;\n\t\t\tlet value = locate(node, /*@attr*/\"webix_val\");\n\t\t\t// locate can return null in case of drag\n\t\t\tif (value){\n\t\t\t\tconst oldvalue = this._settings.value;\n\t\t\t\tthis.setValue(value, \"user\");\n\n\t\t\t\t//value can be changed via setValue\n\t\t\t\tvalue = this._settings.value;\n\n\t\t\t\tthis.callEvent(\"onItemClick\", [value, e]);\n\t\t\t\tif (value != oldvalue)\n\t\t\t\t\tthis.callEvent(\"onSelect\", [value]);\n\t\t\t}\n\t\t}, this));\n\n\t\tthis.$view.setAttribute(\"role\", \"grid\");\n\t\tthis._viewobj.setAttribute(\"aria-readonly\", \"true\");\n\t},\n\t_get_clear_palette:function(){\n\t\treturn [\n\t\t\t\"#F34336\",\n\t\t\t\"#FF9700\",\n\t\t\t\"#FFEA3B\",\n\t\t\t\"#4CB050\",\n\t\t\t\"#009788\",\n\t\t\t\"#00BCD4\",\n\t\t\t\"#2196F3\",\n\t\t\t\"#3F51B5\",\n\t\t\t\"#673BB7\",\n\t\t\t\"#9C28B1\",\n\t\t\t\"#EA1E63\",\n\t\t];\n\t},\n\t_set_item_focus:function(){\n\t\tif(!this.getValue())\n\t\t\tthis.moveSelection(\"up\");\n\t},\n\t_findIndex:function(value){\n\t\tconst pal = this._settings.palette;\n\t\tvalue = (value || \"\").toUpperCase();\n\t\tfor(let r= 0, rows= pal.length; r < rows; r++)\n\t\t\tfor(let c= 0, cols = pal[r].length; c < cols; c++){\n\t\t\t\tif(pal[r][c].toUpperCase() == value){\n\t\t\t\t\treturn {row:r, col:c};\n\t\t\t\t}\n\t\t\t}\n\t\treturn null;\n\t},\n\t$setSize:function(x,y){\n\t\tif(base.api.$setSize.call(this,x,y)){\n\t\t\tthis.render();\n\t\t}\n\t},\n\tgetValue:function(){\n\t\treturn this._settings.value;\n\t},\n\t_getBox:function(){\n\t\treturn this._viewobj.firstChild;\n\t},\n\t$prepareValue:function(value){\n\t\tvalue = value ? value.toString(16) : \"\";\n\t\tif (value && value.charAt(0) != \"#\" && /^[0-9a-fA-F]+$/.test(value))\n\t\t\tvalue = \"#\" + value;\n\t\treturn value;\n\t},\n\tvalue_setter:function(value){\n\t\treturn this.$prepareValue(value);\n\t},\n\tsetValue:function(value, config){\n\t\tvalue = this.$prepareValue(value);\n\t\tconst oldvalue = this._settings.value;\n\n\t\tif (oldvalue != value){\n\t\t\tthis._settings.value = value;\n\t\t\tthis.$setValue(value);\n\t\t\tthis.callEvent(\"onChange\", [value, oldvalue, config]);\n\t\t}\n\t},\n\t$setValue:function(value){\n\t\tif(this.isVisible(this._settings.id)){\n\t\t\t// clear previous\n\t\t\tif (this._activeSelection){\n\t\t\t\tconst oldCell = this._getCell(this._activeSelection);\n\t\t\t\tthis._setSelection(oldCell, false);\n\t\t\t}\n\n\t\t\tconst ind = this._activeSelection = this._findIndex(value);\n\t\t\tif (ind){\n\t\t\t\tconst cell = this._getCell(ind);\n\t\t\t\tthis._setSelection(cell, true);\n\t\t\t}\n\t\t}\n\t},\n\t_getCell(ind){\n\t\treturn this._viewobj.lastChild.childNodes[ind.row].childNodes[ind.col];\n\t},\n\t_setSelection(cell, state){\n\t\tif (state){\n\t\t\tcell.setAttribute(\"tabindex\", \"0\");\n\t\t\tcell.setAttribute(\"aria-selected\", \"true\");\n\t\t\taddCss(cell, \"webix_color_selected\");\n\t\t} else {\n\t\t\tcell.setAttribute(\"tabindex\", \"-1\");\n\t\t\tcell.removeAttribute(\"aria-selected\");\n\t\t\tremoveCss(cell, \"webix_color_selected\");\n\t\t}\n\t},\n\t/* handle colors */\n\t_numToHex:function(n){\n\t\treturn color.toHex(n, 2);\n\t},\n\t_rgbToHex:function(r,g,b){\n\t\treturn \"#\"+this._numToHex( Math.floor(r)) +this._numToHex( Math.floor(g)) + this._numToHex(Math.floor(b));\n\t},\n\t_hslToRgb:function(h, s, l){\n\t\tlet r, g, b;\n\t\tif(!s){\n\t\t\tr = g = b = l; // achromatic\n\t\t}else{\n\t\t\tlet q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\t\tlet p = 2 * l - q;\n\t\t\tr = this._hue2rgb(p, q, h + 1/3);\n\t\t\tg = this._hue2rgb(p, q, h);\n\t\t\tb = this._hue2rgb(p, q, h - 1/3);\n\t\t}\n\n\t\treturn {r:r * 255, g:g * 255, b:b * 255};\n\t},\n\t_hue2rgb:function(p, q, t){\n\t\tif(t < 0) t += 1;\n\t\tif(t > 1) t -= 1;\n\t\tif (t < 1/6)\n\t\t\treturn p + (q - p) * 6 * t; \n\t\telse if (t <= 1/2)\n\t\t\treturn q;\n\t\telse if (t < 2/3) \n\t\t\treturn p + (q - p) * (2/3 - t) * 6;\n\t\telse\n\t\t\treturn p;\n\t},\n\t_lightenRgb:function(rgb, lt){\n\t\t/*\tcolor = color * alpha + background * (1 - alpha); */\n\t\tconst r = rgb[0]*lt + 255*(1-lt);\n\t\tconst g = rgb[1]*lt + 255*(1-lt);\n\t\tconst b = rgb[2]*lt + 255*(1-lt);\n\t\treturn {r, g, b};\n\t},\n\t_getGrayScale:function(colCount){\n\t\tconst gray = [];\n\t\tlet\tval = 255,\n\t\t\tstep = val / colCount;\n\n\t\tfor(let i=0; i < colCount; i++){\n\t\t\tval = Math.round(val > 0 ? val : 0);\n\t\t\tgray.push(this._rgbToHex(val, val, val));\n\t\t\tval -= step;\n\t\t}\n\t\tgray[gray.length - 1] = \"#000000\";\n\t\treturn gray;\n\t},\n\t_initPalette:function(config){\n\t\t/* default palette (material and custom) */\n\t\tconst clearColors = this._get_clear_palette();\t\t\n\t\tconfig.cols = clearColors.length; // always use the same set\n\n\t\tconst colors = [];\n\n\t\tlet colorRows = config.rows - 1; // a row is reserved for clear colors\t\t\n\t\tlet lightStep = 1/config.rows;\n\t\tlet colorRange = null;\n\n\t\tif (this._settings.grayScale){\n\t\t\tconst grayColors = this._getGrayScale(config.cols);\n\t\t\tcolors.push(grayColors.reverse()); // inverted order\n\t\t\tlightStep = 1/colorRows;\n\t\t\tcolorRows -= 1;\n\t\t}\n\n\t\tcolors.push(clearColors);\n\n\t\tfor(let step = 0, lt = config.maxLightness; step < colorRows; step++){\n\t\t\tlt-=lightStep;\n\t\t\tcolorRange = [];\n\t\t\tfor(let col = 0; col < config.cols; col++ ){\n\t\t\t\tconst clearRgb = color.toRgb(clearColors[col]);\n\t\t\t\tconst val = this._lightenRgb(clearRgb, lt);\n\t\t\t\tcolorRange.push(this._rgbToHex(val.r, val.g, val.b));\n\t\t\t}\n\t\t\tcolors.push(colorRange);\n\t\t}\n\t\tthis._settings.palette = colors;\n\t},\n\t_initOldPalette:function(config){\n\t\t/* old (classic) palette */\n\t\tconst colors = [];\n\t\tconst colorStep = 1/config.cols;\n\n\t\tlet colorRows = config.rows;\n\t\tlet colorRange = null;\n\n\t\tif (this._settings.grayScale){\n\t\t\tcolors.push(this._getGrayScale(config.cols));\n\t\t\tcolorRows -= 1;\n\t\t}\n\n\t\tlet lightStep = (config.maxLightness - config.minLightness)/colorRows;\n\n\t\tfor(let step = 0, lt = config.minLightness; step < colorRows; step++){\n\t\t\tcolorRange = [];\n\t\t\tfor(let c = 0, col = 0; c < config.cols; c++ ){\n\t\t\t\tconst val = this._hslToRgb(col, 1, lt );\n\t\t\t\tcolorRange.push(this._rgbToHex(val.r, val.g, val.b));\n\t\t\t\tcol += colorStep;\n\t\t\t}\n\t\t\tcolors.push(colorRange);\n\t\t\tlt+=lightStep;\n\t\t}\n\n\t\tthis._settings.palette = colors;\n\t},\n\tmoveSelection:function(mode, details, focus){\n\t\tlet value = this.getValue(), ind, cell;\n\n\t\tif(value) ind = this._findIndex(value);\n\t\tif(!ind) ind = {row:0, col:0};\n\n\t\tif(ind){\n\t\t\tif(mode == \"up\" || mode == \"down\")\n\t\t\t\tind.row = ind.row + (mode == \"up\"?-1:1);\n\t\t\telse if(mode == \"right\" || mode == \"left\")\n\t\t\t\tind.col = ind.col +(mode == \"right\"?1:-1);\n\t\t\telse if(mode == \"top\" )\n\t\t\t\tind.row = ind.col = 0;\n\t\t\telse if(mode == \"bottom\"){\n\t\t\t\tind.row = this._viewobj.lastChild.querySelectorAll(\".webix_color_row\").length-1;\n\t\t\t\tind.col = this._viewobj.lastChild.childNodes[ind.row].childNodes.length-1;\n\t\t\t}\n\t\t\tind.row = Math.max(ind.row, 0);\n\t\t\tif(ind.row>=0){\n\t\t\t\t// check if this is a last row\n\t\t\t\tconst row = this._viewobj.lastChild.childNodes[ind.row];\n\t\t\t\tif (row) cell = row.childNodes[ind.col];\n\t\t\t}\n\t\t\tif(cell){\n\t\t\t\tvalue = cell.getAttribute(/*@attr*/\"webix_val\");\n\t\t\t\tconst config = (details && details.e instanceof KeyboardEvent) ? \"user\" : \"auto\";\n\t\t\t\tthis.setValue(value, config);\n\t\t\t\tthis.callEvent(\"onSelect\", [this._settings.value]);\n\n\t\t\t\tif(focus !== false){\n\t\t\t\t\tconst sel = this._viewobj.querySelector(\"div[tabindex='0']\");\n\t\t\t\t\tif(sel) sel.focus();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t_renderRow:function(row, widths, height){\n\t\tconst data = {width: 0, height:0, val:0};\n\t\tlet rowHtml = \"<div class=\\\"webix_color_row\\\" role=\\\"row\\\">\";\n\n\t\tfor(let cell = 0; cell < row.length; cell++){\n\t\t\tdata.width = widths[cell];\n\t\t\tdata.height = height;\n\t\t\tdata.val = row[cell];\n\t\t\trowHtml += this._renderItem(data);\n\t\t}\n\t\trowHtml += \"</div>\";\n\t\treturn rowHtml;\n\t},\n\t_renderItem:function(obj){\n\t\tconst colorTemplate = template(this._settings.template||\"\");\n\t\treturn `<div role=\"gridcell\" tabindex=\"-1\" aria-label=\"${obj.val}\" style=\"width:${obj.width}px;height:${obj.height}px;\" ${/*@attr*/\"webix_val\"}=\"${obj.val}\">${colorTemplate(obj)}</div>`;\n\t},\n\trender:function(){\n\t\tif(!this.isVisible(this._settings.id))\n\t\t\treturn;\n\n\t\tconst type = this._settings.type;\n\t\tif(!this._settings.palette){\n\t\t\tif (type === \"classic\")\n\t\t\t\tthis._initOldPalette(this._settings);\n\t\t\telse \n\t\t\t\tthis._initPalette(this._settings);\n\t\t}\n\t\tconst palette = this._settings.palette;\n\n\t\tthis.callEvent(\"onBeforeRender\",[]);\n\t\tconst padding = type === \"classic\" ? 0 : $active.colorPadding;\n\t\tconst single = typeof palette[0] == \"object\";\n\t\tconst firstRow = single ? palette[0] : palette;\n\n\t\tconst deltaWidth = padding*2 + padding*(firstRow.length-1);\n\t\tconst deltaHeight = padding*2 + padding*(single ? palette.length-1 : 0);\n\n\t\tlet width = this.$width - deltaWidth,\n\t\t\theight =  this.$height - deltaHeight,\n\t\t\twidths = [];\n\n\t\tlet html = `<div class=\"webix_color_palette ${\"webix_palette_\"+type}\" role=\"rowgroup\">`;\n\t\t\n\t\tfor(let i=0; i < firstRow.length; i++){\n\t\t\twidths[i] = Math.floor(width/(firstRow.length - i));\n\t\t\twidth -= widths[i];\n\t\t}\n\n\t\tif(typeof palette[0] == \"object\"){\n\t\t\tfor(let r=0; r < palette.length; r++){\n\t\t\t\tconst cellHeight = Math.floor(height/(palette.length - r));\n\t\t\t\theight -= cellHeight;\n\t\t\t\tconst row = palette[r];\n\t\t\t\thtml += this._renderRow(row, widths, cellHeight);\n\t\t\t}\n\t\t} else\n\t\t\thtml += this._renderRow(palette, widths, height);\n\t\thtml += \"</div>\";\n\n\t\tthis._viewobj.innerHTML = html;\n\n\t\tif(this._settings.value)\n\t\t\tthis.$setValue(this._settings.value);\n\t\telse\n\t\t\tthis._viewobj.lastChild.childNodes[0].childNodes[0].setAttribute(\"tabindex\", \"0\");\n\n\t\tthis._fix_cover();\n\t\tthis.callEvent(\"onAfterRender\",[]);\n\t},\n\trefresh:function(){ this.render(); }\n};\n\nconst view = protoUI(api, KeysNavigation, base.view, EventSystem);\nexport default {api, view};","import {pos as getPos, addCss, removeCss, offset, preventEvent} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport {_event, event, eventRemove} from \"../webix/htmlevents\";\nimport {$active} from \"../webix/skin\";\nimport i18n from \"../webix/i18n\";\nimport env from \"../webix/env\";\n\nimport color from \"../webix/color\";\n\nimport EventSystem from \"../core/eventsystem\";\nimport base from \"../views/view\";\n\nconst api = {\n\tname:\"colorselect\",\n\tdefaults:{\n\t\twidth: 260,\n\t\theight: 250,\n\t\tvalue:\"#751FE0\"\n\t},\n\t$init:function(){\n\t\tthis._hValue = this._sValue = this._vValue = 0;\n\n\t\t_event(this.$view, \"keydown\", (e) => this._handle_move_keyboard(e));\n\t\tthis.attachEvent(\"onAfterRender\", function(){\n\t\t\t_event(this._colorBlock, env.mouse.down, (e) => this._handle_dnd(e, \"mouse\"));\n\t\t\t_event(this._colorLine, env.mouse.down, (e) => this._handle_dnd(e, \"mouse\", true));\n\t\t\tif (env.touch) {\n\t\t\t\t_event(this._colorBlock, env.touch.down, (e) => this._handle_dnd(e, \"touch\"));\n\t\t\t\t_event(this._colorLine, env.touch.down, (e) => this._handle_dnd(e, \"touch\", true));\n\t\t\t}\n\t\t\t_event(this._colorOutText, \"change\", () => this.setValue(this._colorOutText.value, \"user\"));\n\t\t\tif (this._settings.button)\n\t\t\t\t_event(this._viewobj.querySelector(\".webix_button\"), \"click\", () => {\n\t\t\t\t\tthis.callEvent(\"onColorSelect\", [this.getValue()]);\n\t\t\t\t});\n\t\t});\n\t\tthis.attachEvent(\"onDestruct\", function(){\n\t\t\tthis._colorCircle = this._colorLineCircle = this._colorBlock = null;\n\t\t\tthis._colorLine = this._colorOutText = this._colorOutBlock = this._offset = null;\n\t\t});\n\t},\n\t$skin:function(){\n\t\tthis._inpHeight = $active.inputHeight - 2*$active.inputPadding;\n\t},\n\t$setSize:function(x,y){\n\t\tif(base.api.$setSize.call(this,x,y)){\n\t\t\tthis.render();\n\t\t}\n\t},\n\tgetValue:function(){\n\t\treturn this._settings.value;\n\t},\n\t$prepareValue:function(value){\n\t\tvalue = value ? value.toString(16) : \"\";\n\t\tif (value && value.charAt(0) != \"#\" && /^[0-9a-fA-F]+$/.test(value))\n\t\t\tvalue = \"#\" + value;\n\t\treturn value;\n\t},\n\tvalue_setter:function(value){\n\t\treturn this.$prepareValue(value);\n\t},\n\tsetValue:function(value, config){\n\t\tvalue = this.$prepareValue(value);\n\t\tconst oldvalue = this._settings.value;\n\n\t\tif (oldvalue != value){\n\t\t\tthis._settings.value = value;\n\t\t\tthis.$setValue(value);\n\t\t\tthis.callEvent(\"onChange\", [value, oldvalue, config]);\n\t\t}\n\t},\n\t$setValue:function(value){\n\t\tif(this.isVisible(this._settings.id)){\n\t\t\tconst rgb = color.toRgb(value);\n\n\t\t\tif(value !==this._current_value){//set by API\n\t\t\t\tconst hsv = color.rgbToHsv(...rgb);\n\t\t\t\tthis._hValue = hsv[0];\n\t\t\t\tthis._sValue = hsv[1];\n\t\t\t\tthis._vValue = hsv[2];\n\t\t\t}\n\n\t\t\tconst left = (this._hValue*this._offset.width)/359;\n\t\t\tthis._colorLineCircle.style.left = left+\"px\";\n\n\t\t\tconst x = this._sValue*(this._offset.width);\n\t\t\tconst y = Math.abs((this._offset.height)*(this._vValue-1));\n\n\t\t\tthis._colorCircle.style.left = Math.max(Math.min(x, this._offset.width), 0)+\"px\";\n\t\t\tthis._colorCircle.style.top = Math.max(Math.min(y, this._offset.height), 0)+\"px\";\n\n\t\t\tthis._colorCircle.setAttribute(\"aria-valuetext\", value);\n\t\t\tthis._colorLineCircle.setAttribute(\"aria-valuetext\", value);\n\n\t\t\tthis._setOutColors(rgb, value);\n\t\t\tthis._setBlockColors();\n\t\t}\n\t},\n\t_setOutColors:function(rgb, hex){\n\t\tif(!rgb) rgb = color.hsvToRgb(this._hValue, this._sValue, this._vValue);\n\t\tif(!hex) hex = \"#\"+color.rgbToHex(rgb);\n\n\t\tconst bgColor = `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\n\t\tthis._colorCircle.style.backgroundColor = bgColor;\n\t\tthis._colorOutBlock.style.backgroundColor = bgColor;\n\t\tthis._colorOutText.value = hex.toUpperCase();\n\n\t\tthis._current_value = hex;\n\t},\n\t_setBlockColors:function(){\n\t\tconst rgb = color.hsvToRgb(this._hValue, 1, 1);\n\t\tconst rgbStr = `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\n\t\tthis._colorLineCircle.style.backgroundColor = rgbStr;\n\t\tthis._colorBlock.style.backgroundColor = rgbStr;\n\t},\n\n\t// dragging to set value\n\t_move_block:function(e){\n\t\tconst pos = getPos(e);\n\n\t\tlet x = pos.x - this._offset.x;\n\t\tlet y = pos.y - this._offset.y;\n\n\t\tx = Math.max(Math.min(x, this._offset.width), 0);\n\t\ty = Math.max(Math.min(y, this._offset.height), 0);\n\n\t\tthis._colorCircle.style.left = x+\"px\";\n\t\tthis._colorCircle.style.top = y+\"px\";\n\n\t\tconst pxX = (this._offset.width)/100;\n\t\tconst pxY = (this._offset.height)/100;\n\n\t\tconst s = Math.ceil(x/pxX)/100;\n\t\tconst v = Math.ceil(Math.abs(y/pxY-100))/100;\n\n\t\tthis._sValue = s;\n\t\tthis._vValue = v;\n\n\t\tthis._setOutColors();\n\t},\n\t_move_line:function(e){\n\t\tconst pos = getPos(e);\n\n\t\tlet x = pos.x - this._offset.x;\n\t\tx = Math.max(Math.min(x, this._offset.width), 0);\n\n\t\tthis._colorLineCircle.style.left = x+\"px\";\n\n\t\tconst h =  Math.round(x*359/this._offset.width);\n\t\tthis._hValue = Math.max(Math.min(h, 359), 0);\n\n\t\tthis._setOutColors();\n\t\tthis._setBlockColors();\n\t},\n\t_handle_dnd:function(e, pointer, line){\n\t\tthis._offset = offset(this._colorBlock);\n\n\t\tif (line){\n\t\t\taddCss(this._colorLine, \"webix_color_area_active\");\n\t\t\tthis._move_line(e);\n\t\t} else {\n\t\t\taddCss(this._colorBlock, \"webix_color_area_active\");\n\t\t\tthis._move_block(e);\n\t\t}\n\n\t\tconst passive = (pointer === \"touch\") ? { passive:false } : null;\n\t\tthis._handle_drag_events = [\n\t\t\tevent(document.body, env[pointer].move, e => this._handle_move_process(e, pointer, line), passive),\n\t\t\tevent(document, env[pointer].up, () => this._handle_move_stop(line))\n\t\t];\n\t\taddCss(document.body,\"webix_noselect\");\n\t},\n\t_handle_move_process:function(e, pointer, line){\n\t\tif (line) this._move_line(e);\n\t\telse this._move_block(e);\n\n\t\tif (pointer === \"touch\") preventEvent(e);\n\t},\n\t_handle_move_stop:function(line){\n\t\t//detach event handlers\n\t\teventRemove(this._handle_drag_events[0]);\n\t\teventRemove(this._handle_drag_events[1]);\n\t\tthis._handle_drag_events = null;\n\n\t\tthis.setValue(this._current_value, \"user\");\n\n\t\tif (line){\n\t\t\tremoveCss(this._colorLine, \"webix_color_area_active\");\n\t\t\tthis._colorLineCircle.focus();\n\t\t} else {\n\t\t\tremoveCss(this._colorBlock, \"webix_color_area_active\");\n\t\t\tthis._colorCircle.focus();\n\t\t}\n\t\tremoveCss(document.body, \"webix_noselect\");\n\t},\n\t_move_block_value(val, inc){\n\t\treturn Math.min(Math.max(val+inc/100, 0), 1);\n\t},\n\t_move_line_value(val, inc){\n\t\treturn Math.min(Math.max(val+inc, 0), 359);\n\t},\n\t_handle_move_keyboard:function(e){\n\t\tconst code = e.which || e.keyCode;\n\n\t\tif(code>32 && code <41){\n\t\t\tconst match =  /webix_color_(\\w*)circle/.exec(e.target.className);\n\t\t\tif(!match) return;\n\t\t\tpreventEvent(e);\n\n\t\t\tif(match[1].length){ //line\n\t\t\t\tif(code === 36) this._hValue = 0;\n\t\t\t\telse if(code === 35) this._hValue = 359;\n\t\t\t\telse{\n\t\t\t\t\tlet inc = (code === 37 || code === 40 || code === 34) ? -1 : 1;\n\t\t\t\t\tthis._hValue = this._move_line_value(this._hValue, inc);\n\t\t\t\t}\n\t\t\t\tthis._setBlockColors();\n\t\t\t} else {\n\t\t\t\tif(code === 36){\n\t\t\t\t\tthis._sValue = 0;\n\t\t\t\t\tthis._vValue = 1;\n\t\t\t\t}\n\t\t\t\telse if(code === 35) \n\t\t\t\t\tthis._sValue = this._vValue = 1;\n\t\t\t\telse if(code === 39 || code === 37){\n\t\t\t\t\tlet inc = code === 39 ? 1: -1;\n\t\t\t\t\tthis._sValue = this._move_block_value(this._sValue, inc);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tlet inc = (code === 33 || code === 38) ? 1 : -1;\n\t\t\t\t\tthis._vValue = this._move_block_value(this._vValue, inc);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._setOutColors();\n\n\t\t\t//paint value, black colors may have a bigger step\n\t\t\tif(this._settings.value == this._current_value)\n\t\t\t\tthis.$setValue(this._current_value);\n\t\t\telse\n\t\t\t\tthis.setValue(this._current_value, \"user\");\n\t\t}\n\t},\n\tmoveSelection:function(mode){\n\t\tif(mode == \"pgup\" || mode == \"pgdown\"){ //line\n\t\t\tlet inc = mode === \"pgup\" ? -1 : 1;\n\t\t\tthis._hValue = this._move_line_value(this._hValue, inc);\n\t\t\tthis._setBlockColors();\n\t\t}\n\t\telse if(mode !=\"top\" && mode !==\"bottom\"){\n\t\t\tlet inc = (mode == \"up\" || mode == \"right\") ? 1 : -1;\n\t\t\tif(mode == \"down\" || mode == \"up\")\n\t\t\t\tthis._vValue = this._move_block_value(this._vValue, inc);\n\t\t\telse\n\t\t\t\tthis._sValue = this._move_block_value(this._sValue, inc);\n\t\t}\n\t\tthis._setOutColors();\n\t\tthis.setValue(this._current_value, \"auto\");\n\t},\n\trender:function(){\n\t\tif(!this.isVisible(this._settings.id))\n\t\t\treturn;\n\n\t\tthis.callEvent(\"onBeforeRender\",[]);\n\n\t\tconst inpWidth = (this.$width - $active.dataPadding*3)/2;\n\t\t//8+14 color line, 3(or 4) data paddings \n\t\tconst bHeight = this.$height - 3*$active.dataPadding - 22 - this._inpHeight - (this._settings.button ? (this._inpHeight+$active.dataPadding) : 0);\n\n\t\tlet html = \"<div class=\\\"webix_color_area\\\">\";\n\t\thtml += `\n\t\t\t<div ${/*@attr*/\"webix_disable_drag\"}=\"true\" class=\"webix_color_block\" style=\"height:${bHeight}px;\">\n\t\t\t\t<div class=\"webix_color_circle\" tabindex=\"0\" role=\"slider\"></div>\n\t\t\t</div>\n\t\t\t<div ${/*@attr*/\"webix_disable_drag\"}=\"true\" class=\"webix_color_line\">\n\t\t\t\t<div class=\"webix_color_line_circle\" tabindex=\"0\" role=\"slider\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"webix_color_out\">\n\t\t\t\t<div style=\"width:${inpWidth}px\" class=\"webix_color_out_block\"></div>\n\t\t\t\t<input type=\"text\" style=\"width:${inpWidth}px\" class=\"webix_color_out_text\"></input>\n\t\t\t</div>\n\t\t`;\n\n\t\tif(this._settings.button)\n\t\t\thtml += `<div class='webix_secondary'><button class=\"webix_button\">${i18n.combo.select}</button></div>`;\n\t\thtml += \"</div>\";\n\n\t\tthis._viewobj.innerHTML = html;\n\n\t\tthis._collect_vars();\n\t\tthis.$setValue(this._settings.value);\n\n\t\tthis._fix_cover();\n\t\tthis.callEvent(\"onAfterRender\",[]);\n\t},\n\t_collect_vars:function(){\n\t\tthis._colorCircle = this._viewobj.querySelector(\".webix_color_circle\");\n\t\tthis._colorLineCircle = this._viewobj.querySelector(\".webix_color_line_circle\");\n\t\tthis._colorBlock = this._viewobj.querySelector(\".webix_color_block\");\n\t\tthis._colorLine = this._viewobj.querySelector(\".webix_color_line\");\n\t\tthis._colorOutText = this._viewobj.querySelector(\".webix_color_out_text\");\n\t\tthis._colorOutBlock = this._viewobj.querySelector(\".webix_color_out_block\");\n\n\t\tthis._offset = offset(this._colorBlock);\n\t},\n\trefresh:function(){ this.render(); }\n};\n\nconst view = protoUI(api, base.view, EventSystem);\nexport default {api, view};","import {triggerEvent, preventEvent, getTextSize, locate} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport {isUndefined, isArray} from \"../webix/helpers\";\nimport {assert} from \"../webix/debug\";\nimport template from \"../webix/template\";\n\nimport baseview from \"../views/baseview\";\nimport base from \"../views/view\";\n\nimport AutoTooltip from \"../core/autotooltip\";\nimport UIManager from \"../core/uimanager\";\nimport EventSystem from \"../core/eventsystem\";\nimport AtomRender from \"../core/atomrender\";\nimport Settings from \"../core/settings\";\n\n\nconst api = {\n\tname:\"button\",\n\ttouchable:true,\n\t$skin:function(){\n\t\tthis.defaults.height = $active.buttonHeight||$active.inputHeight;\n\t},\n\tdefaults:{\n\t\ttemplate:function(obj, common){\n\t\t\tvar text = common.$renderInput(obj, common);\n\t\t\tif (obj.badge||obj.badge===0) text = text.replace(\"</button>\", \"<span class='webix_badge'>\"+obj.badge+\"</span></button>\");\n\t\t\treturn \"<div class='webix_el_box' style='width:\"+obj.awidth+\"px; height:\"+obj.aheight+\"px'>\"+ text + \"</div>\";\n\t\t},\n\t\tlabel:\"\",\n\t\tvalue:\"\",\n\t\tborderless:true\n\t},\n\t$renderInput:function(obj){\n\t\treturn \"<button type='button' \"+(obj.popup?\"aria-haspopup='true'\":\"\")+\" class='webix_button'>\"+(obj.label||obj.value)+\"</button>\";\n\t},\n\t$init:function(config){\n\t\tthis._viewobj.className += \" webix_control webix_el_\"+(this.$cssName||this.name);\n\n\t\tthis._destroy_with_me = [];\n\t\tthis._set_default_css(config);\n\n\t\tthis.data = this._settings;\n\t\tthis._dataobj = this._viewobj;\n\n\t\tthis.$ready.push(function(){ this._calc_size(this.config); });\n\t},\n\thotkey_setter: function(key){\n\t\tvar control = this;\n\t\tthis._addElementHotKey(key, function(view,ev){\n\t\t\tif(control.isVisible()){\n\t\t\t\tvar elem = control.$view.firstChild;\n\t\t\t\ttriggerEvent(elem, \"MouseEvent\", \"click\");\n\t\t\t\tpreventEvent(ev);\n\t\t\t}\n\t\t});\n\t},\n\t_set_default_css: function(config){\n\t\tif (!config.css || !this._get_class(config.css) || (this.defaults.css && !this._get_class(this.defaults.css))){\n\t\t\tthis._viewobj.className += \" webix_secondary\";\n\t\t}\n\t},\n\t_get_class:function(css){\n\t\tif(typeof css == \"string\"){\n\t\t\tconst classes = { webix_danger:1, webix_transparent:1, webix_primary:1 };\n\t\t\tfor(let i in classes){\n\t\t\t\tif(css.indexOf(i)!==-1)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\t_addElementHotKey: function(key, func, view){\n\t\tvar keyCode = UIManager.addHotKey(key, func, view);\n\t\tthis.attachEvent(\"onDestruct\", function(){\n\t\t\tUIManager.removeHotKey(keyCode, func, view);\n\t\t});\n\t},\n\ttype_setter:function(value){\n\t\tif (this._types[value])\n\t\t\tthis.$renderInput = template(this._types[value]);\n\t\treturn value;\n\t},\n\t_set_inner_size:false,\n\t_types:{\n\t\timage:\"<button type='button' class='webix_button webix_img_btn' style='line-height:#cheight#px;'><img class='webix_image' style='max-width:#cheight#px; max-height:#cheight#px;' src = '#image#'>#label#</button>\",\n\t\timageTop:\"<button type='button' class='webix_button webix_img_btn_top'><img class='webix_image' style='max-width:#cheight#px; max-height:#cheight#px;' src = '#image#'><div class='webix_img_btn_text'>#label#</div></button>\",\n\n\t\ticon:\"<button type='button' class='webix_button webix_img_btn' style='line-height:#cheight#px;'><span class='webix_icon_btn #icon#' style='max-width:#cheight#px;'></span>#label#</button>\",\n\t\ticonTop:\"<button type='button' class='webix_button webix_img_btn_top' style='width:100%;text-align:center;'><span class='webix_icon #icon#'></span><div class='webix_img_btn_text'>#label#</div></button>\",\n\t},\n\t_findAllInputs: function(){\n\t\tvar result = [];\n\t\tvar tagNames = [\"input\",\"select\",\"textarea\",\"button\"];\n\t\tfor(var i=0; i< tagNames.length; i++){\n\t\t\tvar inputs = this.$view.getElementsByTagName(tagNames[i]);\n\t\t\tfor(var j = 0; j< inputs.length; j++){\n\t\t\t\tresult.push(inputs[j]);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t},\n\tdisable: function(){\n\t\tvar i, node, elem = this._getBox();\n\t\tbaseview.api.disable.apply(this, arguments);\n\t\tif(elem && elem.className.indexOf(\" webix_disabled_box\")== -1){\n\t\t\telem.className += \" webix_disabled_box\";\n\t\t\tvar inputs = this._findAllInputs();\n\t\t\tfor(i=0; i< inputs.length; i++)\n\t\t\t\tinputs[i].setAttribute(\"disabled\",true);\n\n\t\t\t// richselect and based on it\n\t\t\tnode = this.getInputNode();\n\t\t\tif(node && node.tagName.toLowerCase() == \"div\"){\n\t\t\t\tthis._disabledTabIndex = node.getAttribute(\"tabIndex\");\n\t\t\t\tnode.removeAttribute(\"tabIndex\");\n\t\t\t}\n\n\t\t\tif(this._settings.labelPosition == \"top\"){\n\t\t\t\tvar label = this._dataobj.firstChild;\n\t\t\t\tif(label)\n\t\t\t\t\tlabel.className += \" webix_disabled_top_label\";\n\t\t\t}\n\t\t}\n\t},\n\tenable: function(){\n\t\tbaseview.api.enable.apply(this, arguments);\n\t\tvar node,\n\t\t\telem = this._getBox();\n\t\tif(elem){\n\t\t\telem.className = elem.className.replace(\" webix_disabled_box\",\"\");\n\t\t\tvar inputs = this._findAllInputs();\n\t\t\tfor(var i=0; i< inputs.length; i++)\n\t\t\t\tinputs[i].removeAttribute(\"disabled\");\n\n\t\t\tnode = this.getInputNode();\n\t\t\tif(node && !isUndefined(this._disabledTabIndex))\n\t\t\t\tnode.setAttribute(\"tabIndex\",this._disabledTabIndex);\n\n\t\t\tif(this._settings.labelPosition == \"top\"){\n\t\t\t\tvar label = this._dataobj.firstChild;\n\t\t\t\tif(label)\n\t\t\t\t\tlabel.className = label.className.replace(\" webix_disabled_top_label\",\"\");\n\t\t\t}\n\t\t}\n\t},\n\t$setSize:function(x,y){\n\t\tif(base.api.$setSize.call(this,x,y)){\n\t\t\tthis.render();\n\t\t}\n\t},\n\tsetValue:function(value, config){\n\t\tvalue = this.$prepareValue(value);\n\t\tconst oldvalue = this._settings.value;\n\n\t\tif (this.$compareValue(oldvalue, value)){\n\t\t\t//controls with post formating, we need to repaint value\n\t\t\tif(this._rendered_input && this._pattern){\n\t\t\t\tvalue = this._pattern(value);\n\t\t\t\tconst input = this.getInputNode();\n\t\t\t\tif(input && !isUndefined(input.value) && input.value != value)\n\t\t\t\t\tthis.$setValue(value);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tthis._settings.value = value;\n\t\tif (this._rendered_input)\n\t\t\tthis.$setValue(value);\n\n\t\tthis.callEvent(\"onChange\", [value, oldvalue, config]);\n\t},\n\t$compareValue:function(oldvalue, value){ \n\t\tif (typeof value === \"number\") value = value.toString();\n\t\tif (typeof oldvalue === \"number\") oldvalue = oldvalue.toString();\n\t\treturn oldvalue == value;\n\t},\n\t$prepareValue:function(value){ return value === 0 ? \"0\" : (value || \"\").toString(); },\n\tvalue_setter:function(value){\n\t\treturn this.$prepareValue(value);\n\t},\n\t//visual part of setValue\n\t$setValue:function(value){\n\t\tconst node = this.getInputNode();\n\t\tif (node && !this._types[this._settings.type]){\n\t\t\tvalue = this._settings.label || value;\n\t\t\tif (node.tagName==\"BUTTON\") node.innerHTML = value;\n\t\t\telse node.value = value;\n\t\t}\n\t},\n\tgetValue:function(){\n\t\t//if button was rendered - returning actual value\n\t\t//otherwise - returning last set value\n\t\tvar value = this._rendered_input ? this.$getValue() : this._settings.value;\n\t\treturn (typeof value == \"undefined\") ? \"\" : value;\n\t},\n\t$getValue:function(){\n\t\treturn this._settings.value||\"\";\t\n\t},\n\tfocus:function(){\n\t\tif(!UIManager.canFocus(this))\n\t\t\treturn false;\n\t\t\n\t\tvar input = this.getInputNode();\n\t\tif (input && input.focus) input.focus();\n\t},\n\tblur:function() {\n\t\tvar input = this.getInputNode();\n\t\tif (input && input.blur) input.blur();\n\t},\n\t//get input element\n\tgetInputNode: function() {\n\t\treturn this._dataobj.getElementsByTagName(\"input\")[0]||this._dataobj.getElementsByTagName(\"button\")[0];\n\t},\n\t//get top-level sub-container\n\t_getBox:function(){\n\t\tfor(var i=0;i< this._dataobj.childNodes.length;i++){\n\t\t\tif(this._dataobj.childNodes[i].className.indexOf(\"webix_el_box\")>=0)\n\t\t\t\treturn this._dataobj.childNodes[i];\n\t\t}\n\t\treturn null;\n\t},\n\t_get_tooltip_data:function(t,e){\n\t\tlet node = e.target;\n\t\tlet box = this._getBox();\n\n\t\tconst isTopLabel = this._settings.labelPosition == \"top\" && this._dataobj.firstChild.contains(node);\n\n\t\tif (isTopLabel || box && box.contains(node))\n\t\t\treturn this._settings;\n\t\treturn null;\n\t},\n\t_sqrt_2:Math.sqrt(2),\n\t_calc_size:function(config){\n\t\tconfig = config || this._settings;\n\t\tif (config.autowidth){\n\t\t\tlet width = getTextSize((config.value||config.label || \"\"), \"webixbutton\").width +\n\t\t\t\t(config.badge||config.badge===0 ? getTextSize(config.badge, \"webix_badge\").width * 2 - 32 : 0) +\n\t\t\t\t(config.type === \"icon\" ? 24 : 0) +\n\t\t\t\t(config.type === \"image\" ? config.height-$active.inputPadding : 0);\n\n\t\t\twidth = Math.max(config.minWidth || 0, width);\n\t\t\tconfig.width = Math.min(config.maxWidth || Infinity, width);\n\t\t}\n\t},\n\t_calck_input_size:function(){\n\t\t//use width for both width and inputWidth settings in clever way\n\t\t//in form, we can define width for some element smaller than for siblings\n\t\t//it will use inputWidth to render the desired view\n\t\tthis._input_width = this._settings.inputWidth || \n\t\t\t((this._content_width - this._settings.width > 2)?this._settings.width:0) || this._content_width;\n\t\tthis._input_height = this._settings.inputHeight||this._inputHeight||0;\n\t},\n\tresize: function(){\n\t\tthis._calc_size();\n\t\treturn base.api.resize.apply(this,arguments);\n\t},\n\trender:function(){\n\t\tthis._calck_input_size();\n\t\tthis._settings.awidth  = this._input_width||this._content_width;\n\t\tthis._settings.aheight = this._input_height||this._content_height;\n\n\t\t//image button - image width\n\t\tthis._settings.bheight = this._settings.aheight+2;\n\t\tthis._settings.cheight = this._settings.aheight- 2*$active.inputPadding;\n\t\tthis._settings.dheight = this._settings.cheight - 2; // - borders\n\n\t\tif(AtomRender.render.call(this)){\n\t\t\tthis._rendered_input = true;\n\t\t\tif (this._set_inner_size) this._set_inner_size();\n\t\t\tif (this._settings.align){\n\t\t\t\tvar handle = this._dataobj.firstChild;\n\t\t\t\tif (this._settings.labelPosition == \"top\" && handle.nextSibling)\n\t\t\t\t\thandle = handle.nextSibling;\n\n\t\t\t\tswitch(this._settings.align){\n\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\thandle.style.cssFloat = \"right\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"center\":\n\t\t\t\t\t\thandle.style.display = \"inline-block\";\n\t\t\t\t\t\thandle.parentNode.style.textAlign = \"center\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"middle\":\n\t\t\t\t\t\thandle.style.marginTop = Math.round((this._content_height-this._input_height)/2)+\"px\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"bottom\": \n\t\t\t\t\t\thandle.style.marginTop = (this._content_height-this._input_height)+\"px\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"left\":\n\t\t\t\t\t\thandle.style.cssFloat = \"left\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tassert(false, \"Unknown align mode: \"+this._settings.align);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.$render)\n\t\t\t\tthis.$render(this.data);\n\n\t\t\tif (this._settings.disabled)\n\t\t\t\tthis.disable();\n\n\t\t\tif (this._init_once){\n\t\t\t\tthis._init_once(this.data);\n\t\t\t\tthis._init_once = 0;\n\t\t\t}\n\t\t}\n\t},\n\n\trefresh:function(){ this.render(); },\n\n\ton_click:{\n\t\t_handle_tab_click: function(ev){\n\t\t\tconst id = locate(ev, /*@attr*/\"button_id\");\n\t\t\tconst opt = this.getOption(id);\n\n\t\t\tif (opt && !opt.disabled && this.callEvent(\"onBeforeTabClick\", [id, ev])){\n\t\t\t\tthis.setValue(id, \"user\");\n\t\t\t\tthis.focus();\n\t\t\t\tthis.callEvent(\"onAfterTabClick\", [id, ev]);\n\t\t\t}\n\t\t},\n\t\twebix_all_segments:function(ev, button){\n\t\t\tthis.on_click._handle_tab_click.call(this, ev, button);\n\t\t},\n\t\twebix_all_tabs:function(ev, button){\n\t\t\tthis.on_click._handle_tab_click.call(this, ev, button);\n\t\t},\n\t\twebix_inp_counter_next:function(){\n\t\t\tif (!this._settings.readonly)\n\t\t\t\tthis.next(this._settings.step, \"user\");\n\t\t},\n\t\twebix_inp_counter_prev:function(){\n\t\t\tif (!this._settings.readonly)\n\t\t\t\tthis.prev(this._settings.step, \"user\");\n\t\t},\n\t\twebix_input_icon:function(){\n\t\t\tthis.getInputNode().focus();\n\t\t},\n\t\twebix_clear_icon:function(){\n\t\t\tif (this.$allowsClear) this.setValue(\"\", \"user\");\n\t\t\treturn false;\n\t\t},\n\t\twebix_inp_checkbox_border: function(e) {\n\t\t\tif (!this._settings.disabled && e.target.tagName != \"DIV\" && !this._settings.readonly)\n\t\t\t\tthis.toggle(\"user\");\n\t\t},\n\t\twebix_inp_checkbox_label: function() {\n\t\t\tif (!this._settings.readonly)\n\t\t\t\tthis.toggle(\"user\");\n\t\t},\n\t\twebix_inp_radio_border: function(e) {\n\t\t\tconst id = locate(e, /*@attr*/\"radio_id\");\n\t\t\tconst opt = this.getOption(id);\n\n\t\t\tif (opt && !opt.disabled){\n\t\t\t\tthis.setValue(id, \"user\");\n\t\t\t\tthis.focus();\n\t\t\t}\n\t\t},\n\t\twebix_tab_more_icon: function(ev,obj,node){\n\t\t\tconst popup = this.getPopup();\n\t\t\tif (!popup.isVisible()){\n\t\t\t\tpopup.resize();\n\t\t\t\tpopup.show(node, null, true);\n\t\t\t} else\n\t\t\t\tpopup.hide();\n\t\t},\n\t\twebix_tab_close:function(e){\n\t\t\tconst id = locate(e, /*@attr*/\"button_id\");\n\t\t\tconst opt = this.getOption(id);\n\n\t\t\tif (opt && !opt.disabled && this.callEvent(\"onBeforeTabClose\", [id, e]))\n\t\t\t\tthis.removeOption(id);\n\t\t\treturn false;\n\t\t}\n\t},\n\n\t//method do not used by button, but  used by other child-views\n\t_check_options:function(opts){\n\t\tassert(!!opts, this.name+\": options not defined\");\n\t\tassert(isArray(opts), this.name+\": options must be an array\");\n\n\t\tfor(var i=0;i<opts.length;i++){\n\t\t\t// asserts need to be removed in final version\t\t\t\n\t\t\tassert(!opts[i].text, \"Please replace .text with .value in control config\");\n\t\t\tassert(!opts[i].label, \"Please replace .label with .value in control config\");\n\n\t\t\tif(typeof opts[i]==\"string\"){\n\t\t\t\topts[i] = {id:opts[i], value:opts[i]};\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(isUndefined(opts[i].id))\n\t\t\t\t\topts[i].id = opts[i].value;\n\n\t\t\t\tif(isUndefined(opts[i].value))\n\t\t\t\t\topts[i].value = opts[i].id;\n\t\t\t}\n\t\t}\n\t\treturn opts;\n\t},\n\t_get_div_placeholder: function(obj){\n\t\tvar placeholder = (obj?obj.placeholder:this._settings.placeholder);\n\t\treturn (placeholder?\"<span class='webix_placeholder'>\"+placeholder+\"</span>\":\"\");\n\t}\n};\n\nconst view = protoUI(api, base.view, AutoTooltip, AtomRender, Settings, EventSystem);\nexport default {api, view};","import {protoUI, ui, $$} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport {isUndefined, isArray, extend, uid, delay} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport {getSelectionRange, setSelectionRange, getTextSize} from \"../webix/html\";\nimport {assert} from \"../webix/debug\";\nimport template from \"../webix/template\";\n\nimport rules from \"../webix/rules\";\nimport button from \"./button\";\nimport base from \"../views/view\";\n\nimport TextPattern from \"../core/textpattern\";\n\nconst api = {\n\tname:\"text\",\n\t$allowsClear:true,\n\t_init_onchange:function(){\n\t\tif (this.$allowsClear){\n\t\t\tconst c = this._settings;\n\t\t\tconst node = this.getInputNode();\n\t\t\t//attach onChange handler only for controls which do not manage blur on their own\n\t\t\t//for example - combo\n\t\t\tif (!this.$onBlur)\n\t\t\t\t_event(node, \"change\", () => this._applyChanges(\"user\"));\n\t\t\tif (c.suggest)\n\t\t\t\t$$(c.suggest).linkInput(this);\n\t\t\tif (c.clear && !this.addSection){\n\t\t\t\tthis._clear_icon = this.$view.querySelector(\".webix_input_icon:last-child\");\n\t\t\t\tif (node.tagName == \"INPUT\" || node.tagName == \"SELECT\")\n\t\t\t\t\t_event(node, \"input\", (e) => this._toggleClearIcon(e.target.value));\n\n\t\t\t\tconst text = this.getText ? this.getText() : c.text||c.value;\n\t\t\t\tthis._toggleClearIcon(text);\n\t\t\t}\n\t\t}\n\t},\n\t_applyChanges: function(c){\n\t\tconst value = this.getValue();\n\t\tthis.setValue(value, c);\n\t},\n\t_toggleClearIcon:function(value){\n\t\tconst c = this._settings;\n\t\tif (c.readonly || !c.clear || !this._clear_icon) return;\n\n\t\tif (c.clear == \"hover\" || c.clear == \"replace\"){\n\t\t\tconst css = value ? \"webix_clear_icon \"+(c.clear == \"hover\" ? c.icon : \"wxi-close\") : c.icon;\n\t\t\tthis._clear_icon.className = \"webix_input_icon \" + css;\n\t\t} else {\n\t\t\tconst state = value ? \"\" : \"hidden\";\n\t\t\tif (this._clear_icon.style.visibility !== state)\n\t\t\t\tthis._clear_icon.style.visibility = state;\n\t\t}\n\t},\n\t$skin:function(){\n\t\tbutton.api.$skin.call(this);\n\n\t\tthis.defaults.height = $active.inputHeight;\n\t\tthis.defaults.inputPadding = $active.inputPadding;\n\t\tthis._inputSpacing = $active.inputSpacing;\n\t\tthis._labelTopHeight = $active.labelTopHeight;\n\t},\n\t$init:function(config){\n\t\tif (config.labelPosition == \"top\" && isUndefined(config.height) && this.defaults.height) // textarea\n\t\t\tconfig.height = this.defaults.height + (config.label?this._labelTopHeight:0);\n\n\t\t// used in clear_setter\n\t\tif (!isUndefined(config.icon))\n\t\t\tthis._settings.icon = config.icon;\n\n\t\tif (this.$onBlur)\n\t\t\tthis.attachEvent(\"onBlur\", function(){\n\t\t\t\tif (this._rendered_input) this.$onBlur();\n\t\t\t});\n\t\tthis.attachEvent(\"onAfterRender\", this._init_onchange);\n\t\tthis.attachEvent(\"onDestruct\", function(){\n\t\t\tthis._clear_icon = null;\n\t\t});\n\t},\n\tclear_setter:function(value){\n\t\tif (value){\n\t\t\tif (!this._settings.icon) value = true;\n\n\t\t\tif (value !== \"hover\" && value !== \"replace\")\n\t\t\t\tvalue = !!value;\n\t\t}\n\t\treturn value;\n\t},\n\t$renderIcon:function(c){\n\t\tconst height = c.aheight - 2*c.inputPadding;\n\t\tconst padding = (height - 18)/2 -1;\n\t\tlet right = this._inputSpacing/2 - 24;\n\t\tlet html = \"\";\n\n\t\tif (c.icon){\n\t\t\tright += 24;\n\t\t\thtml += \"<span style='right:\"+right+\"px;height:\"+(height-padding)+\"px;padding-top:\"+padding+\"px;' class='webix_input_icon \"+c.icon+\"'></span>\";\n\t\t}\n\n\t\tif (!c.readonly && c.clear === true){\n\t\t\tright += 24;\n\t\t\thtml += \"<span style='right:\"+right+\"px;height:\"+(height-padding)+\"px;padding-top:\"+padding+\"px;' class='webix_input_icon webix_clear_icon webix_icon_transparent wxi-close'></span>\";\n\t\t}\n\n\t\treturn html;\n\t},\n\trelatedView_setter:function(value){\n\t\tthis.attachEvent(\"onChange\", function(){\n\t\t\tconst value = this.getValue();\n\t\t\tconst mode = this._settings.relatedAction;\n\t\t\tconst viewid = this._settings.relatedView;\n\t\t\tlet view = $$(viewid);\n\t\t\tif (!view){\n\t\t\t\tconst top = this.getTopParentView();\n\t\t\t\tif (top && top.$$)\n\t\t\t\t\tview = top.$$(viewid);\n\t\t\t}\n\n\t\t\tassert(view, \"Invalid relatedView: \"+viewid);\n\n\t\t\tif (mode == \"enable\"){\n\t\t\t\tif (value) view.enable(); else view.disable();\n\t\t\t} else {\n\t\t\t\tif (value) view.show(); else view.hide();\n\t\t\t}\n\t\t});\n\t\treturn value;\n\t},\n\tvalidateEvent_setter:function(value){\n\t\tif (value == \"blur\")\n\t\t\tthis.attachEvent(\"onBlur\", this.validate);\n\n\t\tif (value == \"key\")\n\t\t\tthis.attachEvent(\"onTimedKeyPress\", this.validate);\n\n\t\treturn value;\n\t},\n\tvalidate:function(){\n\t\tlet rule = this._settings.validate;\n\t\tif (!rule && this._settings.required)\n\t\t\trule = rules.isNotEmpty;\n\n\t\tconst form =this.getFormView();\n\t\tconst name = this._settings.name;\n\t\tconst value = this.getValue();\n\t\tconst data = {}; data[name] = value;\n\n\t\tassert(form, \"Validation works only for fields in the form\");\n\t\tassert(name, \"Validation works only for fields with name\");\n\n\t\tif (rule && !form._validate(rule, value, data, name))\n\t\t\treturn false;\n\t\treturn true;\n\t},\n\t_getInvalidText: function(){\n\t\tconst text = this._settings.invalidMessage;\n\t\tif(typeof text == \"function\"){\n\t\t\ttext.call(this);\n\t\t}\n\t\treturn text;\n\t},\n\tbottomLabel_setter: function(text){\n\t\t// this._get_input_width returns 0\n\t\t// use delay to wait for the end of the render\n\t\tdelay(() => {\n\t\t\tif(!this.$destructed)\n\t\t\t\tthis.setBottomText(text);\n\t\t});\n\t},\n\tsetBottomText: function(text){\n\t\tconst config = this._settings;\n\t\tif (!isUndefined(text)){\n\t\t\tif (config.bottomLabel == text) return;\n\t\t\tconfig.bottomLabel = text;\n\t\t}\n\n\t\tlet sel;\n\t\tconst input = this.getInputNode();\n\t\tif (input && !isUndefined(input.value)){\n\t\t\tif (input == document.activeElement) sel = getSelectionRange(input);\n\t\t\t// save input value before rendering\n\t\t\tthis._applyChanges(\"auto\");\n\t\t}\n\n\t\tconst message = (config.invalid ? config.invalidMessage : \"\") || config.bottomLabel;\n\t\tif (!message && !config.bottomPadding)\n\t\t\tconfig.inputHeight = 0;\n\n\t\tif (message && (!config.bottomPadding || this._restorePadding)){\n\t\t\tthis._restorePadding = 1;\n\t\t\tconfig.bottomPadding = getTextSize(message, \"webix_inp_bottom_label\", this._get_input_width(config)).height;\n\n\t\t\tthis.render();\n\t\t\tthis.adjust();\n\t\t\tthis.resize();\n\t\t} else if (!message && this._restorePadding){\n\t\t\tconfig.bottomPadding = this._restorePadding = 0;\n\t\t\t//textarea\n\t\t\tif (!config.height) this.render();\n\t\t\tthis.adjust();\n\t\t\tthis.resize();\n\t\t} else\n\t\t\tthis.render();\n\n\t\tif (sel)\n\t\t\tsetSelectionRange(this.getInputNode(), sel.start, sel.end);\n\t},\n\t$getSize: function(){\n\t\tconst sizes = base.api.$getSize.apply(this,arguments);\n\t\tconst heightInc = this.config.bottomPadding;\n\t\tif(heightInc){\n\t\t\tsizes[2] += heightInc;\n\t\t\tsizes[3] += heightInc;\n\t\t}\n\t\treturn sizes;\n\t},\n\t$setSize:function(x,y){\n\t\tconst config = this._settings;\n\n\t\tif(base.api.$setSize.call(this,x,y)){\n\t\t\tif (!x || !y) return;\n\n\t\t\tif (config.labelPosition == \"top\"){\n\t\t\t\tconfig.labelWidth = 0;\n\t\t\t\t// textarea\n\t\t\t\tif (!config.inputHeight)\n\t\t\t\t\tthis._inputHeight = this._content_height - (config.label?this._labelTopHeight:0) - (this.config.bottomPadding||0);\n\t\t\t} else {\n\t\t\t\tif(config.label)\n\t\t\t\t\tconfig.labelWidth = this._getLabelWidth(config.labelWidth, config.label, config.required);\n\t\t\t\tif (config.bottomPadding)\n\t\t\t\t\tconfig.inputHeight = this._content_height - this.config.bottomPadding;\n\t\t\t}\n\t\t\tthis.render();\n\t\t}\n\t},\n\t_get_input_width: function(config){\n\t\tconst width = (this._input_width||0) - (config.label?config.labelWidth:0) - this._inputSpacing - (config.iconWidth || 0);\n\n\t\t//prevent js error in IE\n\t\treturn (width < 0)?0:width;\n\t},\n\t_render_div_block:function(obj, common){\n\t\tconst id = \"x\"+uid();\n\t\tconst width = common._get_input_width(obj);\n\t\tconst inputAlign = obj.inputAlign || \"left\";\n\t\tconst height = obj.aheight - 2*$active.inputPadding - 2*$active.borderWidth;\n\t\tconst rightPadding = obj.clear === true ? \"padding-right:51px;\" : \"\";\n\t\tconst text = (obj.text||obj.value||this._get_div_placeholder(obj));\n\t\tconst html = \"<div class='webix_inp_static' role='combobox' aria-label='\"+template.escape(obj.label)+\"' tabindex='0'\"+(obj.readonly?\" aria-readonly='true'\":\"\")+(obj.invalid?\"aria-invalid='true'\":\"\")+\" onclick='' style='line-height:\"+height+\"px;width:\"+width+\"px;text-align:\"+inputAlign+\";\"+rightPadding+\"'>\"+text+\"</div>\";\n\t\treturn common.$renderInput(obj, html, id);\n\t},\n\t_baseInputHTML:function(tag){\n\t\tlet html = \"<\"+tag+(this._settings.placeholder?\" placeholder='\"+template.escape(this._settings.placeholder)+\"' \":\" \");\n\t\tif (this._settings.readonly)\n\t\t\thtml += \"readonly='true' aria-readonly=''\";\n\t\tif(this._settings.required)\n\t\t\thtml += \"aria-required='true'\";\n\t\tif(this._settings.invalid)\n\t\t\thtml += \"aria-invalid='true'\";\n\n\t\tconst attrs = this._settings.attributes;\n\t\tif (attrs)\n\t\t\tfor(const prop in attrs)\n\t\t\t\thtml += prop+\"='\"+attrs[prop]+\"' \";\n\t\treturn html;\n\t},\n\t$renderLabel: function(config, id){\n\t\tlet label = \"\";\n\n\t\tif (config.label){\n\t\t\tlet top = this._settings.labelPosition == \"top\";\n\t\t\tlet style = `text-align:${config.labelAlign||\"left\"}; line-height:${this._getLabelHeight(top)}px; `;\n\n\t\t\tif (top)\n\t\t\t\tstyle += \"display:block;\";\n\t\t\telse\n\t\t\t\tstyle += config.labelWidth ? `width:${config.labelWidth}px;` : \"display:none;\";\n\n\t\t\tlabel = \"<label style='\"+style+\"' onclick='' for='\"+id+\"' class='webix_inp_\"+(top?\"top_\":\"\")+\"label \"+(config.required?\"webix_required\":\"\")+\"'>\" + (config.label||\"\") + \"</label>\";\n\t\t}\n\t\treturn label;\n\t},\n\t_getLabelHeight:function(top){\n\t\treturn top ? this._labelTopHeight-this._settings.inputPadding : (this._settings.aheight - 2*this._settings.inputPadding);\n\t},\n\t$renderInput: function(config, div_start, id) {\n\t\tconst inputAlign = (config.inputAlign||\"left\");\n\t\tconst top = (config.labelPosition == \"top\");\n\t\tconst inputWidth = this._get_input_width(config);\n\n\t\tid = id||uid();\n\n\t\tconst label = this.$renderLabel(config,id);\n\t\tlet html = \"\";\n\t\tif(div_start){\n\t\t\thtml += div_start;\n\t\t} else {\n\t\t\tconst value =  template.escape(config.text || this._pattern(config.value));\n\t\t\tlet rightPadding = (config.icon || config.clear ? 27 : 0) + (config.icon && config.clear === true ? 24 : 0);\n\t\t\trightPadding = rightPadding && !this.addSection ? \"padding-right:\"+rightPadding+\"px;\" : \"\";\n\n\t\t\thtml += this._baseInputHTML(\"input\")+\"id='\"+id+\"' type='\"+(config.type||this.name)+\"'\"+(config.editable?\" role='combobox'\":\"\")+\n\t\t\t\t\" value='\"+value+\"' style='width:\"+inputWidth+\"px;text-align:\"+inputAlign+\";\"+rightPadding+\"'\";\n\n\t\t\tconst attrs = config.attributes;\n\t\t\tif (attrs)\n\t\t\t\tfor(let prop in attrs)\n\t\t\t\t\thtml += \" \"+prop+\"='\"+attrs[prop]+\"'\";\n\t\t\thtml += \" />\";\n\t\t}\n\t\thtml += this.$renderIcon ? this.$renderIcon(config) : \"\";\n\n\t\tlet result = \"\";\n\t\t//label position, top or left\n\t\tif (top)\n\t\t\tresult = label+\"<div class='webix_el_box' style='width:\"+config.awidth+\"px; height:\"+config.aheight+\"px'>\"+html+\"</div>\";\n\t\telse\n\t\t\tresult = \"<div class='webix_el_box' style='width:\"+config.awidth+\"px; height:\"+config.aheight+\"px'>\"+label+html+\"</div>\";\n\n\t\t//bottom message text\n\t\tconst message = (config.invalid ? config.invalidMessage : \"\") || config.bottomLabel;\n\t\tif (message){\n\t\t\tconst padding = config.awidth - inputWidth - $active.inputPadding;\n\t\t\tresult += \"<div class='webix_inp_bottom_label'\"+(config.invalid?\"role='alert' aria-relevant='all'\":\"\")+\" style='width:\"+(inputWidth||config.awidth)+\"px;margin-left:\"+Math.max(padding, $active.inputPadding)+\"px;'>\"+message+\"</div>\";\n\t\t}\n\n\t\treturn result;\n\t},\n\tdefaults:{\n\t\ttemplate:function(obj, common){\n\t\t\treturn common.$renderInput(obj);\n\t\t},\n\t\tlabel:\"\",\n\t\tlabelWidth:80\n\t},\n\t_getLabelWidth: function(width, label, required){\n\t\tif(width == \"auto\")\n\t\t\twidth = getTextSize(label, \"webix_inp_label\"+(required ? \" webix_required\" : \"\")).width;\n\t\treturn width ? Math.max(width, $active.dataPadding) : 0;\n\t},\n\ttype_setter:function(value){ return value; },\n\t_set_inner_size:false,\n\t_set_default_css:function(){},\n\t_pattern:function(value){ return value; },\n\t$setValue:function(value){\n\t\tvalue = this._pattern(value);\n\n\t\tif(this.getInputNode())\n\t\t\tthis.getInputNode().value = value;\n\n\t\tthis._toggleClearIcon(value);\n\t},\n\t$getValue:function(){\n\t\treturn this._pattern(this.getInputNode().value, false);\n\t},\n\tsetValueHere:function(v, data, details){\n\t\tif (details && details.symbol){\n\t\t\tconst s = details.symbol;\n\t\t\tlet value = this.getValue();\n\t\t\tlet last = value.substring(details.pos);\n\n\t\t\tvalue = value.substring(0, details.pos);\n\t\t\tvalue = value.substring(0, value.lastIndexOf(s)+s.length) + v;\n\n\t\t\tthis.setValue(value + last, details.config);\n\t\t\tsetSelectionRange(this.getInputNode(), value.length);\n\t\t} else\n\t\t\tthis.setValue(v, details && details.config);\n\t},\n\tsuggest_setter:function(value){\n\t\tif (value){\n\t\t\tassert(value !== true, \"suggest options can't be set as true, data need to be provided instead\");\n\n\t\t\tif (typeof value == \"string\"){\n\t\t\t\tconst attempt = $$(value);\n\t\t\t\tif (attempt) \n\t\t\t\t\treturn $$(value)._settings.id;\n\n\t\t\t\tvalue = { body: { url:value , dataFeed:value }};\n\t\t\t}\n\t\t\telse if (value.getItem)\n\t\t\t\tvalue = { body: { data:value }};\n\t\t\telse if (isArray(value))\n\t\t\t\tvalue = { body: { data: this._check_options(value) }};\n\t\t\telse if (!value.body)\n\t\t\t\tvalue.body = { };\n\n\t\t\textend(value, { view:\"suggest\" });\n\n\t\t\tconst view = ui(value);\n\t\t\tthis._destroy_with_me.push(view);\n\n\t\t\tthis.$ready.push(() => view._settings.master = this._settings.id);\n\t\t\treturn view._settings.id;\n\t\t}\n\t\treturn false;\n\t}\n};\n\nconst view = protoUI(api, TextPattern, button.view);\nexport default {api, view};","import Number from \"../core/number\";\n\nimport patterns from \"../webix/patterns\";\n\nimport {getSelectionRange, setSelectionRange} from \"../webix/html\";\nimport {bind, isUndefined} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\n\nconst nav_controls = {\n\t9:\"tab\",\n\t38:\"up\",\n\t40:\"down\",\n\t37:\"left\",\n\t39:\"right\"\n};\n\nconst TextPattern = {\n\t$init:function(config){\n\t\tconst pattern =  this.defaults.pattern || config.pattern;\n\t\tlet format = this.defaults.format || config.format;\n\t\tconfig.value = isUndefined(config.value) ? \"\" :config.value;\n\n\t\tif (pattern || (format && !this.format_setter)){\n\t\t\tthis.attachEvent(\"onKeyPress\", function(code, e){\n\t\t\t\tif(e.ctrlKey || e.altKey || this._settings.readonly || this._custom_format)\n\t\t\t\t\treturn;\n\n\t\t\t\tif(code>105 && code<112) //numpad operators\n\t\t\t\t\tcode -=64;\n\n\t\t\t\tif(nav_controls[code] && code !== 8 && code !==46){  //del && bsp\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._on_key_pressed(e, code);\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\tthis.attachEvent(\"onAfterRender\", this._after_render);\n\t\t\tthis.getText = function(){ return this.getInputNode().value; };\n\t\t\tthis.$prepareValue = function(value){ return this._pattern(value, false); };\n\t\t\tthis._pattern = function(value, mode){\n\t\t\t\tif (mode === false)\n\t\t\t\t\treturn this._getRawValue(value);\n\t\t\t\telse\n\t\t\t\t\treturn this._matchPattern(value);\n\t\t\t};\n\n\t\t\tif (format){\n\t\t\t\tif (typeof format === \"object\"){\n\t\t\t\t\tthis._custom_format = format;\n\t\t\t\t} else {\n\t\t\t\t\tformat = Number.getConfig(format);\n\t\t\t\t\tthis._custom_format = {\n\t\t\t\t\t\tparse : function(value){ return Number.parse(value, format); },\n\t\t\t\t\t\tedit : function(value){ return Number.format(value, format); },\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// initialize pattern before value_setter\n\t\tif (pattern){\n\t\t\tthis._settings.pattern = this.pattern_setter(pattern);\n\t\t\tdelete config.pattern;\n\t\t}\n\t},\n\tpattern_setter:function(value){\n\t\tlet pattern = patterns[value] || value;\n\n\t\tif (typeof pattern == \"string\") pattern = { mask: pattern };\n\t\tpattern.allow = pattern.allow || /[A-Za-z0-9]/g;\n\n\t\tthis._patternScheme(pattern);\n\t\treturn pattern;\n\t},\n\t_init_validation:function(){\n\t\tthis.config.validate = this.config.validate || bind(function(){\n\t\t\tconst value = this.getText();\n\t\t\tconst raw = value.replace(this._pattern_chars, \"\");\n\t\t\tconst matches = (value.toString().match(this._pattern_allows) || []).join(\"\");\n\t\t\treturn (matches.length == raw.length && value.length == this._settings.pattern.mask.length);\n\t\t}, this);\n\t},\n\t_after_render:function(){\n\t\tif (!this._custom_format) \n\t\t\t_event(this.getInputNode(), \"input\", function(){\n\t\t\t\tconst stamp = (new Date()).valueOf();\n\t\t\t\tif(!this._property_stamp || stamp-this._property_stamp>100){\n\t\t\t\t\tthis._property_stamp = stamp;\n\t\t\t\t\tthis.$setValue(this.getText());\n\t\t\t\t}\n\t\t\t}, {bind:this});\n\n\t\t_event(this.getInputNode(), \"blur\", () => this._applyChanges(\"user\"));\n\t},\n\t_patternScheme:function(pattern){\n\t\tlet mask = pattern.mask, scheme = {}, chars = \"\", count = 0;\n\t\t\n\t\tfor(let i = 0; i<mask.length; i++){\n\t\t\tif(mask[i] === \"#\"){\n\t\t\t\tscheme[i] = count; count++;\n\t\t\t} else {\n\t\t\t\tscheme[i] = false;\n\t\t\t\tif(chars.indexOf(mask[i]) === -1) chars+=\"\\\\\"+mask[i];\n\t\t\t}\n\t\t}\n\n\t\tthis._pattern_allows = pattern.allow;\n\t\tthis._pattern_chars = new RegExp(\"[\"+chars+\"]\", \"g\");\n\t\tthis._pattern_scheme = scheme;\n\n\t\tthis._init_validation();\n\t},\n\t_on_key_pressed:function(e, code){\n\t\tconst node = this.getInputNode();\n\t\tlet value = node.value;\n\t\tlet pos = getSelectionRange(node);\n\t\tlet chr = \"\";\n\t\t\n\t\tif(code){\n\t\t\tif (code == 8 || code == 46){\n\t\t\t\tif(pos.start == pos.end){\n\t\t\t\t\tif(code == 8) pos.start--;\n\t\t\t\t\telse pos.end++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tchr = String.fromCharCode(code);\n\t\t\t\tconst isCapsLock = e.getModifierState(\"CapsLock\");\n\t\t\t\tif (!e.shiftKey && !isCapsLock || e.shiftKey && isCapsLock) chr = chr.toLowerCase();\n\t\t\t}\n\t\t}\n\n\t\tvalue = value.substr(0, pos.start) + chr +value.substr(pos.end);\n\t\tpos = this._getCaretPos(chr, value.length, pos.start, code);\n\n\t\tthis._input_code = code;\n\t\tthis.$setValue(value);\n\n\t\tsetSelectionRange(node, pos);\n\t},\n\t_getCaretPos:function(chr, len, pos, code){\n\t\tif((chr && chr.match(this._pattern_allows)) || (code ==8 || code ==46)){\n\t\t\tpos = chr ? pos+1 : pos;\n\t\t\tpos = this._fixCaretPos(pos, code);\n\t\t}\n\t\telse if(len-1 == pos && code !==8 && code !==46){\n\t\t\tconst rest = this._settings.pattern.mask.indexOf(\"#\", pos);\n\t\t\tif(rest>0) pos += rest;\n\t\t}\n\t\treturn pos;\n\t},\n\t_fixCaretPos:function(pos, code){\n\t\tconst prev = pos-(code !== 46)*1;\n\n\t\tif(this._pattern_scheme[prev] === false){\n\t\t\tpos = pos+(code ==8 ? -1: 1);\n\t\t\treturn this._fixCaretPos(pos, code);\n\t\t}\n\t\tif(this._pattern_scheme[pos] === false && code !==8)\n\t\t\treturn this._fixCaretPos(pos+1, code)-1;\n\t\treturn pos;\n\t},\n\t_getRawValue:function(value){\n\t\tif (this._custom_format)\n\t\t\treturn this._custom_format.parse(value);\n\n\t\tvalue = value || value === 0 ? value : \"\";\n\t\tconst matches = value.toString().match(this._pattern_allows) || [];\n\t\treturn matches.join(\"\").replace(this._pattern_chars, \"\");\n\t},\n\t_matchPattern:function(value){\n\t\tif (this._custom_format)\n\t\t\treturn this._custom_format.edit(this._custom_format.parse(value));\n\n\t\tlet raw = this._getRawValue(value),\n\t\t\tpattern = this._settings.pattern.mask,\n\t\t\tmask = this._settings.pattern.mask,\n\t\t\tscheme = this._pattern_scheme,\n\t\t\tend = false,\n\t\t\tindex = 0,\n\t\t\trawIndex = 0,\n\t\t\trawLength = 0;\n\n\t\tfor(let i in scheme){\n\t\t\tif(scheme[i]!==false){\n\t\t\t\tif(!end){\n\t\t\t\t\tindex = i*1;\n\t\t\t\t\trawIndex = scheme[i];\n\t\t\t\t\tconst rchar = raw[rawIndex]||\"\";\n\t\t\t\t\tconst next = raw[rawIndex+1];\n\n\t\t\t\t\tpattern = (rchar?pattern.substr(0, index):\"\") + rchar +(rchar && next?pattern.substr(index + 1):\"\");\n\t\t\t\t\tif(!next) end = true;\n\t\t\t\t}\n\t\t\t\trawLength++;\n\t\t\t}\n\t\t}\n\n\t\t//finalize value with subsequent mask chars \n\t\tconst icode = this._input_code;\n\t\tif((icode && icode !== 8) || (!icode && rawLength-1 === rawIndex && pattern.length < mask.length)){\n\t\t\tif(raw){\n\t\t\t\tconst nind = index+1;\n\t\t\t\tif(mask.charAt(nind)!==\"#\" && pattern.length < mask.length){\n\t\t\t\t\tlet lind = mask.indexOf(\"#\", nind);\n\t\t\t\t\tif(lind<0) lind = mask.length;\n\t\t\t\t\tpattern += mask.substr(nind, lind-nind);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(icode !==46){\n\t\t\t\tpattern += mask.substr(0, mask.indexOf(\"#\"));\n\t\t\t}\n\t\t}\n\t\tthis._input_code = null;\n\t\treturn pattern;\n\t}\n};\n\nexport default TextPattern;\n","import {protoUI} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport {uid} from \"../webix/helpers\";\nimport template from \"../webix/template\";\n\nimport text from \"./text\";\n\n\nconst api = {\n\tname:\"checkbox\",\n\tdefaults:{\n\t\tcheckValue:1,\n\t\tuncheckValue:0,\n\t\ttemplate:function(config, common) {\n\t\t\tvar id = \"x\"+uid();\n\t\t\tvar rightlabel = \"\";\n\t\t\tif (config.labelRight){\n\t\t\t\trightlabel = \"<label class='webix_label_right'>\"+config.labelRight+\"</label>\";\n\t\t\t\t//user clearly attempts to hide the label, help him\n\t\t\t\tif (config.labelWidth)\n\t\t\t\t\tconfig.label = config.label || \"&nbsp;\";\n\t\t\t}\n\t\t\tvar checked = (config.checkValue == config.value);\n\t\t\tvar margin = Math.floor((common._settings.aheight-16)/2);\n\t\t\tvar ch = common._baseInputHTML(\"input\")+\"style='margin-top:\"+margin+\"px;\"+(config.customCheckbox?\"display:none\":\"\")+\"' id='\"+id+\"' type='checkbox' \"+(checked?\"checked='1'\":\"\")+(config.labelRight?\" aria-label='\"+template.escape(config.labelRight)+\"'\":\"\")+\"/>\";\n\t\t\tvar className = \"webix_inp_checkbox_border webix_el_group webix_checkbox_\"+(checked?\"1\":\"0\");\n\t\t\tvar customCheckbox = config.customCheckbox || \"\";\n\t\t\tif(customCheckbox){\n\t\t\t\tcustomCheckbox = customCheckbox.replace(/(aria-checked=')\\w*(?=')/, \"$1\"+(config.value == config.checkValue?\"true\":\"false\"));\n\t\t\t\tcustomCheckbox = customCheckbox.replace(/(aria-label=')\\w*(?=')/, \"$1\"+template.escape(config.labelRight || config.label));\n\t\t\t\tcustomCheckbox = customCheckbox.replace(/(aria-invalid=')\\w*(?=')/, \"$1\"+(config.invalid?\"true\":\"false\"));\n\t\t\t}\n\t\t\tvar html = \"<div style='line-height:\"+common._settings.cheight+\"px' class='\"+className+\"'>\"+ch+customCheckbox+rightlabel+\"</div>\";\n\t\t\treturn common.$renderInput(config, html, id);\n\t\t}\n\t},\n\tcustomCheckbox_setter: function(value){\n\t\tif( value === true && $active.customCheckbox){\n\t\t\tvalue = \"<a role='presentation' onclick='javascript:void(0)'><button role='checkbox' aria-checked='false' aria-label='' type='button' aria-invalid='' class='webix_custom_checkbox'></button></a>\";\n\t\t}\n\t\treturn value;\n\t},\n\tblur: function(){\n\t\tvar input = this.getInputNode();\n\t\tif(input) input.blur();\n\t},\n\t$prepareValue: function(value){ return value; },\n\t_init_onchange: function(){},\n\t$setValue:function(value){\n\t\tvar isChecked = (value == this._settings.checkValue);\n\t\tvar input = this.$view.getElementsByTagName(\"input\")[0];\n\t\tvar parentNode = input?input.parentNode:null;\n\n\t\tif(parentNode && this._settings.customCheckbox){\n\t\t\tvar button = parentNode.getElementsByTagName(\"BUTTON\");\n\t\t\tif(button[0]) button[0].setAttribute(\"aria-checked\", isChecked?\"true\":\"false\");\n\t\t}\n\t\tif(parentNode){\n\t\t\tparentNode.className = parentNode.className.replace(/(webix_checkbox_)\\d/,\"$1\"+(isChecked?1:0));\n\t\t}\n\t\tinput.checked = isChecked;\n\t},\n\ttoggle:function(config){\n\t\tconst c = this._settings;\n\t\tconst value = (this.getValue() != c.checkValue) ? c.checkValue : c.uncheckValue;\n\t\tthis.setValue(value, config);\n\t},\n\tgetValue:function(){\n\t\tconst c = this._settings;\n\t\treturn (c.value == c.checkValue) ? c.checkValue : c.uncheckValue;\n\t},\n\tgetInputNode: function() {\n\t\treturn this.$view.getElementsByTagName(this._settings.customCheckbox?\"button\":\"input\")[0];\n\t},\n\t$skin:function(){\n\t\ttext.api.$skin.call(this);\n\n\t\tthis.defaults.customCheckbox = !!$active.customCheckbox;\n\t}\n};\n\nconst view = protoUI(api, text.view);\nexport default {api, view};","import {protoUI} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport {uid} from \"../webix/helpers\";\n\nimport template from \"../webix/template\";\nimport HTMLOptions from \"../core/htmloptions\";\n\nimport button from \"../views/button\";\nimport text from \"../views/text\";\n\nconst api = {\n\tname:\"radio\",\n\tdefaults:{\n\t\ttemplate: function(config,common) {\n\t\t\tcommon._check_options(config.options);\n\n\t\t\tconst options = common._filterOptions(config.options);\n\t\t\tconst active = common._getFirstActive();\n\t\t\tlet id, eachid, isChecked, isDisabled, label, tooltip, customRadio, optlabel, rd, input, focusable;\n\t\t\tlet html = [];\n\n\t\t\tfor (let i=0; i < options.length; i++) {\n\t\t\t\teachid = \"x\"+uid();\n\t\t\t\tid = id || eachid;\n\n\t\t\t\tif  (i && (options[i].newline || config.vertical))\n\t\t\t\t\thtml.push(\"<div class='webix_line_break'></div>\");\n\n\t\t\t\tisChecked = (options[i].id == config.value);\n\t\t\t\tfocusable = isChecked || (!config.value && options[i].id === active);\n\t\t\t\tisDisabled = !!options[i].disabled;\n\t\t\t\tlabel = options[i].value || \"\";\n\t\t\t\ttooltip = config.tooltip ? \" webix_t_id='\"+options[i].id+\"'\" : \"\";\n\t\t\t\t\n\t\t\t\tcustomRadio = config.customRadio|| \"\";\n\t\t\t\tif (customRadio){\n\t\t\t\t\toptlabel = (i === 0 ? config.label+\" \" : \"\")+label;\n\t\t\t\t\tcustomRadio = customRadio.replace(/(aria-label=')\\w*(?=')/, \"$1\"+template.escape(optlabel));\n\t\t\t\t\tcustomRadio = customRadio.replace(/(aria-checked=')\\w*(?=')/, \"$1\"+(isChecked?\"true\":\"false\"));\n\t\t\t\t\tcustomRadio = customRadio.replace(/(tabindex=')\\w*(?=')/, \"$1\"+(!isDisabled && focusable?\"0\":\"-1\"));\n\t\t\t\t\tcustomRadio = customRadio.replace(/(aria-invalid=')\\w*(?=')/, \"$1\"+(config.invalid?\"true\":\"false\"));\n\t\t\t\t\tcustomRadio = customRadio.replace(/(button_id=')\\w*(?=')/, \"$1\"+options[i].id);\n\t\t\t\t\tif (isDisabled)\n\t\t\t\t\t\tcustomRadio = customRadio.replace(\"role='radio'\", \"role='radio' webix_disabled='true'\");\n\t\t\t\t}\n\t\t\t\trd = common._baseInputHTML(\"input\")+\" name='\"+(config.name || config.id)+\"' type='radio' \"+(isChecked?\"checked='1'\":\"\")+\"tabindex=\"+(!isDisabled && focusable?\"0\":\"-1\")+\n\t\t\t\t\t\" value='\"+options[i].id+\"' id='\"+eachid+\"'\"+(isDisabled?\" disabled='true'\":\"\")+\" style='\"+(customRadio?\"display:none\":\"\")+\"' />\";\n\t\t\t\tinput = \"<div \"+/*@attr*/\"radio_id\"+\"='\"+options[i].id+\"' class='webix_inp_radio_border webix_radio_\"+(isChecked?\"1\":\"0\")+\"' role='presentation'>\"+rd+customRadio+\"</div>\";\n\n\t\t\t\tif (label)\n\t\t\t\t\tlabel = \"<label for='\"+eachid+\"' class='webix_label_right'>\" + label + \"</label>\";\n\n\t\t\t\thtml.push(`<div style=\"height:${config.optionHeight}px;\" class=\"webix_radio_option${(isDisabled?\" webix_disabled\":\"\")}\" role=\"presentation\"${tooltip}>${input+label}</div>`);\n\t\t\t}\n\t\t\thtml = \"<div class='webix_el_group' role='radiogroup' style='margin-left:\"+(config.label?config.labelWidth:0)+\"px;'>\"+html.join(\"\")+\"</div>\";\n\n\t\t\treturn common.$renderInput(config, html, id);\n\t\t}\n\t},\n\trefresh:function(){\n\t\tthis.render();\n\t\tif (this._last_size && this.$getSize(0,0)[2] != this._last_size[1])\n\t\t\tthis.resize();\n\t},\n\t$getSize:function(dx, dy){\n\t\tvar size = button.api.$getSize.call(this, dx, dy);\n\t\tvar options = this._filterOptions(this._settings.options);\n\t\tif (options){\n\t\t\tvar count = this._settings.vertical?0:1;\n\t\t\tfor (var i=0; i < options.length; i++)\n\t\t\t\tif (this._settings.vertical || options[i].newline)\n\t\t\t\t\tcount++;\n\t\t\tsize[3] = size[2] = Math.max(size[2], (this._settings.optionHeight||25) * count+this._settings.inputPadding*2+ (this._settings.labelPosition == \"top\"?this._labelTopHeight:0));\n\t\t}\n\t\tvar heightInc = this.config.bottomPadding;\n\t\tif(heightInc){\n\t\t\tsize[2] += heightInc;\n\t\t\tsize[3] += heightInc;\n\t\t}\n\t\treturn size;\n\t},\n\t_getInputNode: function(){\n\t\treturn this._dataobj.getElementsByTagName(this._settings.customRadio ? \"button\" : \"input\");\n\t},\n\t$setValue:function(value){\n\t\tconst inp = this._dataobj.getElementsByTagName(\"input\");\n\t\tconst active = this._getFirstActive();\n\t\tlet id, option, focusable, parentNode, button;\n\n\t\tfor (let i=0; i < inp.length; i++){\n\t\t\tid = inp[i].parentNode.getAttribute(/*@attr*/\"radio_id\");\n\t\t\toption = this.getOption(id);\n\n\t\t\tinp[i].checked = (id == value);\n\t\t\tfocusable = option && !option.disabled && (inp[i].checked || (!value && option.id == active));\n\t\t\tinp[i].setAttribute(\"tabindex\", focusable?\"0\":\"-1\");\n\n\t\t\tparentNode = inp[i]?inp[i].parentNode:null;\n\t\t\tif (parentNode){\n\t\t\t\tparentNode.className = parentNode.className.replace(/(webix_radio_)\\d/,\"$1\"+(inp[i].checked?1:0));\n\t\t\t\tif (this._settings.customRadio){\n\t\t\t\t\tbutton = parentNode.getElementsByTagName(\"BUTTON\");\n\t\t\t\t\tif (button[0]){\n\t\t\t\t\t\tbutton[0].setAttribute(\"aria-checked\", inp[i].checked?\"true\":\"false\");\n\t\t\t\t\t\tbutton[0].setAttribute(\"tabindex\", focusable?\"0\":\"-1\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetValue:function(){\n\t\treturn this._settings.value;\n\t},\n\tfocus: function(){ return this._focus(); },\n\tblur: function(){ this._blur(); },\n\tcustomRadio_setter: function(value){\n\t\tif(value === true && $active.customRadio)\n\t\t\tvalue = \"<a role='presentation' onclick='javascript:void(0)'><button type='button' class='webix_custom_radio' \"+/*@attr*/\"button_id='' role='radio' aria-checked='false' aria-label='' aria-invalid='' tabindex=''></button></a>\";\n\t\treturn value;\n\t},\n\t$skin:function(){\n\t\ttext.api.$skin.call(this);\n\n\t\tthis.defaults.customRadio = !!$active.customRadio;\n\t\tif ($active.optionHeight)\n\t\t\tthis.defaults.optionHeight = $active.optionHeight;\n\t}\n};\n\nconst view = protoUI(api, text.view, HTMLOptions);\nexport default {api, view};","import {protoUI} from \"../ui/core\";\nimport {isUndefined} from \"../webix/helpers\";\n\nimport datepicker from \"./datepicker\";\n\n\nconst api = {\n\tname:\"colorpicker\",\n\t$init:function(){\n\t\tthis.$ready.push(this._init_popup);\n\t},\n\tdefaults:{\n\t\ticon:true\n\t},\n\t_init_popup:function(){\n\t\tconst obj = this._settings;\n\t\tif (obj.suggest)\n\t\t\tobj.popup = obj.suggest;\n\t\telse if (!obj.popup)\n\t\t\tobj.popup = obj.suggest = this.suggest_setter({\n\t\t\t\ttype:\"colorboard\"\n\t\t\t});\n\t\tthis._init_once = function(){};\n\t},\n\tclear_setter:function(value){\n\t\treturn !!value;\n\t},\n\tgetValue:function(){\n\t\tif (this._rendered_input && this._settings.editable)\n\t\t\treturn this.getInputNode().value;\n\t\telse\n\t\t\treturn this._settings.value;\n\t},\n\t$prepareValue:function(value){\n\t\tvalue = value ? value.toString(16) : \"\";\n\t\tif (value && value.charAt(0) != \"#\" && /^[0-9a-fA-F]+$/.test(value))\n\t\t\tvalue = \"#\" + value;\n\t\treturn value;\n\t},\n\t_getColorNode: function(){\n\t\treturn this.$view.getElementsByTagName(\"DIV\")[this._settings.editable?1:2];\n\t},\n\t_get_visible_text:function(value){\n\t\treturn value;\n\t},\n\t$compareValue:function(oldvalue, value){\n\t\treturn oldvalue == value;\n\t},\n\t$setValue:function(value){\n\t\tthis._getColorNode().style.backgroundColor = value;\n\t\tthis._settings.text = value;\n\t\tthis._toggleClearIcon(value);\n\n\t\tconst node = this.getInputNode();\n\t\tif(isUndefined(node.value))\n\t\t\tnode.innerHTML = value;\n\t\telse\n\t\t\tnode.value = value;\n\t},\n\t$renderIcon:function(c){\n\t\tlet right = this._inputSpacing/2 + 5;\n\t\tlet html = \"<div class='webix_input_icon' style='top:\"+(c.inputPadding+4)+\"px;right:\"+right+\"px;background-color:\"+c.value+\";'></div>\";\n\n\t\tif (!c.readonly && c.clear){\n\t\t\tconst height = c.aheight - 2*c.inputPadding;\n\t\t\tconst padding = (height - 18)/2 -1;\n\t\t\tright += 24;\n\t\t\thtml += \"<span style='right:\"+right+\"px;height:\"+(height-padding)+\"px;padding-top:\"+padding+\"px;' class='webix_input_icon webix_clear_icon webix_icon_transparent wxi-close'></span>\";\n\t\t}\n\t\treturn html;\n\t}\n};\n\nconst view = protoUI(api, datepicker.view);\nexport default {api, view};","import {protoUI} from \"../ui/core\";\nimport {uid} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport template from \"../webix/template\";\n\nimport text from \"./text\";\nimport button from \"./button\";\n\nimport i18n from \"../webix/i18n\";\n\n\nconst api = {\n\tname:\"counter\",\n\tdefaults:{\n\t\ttemplate:function(config, common){\n\t\t\tconst value = config.value;\n\n\t\t\tconst id = \"x\"+uid();\n\t\t\tlet html = \"<div role='spinbutton' aria-label='\"+template.escape(config.label)+\"' aria-valuemin='\"+config.min+\"' aria-valuemax='\"+config.max+\"' aria-valuenow='\"+config.value+\"' class='webix_el_group' style='width:\"+common._get_input_width(config)+\"px'>\";\n\t\t\thtml +=  \"<button type='button' class='webix_inp_counter_prev' tabindex='-1' aria-label='\"+i18n.aria.decreaseValue+\"'>-</button>\";\n\t\t\thtml += common._baseInputHTML(\"input\")+\" id='\"+id+\"' type='text' class='webix_inp_counter_value' aria-live='assertive'\"+\" value='\"+value+\"'></input>\";\n\t\t\thtml += \"<button type='button' class='webix_inp_counter_next' tabindex='-1' aria-label='\"+i18n.aria.increaseValue+\"'>+</button></div>\";\n\t\t\treturn common.$renderInput(config, html, id);\n\t\t},\n\t\tmin:0,\n\t\tmax:Infinity,\n\t\tvalue:0,\n\t\tstep:1\n\t},\n\t$init:function(){\n\t\t_event(this.$view, \"keydown\", this._keyshift, {bind:this});\n\t},\n\t_keyshift:function(e){\n\t\tif(this._settings.readonly)\n\t\t\treturn;\n\n\t\tconst code = e.which || e.keyCode, c = this._settings;\n\t\tlet value = this.getValue();\n\n\t\tif(code>32 && code <41){\n\t\t\tif(code === 36) value = c.min;\n\t\t\telse if(code === 35) value = c.max === Infinity? 1000000 :c.max;\n\t\t\telse if(code === 33) this.next(c.step, \"user\");\n\t\t\telse if(code === 34) this.prev(c.step, \"user\");\n\t\t\telse value = value+(code === 37 || code ===40?-1:1);\n\n\t\t\tif(code>34 && value>=c.min && value<=c.max)\n\t\t\t\tthis.setValue(value, \"user\");\n\t\t}\n\t},\n\t$setValue:function(value){\n\t\tthis.getInputNode().value = value;\n\t},\n\t$prepareValue:function(value){\n\t\tvalue = parseFloat(value);\n\n\t\tconst min = this._settings.min;\n\t\tconst max = this._settings.max;\n\n\t\tif(isNaN(value))\n\t\t\tvalue = isFinite(min) ? min : 0;\n\n\t\treturn Math.min(Math.max(value, min), max);\n\t},\n\tgetInputNode:function(){\n\t\treturn this._dataobj.getElementsByTagName(\"input\")[0];\n\t},\n\tgetValue:function(){\n\t\treturn  button.api.getValue.apply(this,arguments)*1;\n\t},\n\tnext:function(step,config){\n\t\tstep = 1*( step || this._settings.step );\n\t\tthis.shift(step,config);\n\t},\n\tprev:function(step,config){\n\t\tstep = (-1)*( step || this._settings.step );\n\t\tthis.shift(step,config);\n\t},\n\tshift:function(step,config){\n\t\t//round values to fix math precision issue in JS\n\t\tconst new_value = Math.round((this.getValue() + step)*100000)/100000;\n\t\tthis.setValue(new_value,config);\n\t}\n};\n\nconst view = protoUI(api, text.view);\nexport default {api, view};","import {protoUI} from \"../ui/core\";\nimport {delay, uid} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport text from \"./text\";\nimport {create, remove, addCss, removeCss, preventEvent} from \"../webix/html\";\nimport {$active} from \"../webix/skin\";\nimport env from \"../webix/env\";\n\nconst autoheight = {\n\t$init: function(){\n\t\t_event(this.$view, \"keydown\", (e) => this._checkPageUp(e));\n\t\tthis.$ready.push(function(){\n\t\t\tif(this._settings.autoheight){\n\t\t\t\taddCss(this.$view, \"webix_noscroll\");\n\t\t\t\tif(!this._settings.maxHeight)\n\t\t\t\t\tthis._settings.maxHeight = 100;\n\t\t\t\t_event(this.$view,\"input\", ()=>{\n\t\t\t\t\tthis._sizeToContent(true);\n\t\t\t\t},{capture: true});\n\t\t\t\tthis.attachEvent(\"onAfterRender\", ()=>{\n\t\t\t\t\tthis._sizeToContent();\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t},\n\t_checkPageUp: function(e){\n\t\t//chrome bug: textarea with typed text is not correctly resized when pushing PageUp/PageDown key\n\t\tconst pageUp = e.key == \"PageUp\";\n\t\tif(env.isChromium && (pageUp || e.key == \"PageDown\")){\n\t\t\tconst input = this.getInputNode();\n\t\t\tconst cursorPos = pageUp ? 0 : input.value.length;\n\t\t\tconst scrollPos = pageUp ? 0 : input.scrollHeight;\n\n\t\t\tpreventEvent(e);\n\t\t\tinput.setSelectionRange(cursorPos, cursorPos);\n\t\t\tinput.scrollTo(0, scrollPos);\n\t\t}\n\t},\n\t_sizeToContent: function(focus){\n\t\tif(this._skipSizing)\n\t\t\treturn (this._skipSizing = false);\n\t\tlet txt = this.getInputNode();\n\t\tlet height = this._getTextHeight(txt.value, txt.offsetWidth);\n\t\tconst padding = 2*$active.inputPadding + 2*$active.borderWidth;\n\t\theight = Math.max(height+padding, this._settings.minHeight);\n\t\tif(height > this._settings.maxHeight){\n\t\t\tremoveCss(this.$view, \"webix_noscroll\");\n\t\t\theight = this._settings.maxHeight;\n\t\t}\n\t\telse\n\t\t\taddCss(this.$view, \"webix_noscroll\",true);\n\t\tconst topView = this.getTopParentView();\n\t\tclearTimeout(topView._template_resize_timer);\n\t\ttopView._template_resize_timer = delay(()=>{\n\t\t\tif (this.config.height != height){\n\t\t\t\tthis.config.height = height;\n\t\t\t\tlet caretPos = txt.selectionEnd;\n\t\t\t\tthis._skipSizing = true;\n\t\t\t\tconst value = text.api.getValue.call(this);\n\t\t\t\tthis.resize();\n\t\t\t\tthis.callEvent(\"onInputResize\",[]);\n\t\t\t\tif(focus){\n\t\t\t\t\ttxt = this.getInputNode();\n\t\t\t\t\t// needed to restore \"\\n\" value after resize\n\t\t\t\t\ttext.api.$setValue.call(this,value);\n\t\t\t\t\ttxt.setSelectionRange(caretPos,caretPos);\n\t\t\t\t\ttxt.focus();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\t_getTextHeight: function(value, width){\n\t\tconst d = create(\"textarea\",{\"class\":\"webix_textarea_measure\", rows: \"1\"},\"\");\n\t\td.style.cssText = \"height:auto;visibility:hidden; position:absolute; top:0px; left:0px; width:\"+width+\"px;\";\n\t\tdocument.body.appendChild(d);\n\t\td.value = value;\n\t\tconst height = d.scrollHeight;\n\t\tremove(d);\n\t\treturn  height;\n\t},\n\t$setValue: function(value){\n\t\ttext.api.$setValue.call(this,value);\n\t\tif(this._settings.autoheight)\n\t\t\tthis._sizeToContent();\n\t}\n};\n\nconst api = {\n\tname:\"textarea\",\n\tdefaults:{\n\t\ttemplate:function(obj, common){\n\t\t\tvar name = obj.name || obj.id;\n\t\t\tvar id = \"x\"+uid();\n\n\t\t\tvar html = common._baseInputHTML(\"textarea\")+\"style='width:\"+common._get_input_width(obj)+\"px;'\";\n\t\t\thtml +=\" id='\"+id+\"' name='\"+name+\"' class='webix_inp_textarea'>\"+common._pattern(obj.value)+\"</textarea>\";\n\n\t\t\treturn common.$renderInput(obj, html, id);\n\t\t},\n\t\tminHeight:60,\n\t},\n\n\t$skin:function(){\n\t\ttext.api.$skin.call(this);\n\t\tthis.defaults.height = 0;\n\t},\n\t_skipSubmit: true,\n\t_getLabelHeight:function(top){\n\t\treturn top ? this._labelTopHeight-this._settings.inputPadding : \"\";\n\t},\n\t$renderIcon:function(){\n\t\treturn \"\";\n\t},\n\t//get input element\n\tgetInputNode: function() {\n\t\treturn this._dataobj.getElementsByTagName(\"textarea\")[0];\n\t}\n};\n\nconst view = protoUI(api, autoheight, text.view);\nexport default {api, view, autoheight};","import text from \"../views/text\";\nimport {protoUI, $$} from \"../ui/core\";\nimport {extend, _to_array} from \"../webix/helpers\";\n\nimport i18n from \"../webix/i18n\";\n\nconst api = {\n\tname:\"multitext\",\n\t$cssName:\"text\",\n\tdefaults:{\n\t\ticon:\"wxi-plus-circle\",\n\t\ticonWidth:25,\n\t\tseparator:\", \"\n\t},\n\tgetValueHere:function(){\n\t\treturn text.api.getValue.call(this);\n\t},\n\tsetValueHere:function(value){\n\t\treturn text.api.$setValue.call(this, value);\n\t},\n\tgetValue:function(){\n\t\tif (this.config.mode == \"extra\") return this.getValueHere();\n\n\t\tif (this._full_value) \n\t\t\treturn this._full_value;\n\n\t\tvar values = [ this.getValueHere(this) ];\n\t\tfor (var i=0; i<this._subs.length; i++){\n\t\t\tvar seg = $$(this._subs[i]).getValueHere();\n\t\t\tif (seg) values.push(seg);\n\t\t}\n\t\treturn values.join(this.config.separator);\n\t},\n\t$setValue:function(value){\n\t\tvalue = value || \"\";\n\n\t\tif (this.config.mode == \"extra\") return this.setValueHere(value);\n\n\t\tthis._full_value = value;\n\t\tvar parts = value.split(this.config.separator);\n\t\tif (parts.length == this._subs.length+1){\n\t\t\tthis.setValueHere(parts[0]);\n\t\t\tfor (let i = 0; i < this._subs.length; i++)\n\t\t\t\t$$(this._subs[i]).setValueHere(parts[i+1]);\n\n\t\t\tthis._full_value = \"\";\n\t\t\treturn;\n\t\t}\n\n\t\tthis.removeSection();\n\t\tthis.setValueHere.call(this, parts[0]);\n\t\tfor (let i = 1; i<parts.length; i++){\n\t\t\tthis.addSection(parts[i]);\n\t\t}\n\t\tthis._full_value = \"\";\n\t},\n\t$renderIcon:function(c){\n\t\tif (c.icon){\n\t\t\tconst height = c.aheight - 2*c.inputPadding;\n\t\t\tconst padding = (height - 18)/2 -1;\n\t\t\tconst aria = \"role='button' tabindex='0' aria-label='\"+(i18n.aria[\"multitext\"+(c.mode || \"\")+\"Section\"])+\"'\";\n\t\t\treturn \"<span style='right:0;height:\"+(height-padding)+\"px;padding-top:\"+padding+\"px;' class='webix_input_icon webix_multitext_icon \"+c.icon+\"' \"+aria+\"></span>\";\n\t\t}\n\t\treturn \"\";\n\t},\n\t_subOnChange:function(v, o, config){\n\t\tconst parent = this.config.master ? $$(this.config.master) : this;\n\t\tconst value = parent.getValue();\n\t\tconst oldvalue = parent._settings.value;\n\n\t\tif (value != oldvalue){\n\t\t\tparent._settings.value = value;\n\t\t\tparent.callEvent(\"onChange\", [value, oldvalue, config]);\n\t\t}\n\t},\n\taddSection:function(text){\n\t\tvar config = this.config,\n\t\t\tnewConfig = {\n\t\t\t\tlabelWidth: config.labelWidth,\n\t\t\t\tinputWidth: config.inputWidth,\n\t\t\t\twidth: config.width,\n\t\t\t\tlabel: config.label ? \"&nbsp;\" : \"\",\n\t\t\t\tview: this.name,\n\t\t\t\tmode: \"extra\",\n\t\t\t\tvalue: text || \"\",\n\t\t\t\ticon: \"wxi-minus-circle\",\n\t\t\t\ttooltip: config.tooltip,\n\t\t\t\tsuggest: config.suggest || null,\n\t\t\t\tmaster: config.id\n\t\t\t};\n\n\t\textend(newConfig, config.subConfig||{},true);\n\n\t\tvar newone = this.getParentView().addView(newConfig);\n\t\t$$(newone).attachEvent(\"onChange\", this._subOnChange);\n\n\t\tthis._subs.push(newone);\n\t\tthis.callEvent(\"onSectionAdd\", [newone, this._subs.length]);\n\t\treturn newone;\n\t},\n\tremoveSection:function(id){\n\t\tvar parent = this.config.master ? $$(this.config.master) : this;\n\t\tfor (var i = parent._subs.length - 1; i >= 0; i--){\n\t\t\tvar section = parent._subs[i];\n\t\t\tif (!id || section == id){\n\t\t\t\tparent._subs.removeAt(i);\n\t\t\t\tthis.getParentView().removeView(section);\n\t\t\t\tparent.callEvent(\"onSectionRemove\", [section, i+1]);\n\t\t\t}\n\t\t}\n\t},\n\ton_click:{\n\t\t\"webix_input_icon\":function(){\n\t\t\tif (this.config.mode == \"extra\"){\n\t\t\t\tconst parent = this.getParentView();\n\t\t\t\tthis.removeSection(this.config.id);\n\n\t\t\t\tconst childs = parent.getChildViews();\n\t\t\t\tchilds[childs.length - 1].focus();\n\t\t\t\t\n\t\t\t\tthis._subOnChange(null,null,\"user\");\n\t\t\t} else\n\t\t\t\t$$(this.addSection()).focus();\n\n\t\t\treturn false;\n\t\t}\n\t},\n\t$init:function(){\n\t\tthis._subs = _to_array([]);\n\t\tthis.attachEvent(\"onKeyPress\", this._onKeyPress);\n\t},\n\t$render:function(obj){\n\t\tthis.$setValue(obj.value);\n\t},\n};\n\n\nconst view = protoUI(api,  text.view);\nexport default {api, view};","import text from \"../views/text\";\nimport {preventEvent, addCss, removeCss, pos as getPos, offset} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport env from \"../webix/env\";\nimport {uid, bind, isArray, copy} from \"../webix/helpers\";\nimport {_event, event, eventRemove} from \"../webix/htmlevents\";\nimport template from \"../webix/template\";\n\nconst api = {\n\tname:\"slider\",\n\tdefaults:{\n\t\tmin:0,\n\t\tmax:100,\n\t\tvalue:50,\n\t\tstep:1,\n\t\ttitle:false,\n\t\tmoveTitle:true,\n\t\ttemplate:function(obj, common){\n\t\t\tconst id = common._handle_id = \"x\" +uid();\n\t\t\tlet html = \"\";\n\t\t\tconst title = \"<div class='webix_slider_title\"+(obj.moveTitle?\" webix_slider_move\":\"\")+\"'\"+(!obj.moveTitle && obj.vertical?(\" style='line-height:\"+(obj.aheight-obj.inputPadding*2)+\"px;'\"):\"\")+\">&nbsp;</div>\";\n\t\t\tconst left = \"<div class='webix_slider_left'>&nbsp;</div>\";\n\t\t\tconst right = \"<div class='webix_slider_right'></div>\";\n\t\t\tconst handle = \"<div class='webix_slider_handle' \"+/*@attr*/\"webix_disable_drag\"+\"='true' role='slider' aria-label='\"+obj.label+(obj.title?(\" \"+obj.title(obj)):\"\")+\"' aria-valuemax='\"+obj.max+\"' aria-valuemin='\"+obj.min+\"' aria-valuenow='\"+obj.value+\"' tabindex='0' id='\"+id+\"'>&nbsp;</div>\";\n\n\t\t\tif(obj.vertical) html = \"<div class='webix_slider_box'>\"+right+left+handle+\"</div>\"+title;\n\t\t\telse html = title+\"<div class='webix_slider_box'>\"+left+right+handle+\"</div>\";\n\t\t\treturn common.$renderInput(obj, html, id);\n\t\t}\n\t},\n\ttype_setter:function(type){\n\t\tthis._viewobj.className += \" webix_slider_\"+type;\n\t},\n\ttitle_setter:function(value){\n\t\tif (typeof value == \"string\")\n\t\t\treturn template(value);\n\t\treturn value;\n\t},\n\t_get_slider_handle:function(){\n\t\treturn this.$view.querySelector(\".webix_slider_handle\");\n\t},\n\t_set_inner_size:function(){\n\t\tconst handle = this._get_slider_handle();\n\t\tconst config = this._settings;\n\n\t\tif(handle){ //view is rendered for sure\n\t\t\tconst size = config.vertical?this._content_height:this._get_input_width(config); //width or height\n\t\t\tlet value = config.value%config.step?(Math.round(config.value/config.step)*config.step):config.value;\n\t\t\tconst max = config.max - config.min;\n\n\t\t\tvalue = this._safeValue(value);\n\t\t\tvalue = config.vertical?(max-(value-config.min)):(value-config.min);\n\n\t\t\t//top or left\n\t\t\tlet corner1 = Math.ceil((size - 2 * this._sliderPadding) * value / max);\n\t\t\t//bottom or right\n\t\t\tlet corner2 = size - 2 * this._sliderPadding - corner1;\n\n\t\t\tconst cornerStr = config.vertical?\"top\":\"left\";\n\t\t\tconst sizeStr = config.vertical?\"height\":\"width\";\n\n\t\t\thandle.style[cornerStr] = this._sliderPadding + corner1 - this._sliderHandleWidth / 2 + \"px\";\n\t\t\thandle.parentNode.style[sizeStr] = size+\"px\";\n\n\t\t\t//1px border\n\t\t\tcorner2 = this._safeValue(corner2, 2 * this._sliderBorder, size - this._sliderPadding * 2 - 2 * this._sliderBorder);\n\t\t\tcorner1 = this._safeValue(corner1, 2 * this._sliderBorder, size - this._sliderPadding * 2 - 2 * this._sliderBorder);\n\n\t\t\t//width for left/top and right/bottom bars\n\t\t\tconst part = handle.previousSibling;\n\t\t\tpart.style[sizeStr] = corner2 + \"px\";\n\t\t\tconst last = part.previousSibling;\n\t\t\tlast.style[sizeStr] = corner1 + \"px\";\n\n\t\t\tthis._set_title(handle, corner1, corner2, cornerStr);\n\t\t}\n\t},\n\t_set_title:function(handle, corner1, corner2, cornerStr){\n\t\tconst config = this._settings;\n\t\tif (this._settings.title){\n\t\t\tconst title = handle.parentNode[config.vertical?\"nextSibling\":\"previousSibling\"];\n\t\t\ttitle.innerHTML = this._settings.title(this._settings, this);\n\n\t\t\tif(this._settings.moveTitle){\n\t\t\t\tlet pos = 0;\n\t\t\t\tif(config.vertical) pos = corner1+2 * this._sliderBorder-this._sliderHandleWidth/2;\n\t\t\t\telse{\n\t\t\t\t\tconst half = title.clientWidth/2;\n\t\t\t\t\tconst pos1 = half>corner1 ? (half-corner1-2*this._sliderBorder): 0;//left/top text is to large\n\t\t\t\t\tconst pos2 = half>corner2 ? (half-corner2-2*this._sliderBorder-this._sliderHandleWidth/2): 0;//right/bottom text is too large\n\t\t\t\t\tpos = this._sliderPadding + corner1 - half + pos1 - pos2;\n\t\t\t\t}\n\t\t\t\ttitle.style[cornerStr] = pos+ \"px\";\n\t\t\t}\n\t\t}\n\t},\n\t_set_value_now:function(){\n\t\tthis._get_slider_handle().setAttribute(\"aria-valuenow\", this._settings.value);\n\t},\n\t_safeValue: function(value, min, max){\n\t\tmin = min ? min : this._settings.min;\n\t\tmax = max ? max : this._settings.max;\n\t\t\n\t\treturn Math.min(Math.max(value, min), max);\n\t},\n\trefresh:function(){\n\t\tconst handle = this._get_slider_handle();\n\t\tif (handle){\n\t\t\tthis._set_value_now();\n\t\t\tif (this._settings.title)\n\t\t\t\thandle.setAttribute(\"aria-label\", this._settings.label+\" \"+this._settings.title(this._settings, this));\n\n\t\t\tthis._set_inner_size();\n\t\t}\n\t},\n\t$setValue:function(){\n\t\tthis.refresh();\n\t},\n\t$getValue:function(){\n\t\treturn this._settings.value;\n\t},\n\t$prepareValue:function(value){\n\t\tvalue = parseFloat(value);\n\n\t\tif(isNaN(value))\n\t\t\tvalue = this._settings.min;\n\n\t\treturn this._safeValue(value);\n\t},\n\t$init:function(config){\n\t\t_event(this._viewobj, env.mouse.down, e => this._on_mouse_down_start(e, \"mouse\"));\n\t\tif (env.touch)\n\t\t\t_event(this._viewobj, env.touch.down, e => this._on_mouse_down_start(e, \"touch\"));\n\n\t\t_event( this.$view, \"keydown\", bind(this._handle_move_keyboard, this));\n\t\tif (config.vertical){\n\t\t\tconfig.height = config.height || $active.vSliderHeight;\n\t\t\tthis._viewobj.className += \" webix_slider_vertical\";\n\t\t\tthis._sliderPadding = $active.vSliderPadding;\n\t\t}\n\t},\n\t$skin: function(){\n\t\ttext.api.$skin.call(this);\n\n\t\tthis._sliderHandleWidth = $active.sliderHandleWidth; //8 - width of handle / 2\n\t\tthis._sliderPadding = $active.sliderPadding;//10 - padding of webix_slider_box ( 20 = 10*2 )\n\t\tthis._sliderBorder = $active.sliderBorder;//1px border\n\t},\n\t_handle_move_keyboard:function(e){\n\t\tconst code = e.which || e.keyCode;\n\t\tconst c = this._settings;\n\t\tlet value = c.value;\n\n\t\tif(code>32 && code <41){\n\t\t\tpreventEvent(e);\n\n\t\t\tconst trg = e.target;\n\t\t\tconst match = /webix_slider_handle_(\\d)/.exec(trg.className);\n\t\t\tthis._activeIndex = match?parseInt(match[1],10):-1;\n\t\t\tif(match)\n\t\t\t\tvalue = c.value[this._activeIndex];\n\n\t\t\tvalue = value<c.min ? c.min:(value>c.max ? c.max : value);\n\t\t\t\n\t\t\tif(code === 36) value = c.min;\n\t\t\telse if(code === 35) value = c.max;\n\t\t\telse{\n\t\t\t\tlet inc = (code === 37 || code === 40 || code === 34) ? -1 : 1;\n\t\t\t\tif(code === 33 || code === 34 || c.step > 1)\n\t\t\t\t\tinc = inc * c.step;\n\t\t\t\tvalue = value*1 + inc;\n\t\t\t}\n\n\t\t\tif(match){\n\t\t\t\tconst other = c.value[this._activeIndex?0:1];\n\t\t\t\tvalue = ((this._activeIndex && value <= other) || (!this._activeIndex && value >= other )) ? other : value;\n\t\t\t}\n\n\t\t\tif(value >= c.min && value <= c.max){\n\t\t\t\tif(match){\n\t\t\t\t\tconst temp =[];\n\t\t\t\t\tfor(let i = 0; i < c.value.length; i++)\n\t\t\t\t\t\ttemp[i] = i === this._activeIndex ? value : c.value[i];\n\t\t\t\t\tvalue = temp;\n\t\t\t\t}\n\t\t\t\tthis.setValue(value, \"user\");\n\t\t\t\tthis._activeIndex = -1;\n\t\t\t}\n\t\t}\n\t},\n\t_on_mouse_down_start:function(e, pointer){\n\t\tconst config = this._settings;\n\t\tif (config.disabled || config.readonly) return;\n\n\t\tconst trg = e.target;\n\t\tif (this._mouse_down_process)\n\t\t\tthis._mouse_down_process(e);\n\n\t\tlet value = config.value;\n\t\tif (isArray(value)) value = copy(value);\n\n\t\tthis._start_value = value;\n\t\tif (trg.className.indexOf(\"webix_slider\") !== -1)\n\t\t\tconfig.value = this._get_value_from_event(e);\n\n\t\tconst passive = (pointer === \"touch\") ? { passive:false } : null;\n\t\tthis._handle_drag_events = [\n\t\t\tevent(document.body, env[pointer].move, e => this._handle_move_process(e, pointer), passive),\n\t\t\tevent(document, env[pointer].up, () => this._handle_move_stop()),\n\t\t];\n\t\taddCss(document.body,\"webix_noselect\");\n\t},\n\t_handle_move_stop:function(){\n\t\t//detach event handlers\n\t\teventRemove(this._handle_drag_events[0]);\n\t\teventRemove(this._handle_drag_events[1]);\n\t\tthis._handle_drag_events = null;\n\n\t\tlet value = this._settings.value;\n\t\tif (isArray(value)) value = copy(value);\n\n\t\tthis._settings.value = this._start_value;\n\t\tthis.setValue(value, \"user\");\n\n\t\tthis._get_slider_handle(this._activeIndex).focus();\n\t\tthis._activeIndex = -1;\n\n\t\tremoveCss(document.body, \"webix_noselect\");\n\t},\n\t_handle_move_process:function(e, pointer){\n\t\tthis._settings.value = this._get_value_from_event(e);\n\t\tthis.refresh();\n\t\tthis.callEvent(\"onSliderDrag\", []);\n\n\t\tif (pointer === \"touch\") preventEvent(e);\n\t},\n\t_get_value_from_event:function(e){\n\t\tconst ax = this._settings.vertical ? \"y\" : \"x\";\n\t\tconst pos = getPos(e)[ax];\n\t\treturn this._get_value_from_pos(pos);\n\t},\n\t_get_value_from_pos:function(pos){\n\t\tconst config = this._settings;\n\t\tconst max = config.max - config.min;\n\t\tconst ax = config.vertical ? \"y\" : \"x\";\n\n\t\t//top or left depending on slider type\n\t\tconst corner = offset(this._get_slider_handle().parentNode)[ax] + this._sliderPadding;\n\t\t//height or width depending on slider type\n\t\tconst size = (config.vertical?this._content_height:this._get_input_width(config))-2*this._sliderPadding;\n\n\t\tlet newvalue = (size ? (pos-corner) * max / size : 0);\n\t\tif(config.vertical)\n\t\t\tnewvalue = max-newvalue;\n\t\tnewvalue = Math.round((newvalue + 1*config.min) / config.step) * config.step;\n\t\treturn this._safeValue(newvalue);\n\t},\n\t_init_onchange:function(){} //need not ui.text logic\n};\n\nconst view = protoUI(api, text.view);\nexport default {api, view};\n","import {protoUI, ui, $$} from \"../ui/core\";\nimport UIManager from \"../core/uimanager\";\nimport {$active} from \"../webix/skin\";\nimport {extend} from \"../webix/helpers\";\nimport i18n from \"../webix/i18n\";\nimport template from \"../webix/template\";\n\nimport segmented from \"../views/segmented\";\n\nconst api = {\n\tname:\"tabbar\",\n\t$init:function(){\n\t\tthis.attachEvent(\"onKeyPress\", this._onKeyPress);\n\t},\n\t$skin:function(){\n\t\tvar skin = $active;\n\t\tvar defaults = this.defaults;\n\n\t\tdefaults.topOffset = skin.tabTopOffset||0;\n\t\tdefaults.tabOffset = (typeof skin.tabOffset != \"undefined\"?skin.tabOffset:10);\n\t\tdefaults.bottomOffset = skin.tabBottomOffset||0;\n\t\tdefaults.height = skin.tabbarHeight;\n\n\t\tdefaults.tabMargin = skin.tabMargin;\n\t\tdefaults.inputPadding = skin.inputPadding;\n\t\tdefaults.tabMinWidth = skin.tabMinWidth||100;\n\t\tdefaults.tabMoreWidth = skin.tabMoreWidth||40;\n\t\tdefaults.borderless = !skin.tabBorder;\n\t},\n\t_getTabbarSizes: function(selected){\n\t\tconst config = this._settings;\n\t\tconst inputWidth = this._input_width - config.tabOffset * 2;\n\t\tconst tabs = this._filterOptions(config.options);\n\n\t\tconst width = config.optionWidth || config.tabMinWidth;\n\n\t\t//the selected tab will be rendered anyway\n\t\tlet totalWidth = tabs.find(tab => tab.id == selected).width || width;\n\t\tlet max = 1;\n\n\t\tfor(let i = 0; i < tabs.length; i++){\n\t\t\tif(tabs[i].id == selected)\n\t\t\t\tcontinue;\n\t\t\tif((totalWidth += (tabs[i].width || width)) > inputWidth)\n\t\t\t\treturn { max };\n\t\t\tmax++;\n\t\t}\n\n\t\treturn { width: inputWidth / tabs.length };\n\t},\n\t_init_popup: function () {\n\t\tconst obj = this._settings;\n\n\t\t// if tabbar popup is set as plain object with config\n\t\tif (!obj.tabbarPopup || !$$(obj.tabbarPopup)) {\n\t\t\tconst popupConfig = extend(\n\t\t\t\t{\n\t\t\t\t\tview: \"popup\",\n\t\t\t\t\tautofocus: false,\n\t\t\t\t\twidth: 200,\n\t\t\t\t},\n\t\t\t\tobj.tabbarPopup || {}\n\t\t\t);\n\n\t\t\tconst body = extend(\n\t\t\t\t{\n\t\t\t\t\tview: \"list\",\n\t\t\t\t\tborderless: true,\n\t\t\t\t\tselect: true,\n\t\t\t\t\tautoheight: true,\n\t\t\t\t\tyCount: 7,\n\t\t\t\t\ttemplate: template(\"#value#\"),\n\t\t\t\t},\n\t\t\t\tobj.tabbarPopup ? obj.tabbarPopup.body || {} : {},\n\t\t\t\ttrue\n\t\t\t);\n\t\t\tbody.css = `webix_tab_list ${body.css || \"\"}`;\n\t\t\tpopupConfig.body = body;\n\n\t\t\tconst view = ui(popupConfig);\n\t\t\tconst list = view.getBody();\n\n\t\t\tview.attachEvent(\"onShow\", () => {\n\t\t\t\tlist.unselect();\n\t\t\t\tUIManager.setFocus(list);\n\n\t\t\t\tconst node = list.getItemNode(list.getFirstId());\n\t\t\t\tif (node) node.focus();\n\t\t\t});\n\t\t\tlist.attachEvent(\"onItemClick\", id => this._popupInnerClick(id));\n\t\t\tlist.attachEvent(\"onEnter\", () => this._popupInnerClick());\n\n\t\t\tobj.tabbarPopup = view._settings.id;\n\t\t\tthis._destroy_with_me.push(view);\n\t\t}\n\n\t\tthis._init_popup = function () {};\n\t},\n\t_popupInnerClick(id){\n\t\tconst popup = $$(this._settings.tabbarPopup);\n\t\tid = id || popup.getBody().getSelectedId();\n\n\t\tif (id && this.callEvent(\"onBeforeTabClick\", [id])){\n\t\t\tthis.setValue(id, \"user\");\n\t\t\tpopup.hide();\n\t\t\tthis.callEvent(\"onAfterTabClick\", [id]);\n\t\t\tthis.refresh();\n\t\t\tthis.focus();\n\t\t}\n\t\treturn false;\n\t},\n\tgetPopup: function(){\n\t\tthis._init_popup();\n\t\treturn $$(this._settings.tabbarPopup);\n\t},\n\tmoreTemplate_setter: template,\n\tdefaults:{\n\t\tmoreTemplate: \"<span class=\\\"webix_icon wxi-dots\\\"></span>\",\n\t\ttemplate:function(obj,common) {\n\t\t\tcommon._check_options(obj.options);\n\n\t\t\tlet tabs = common._filterOptions(obj.options);\n\t\t\tlet contentWidth, html, leafWidth, resultHTML, style, sum, verticalOffset, width;\n\n\t\t\tif (!tabs.length){\n\t\t\t\thtml = \"<div class='webix_tab_filler' style='width:\"+common._input_width+\"px; border-right:0px;'></div>\";\n\t\t\t} else {\n\t\t\t\tif (!obj.value)\n\t\t\t\t\tobj.value = common._getFirstActive(true);\n\n\t\t\t\thtml = \"\";\n\t\t\t\tif (obj.tabOffset)\n\t\t\t\t\thtml += \"<div class='webix_tab_filler' style='width:\"+obj.tabOffset+\"px;'>&nbsp;</div>\";\n\t\t\t\tcontentWidth = common._input_width - obj.tabOffset*2-(!obj.type?(obj.tabMargin)*(tabs.length-1):0);\n\t\t\t\tverticalOffset = obj.topOffset+obj.bottomOffset;\n\n\t\t\t\tvar sizes = common._getTabbarSizes(obj.value);\n\n\t\t\t\tif (sizes.max && sizes.max < tabs.length){\n\t\t\t\t\t//we need popup\n\t\t\t\t\tconst popup = common.getPopup();\n\t\t\t\t\tpopup.hide();\n\n\t\t\t\t\tconst body = (popup.getBody()||null);\n\t\t\t\t\tif(body){\n\t\t\t\t\t\tif (sizes.max){\n\t\t\t\t\t\t\tfor (let i=0, found=false; i < tabs.length && !found; i++)\n\t\t\t\t\t\t\t\tif(tabs[i].id== obj.value){\n\t\t\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\t\t\tif((i+1) > sizes.max){\n\t\t\t\t\t\t\t\t\t\tlet selectedTab =  tabs.splice(i, 1);\n\t\t\t\t\t\t\t\t\t\tlet displayTabs = tabs.splice(0, sizes.max-1).concat(selectedTab);\n\t\t\t\t\t\t\t\t\t\ttabs = displayTabs.concat(tabs);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbody.clearAll();\n\t\t\t\t\t\t\tbody.parse(tabs.slice(sizes.max));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbody.clearAll();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (common._settings.tabbarPopup) {\n\t\t\t\t\tconst popup = $$(common._settings.tabbarPopup);\n\t\t\t\t\tif (popup) popup.hide();\n\t\t\t\t}\n\n\t\t\t\tsum = obj.tabOffset;\n\t\t\t\tfor (let i=0, lastTab=false; (i<tabs.length) && !lastTab; i++) {\n\n\t\t\t\t\t// tab width\n\t\t\t\t\tif(sizes && sizes.max){\n\t\t\t\t\t\tif(sizes.max == (i + 1)){\n\t\t\t\t\t\t\tlastTab = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontentWidth = common._input_width - obj.tabOffset*2-(!obj.type&&(sizes.max>1)?(obj.tabMargin)*(sizes.max-1):0);\n\t\t\t\t\t\twidth = (contentWidth - obj.tabMoreWidth)/sizes.max ;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\twidth = sizes.width;\n\n\t\t\t\t\twidth = (tabs[i].width||obj.optionWidth||width);\n\n\t\t\t\t\tsum += width + (i&&!obj.type?obj.tabMargin:0);\n\n\t\t\t\t\tif(obj.tabMargin>0&&i&&!obj.type)\n\t\t\t\t\t\thtml += \"<div class='webix_tab_filler' style='width:\"+obj.tabMargin+\"px;'></div>\";\n\n\t\t\t\t\t// tab innerHTML\n\t\t\t\t\thtml += common._getTabHTML(tabs[i], width);\n\n\n\t\t\t\t\tif(lastTab){\n\t\t\t\t\t\thtml += \"<div role=\\\"button\\\" tabindex=\\\"0\\\" aria-label=\\\"\"+i18n.aria.showTabs+\"\\\" class=\\\"webix_tab_more_icon\\\" style=\\\"width:\"+obj.tabMoreWidth+\"px;\\\">\"+obj.moreTemplate(obj,common)+\"</div>\";\n\t\t\t\t\t\tsum += obj.tabMoreWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tleafWidth = common._content_width - sum;\n\n\t\t\t\tif (leafWidth>0 && !obj.type)\n\t\t\t\t\thtml += \"<div class='webix_tab_filler' style='width:\"+leafWidth+\"px;'>&nbsp;</div>\";\n\t\t\t}\n\n\t\t\tresultHTML = \"\";\n\n\t\t\t// consider top and bottom offset in tabs height (top tabbar)\n\t\t\tstyle = (verticalOffset&& !obj.type)?\"height:\"+(common._content_height-verticalOffset)+\"px\":\"\";\n\n\t\t\t//space above tabs (top tabbar)\n\t\t\tif(obj.topOffset && !obj.type)\n\t\t\t\tresultHTML += \"<div class='webix_before_all_tabs' style='width:100%;height:\"+obj.topOffset+\"px'></div>\";\n\n\t\t\t// tabs html\n\t\t\tresultHTML +=  \"<div style='\"+style+\"' role='tablist' class='webix_all_tabs \"+(obj.type?(\"webixtype_\"+obj.type):\"\")+\"'>\"+html+\"</div>\";\n\n\t\t\t//space below to tabs (top tabbar)\n\t\t\tif(obj.bottomOffset && !obj.type)\n\t\t\t\tresultHTML += \"<div class='webix_after_all_tabs' style='width:100%;height:\"+obj.bottomOffset+\"px'></div>\";\n\n\t\t\treturn resultHTML;\n\t\t}\n\t},\n\t_getInputNode:function(){\n\t\treturn this.$view.querySelectorAll(\".webix_item_tab\");\n\t},\n\t_getTabHTML: function(tab, width){\n\t\tvar\thtml,\n\t\t\tclassName = \"\",\n\t\t\ttooltip = \"\",\n\t\t\tisDisabled = !!tab.disabled,\n\t\t\tconfig = this.config;\n\n\t\tif (tab.id == config.value)\n\t\t\tclassName += \" webix_selected\";\n\n\t\tif (isDisabled)\n\t\t\tclassName += \" webix_disabled\";\n\n\t\tif (tab.css)\n\t\t\tclassName+=\" \"+tab.css;\n\n\t\tif (config.tooltip)\n\t\t\ttooltip = \" webix_t_id='\"+tab.id+\"'\";\n\n\t\twidth = (tab.width||width);\n\t\thtml = \"<div class=\\\"webix_item_tab\"+className+\"\\\" \"+/*@attr*/\"button_id=\\\"\"+tab.id+\"\\\" role=\\\"tab\\\" \"+\n\t\t\t\"aria-selected=\\\"\"+(tab.id== config.value?\"true\":\"false\")+\"\\\" tabindex=\\\"\"+(!isDisabled && tab.id==config.value?\"0\":\"-1\")+\n\t\t\t\"\\\" style=\\\"width:\"+width+\"px;\\\"\"+(isDisabled?\" webix_disabled=\\\"true\\\"\":\"\")+tooltip+\">\";\n\n\t\t// a tab title\n\t\tif(this._tabTemplate){\n\t\t\tvar calcHeight = this._content_height- config.inputPadding*2 - 2;\n\t\t\tvar height = this._content_height - 2;\n\t\t\tvar temp = extend({ cheight: calcHeight, aheight:height }, tab);\n\t\t\thtml+= this._tabTemplate(temp);\n\t\t}\n\t\telse {\n\t\t\tvar icon = tab.icon?(\"<span class='webix_icon \"+tab.icon+\"'></span> \"):\"\";\n\t\t\thtml+=icon + tab.value;\n\t\t}\n\n\t\tif (!isDisabled && (tab.close || config.close))\n\t\t\thtml+=\"<span role='button' tabindex='0' aria-label='\"+i18n.aria.closeTab+\"' class='webix_tab_close webix_icon wxi-close'></span>\";\n\n\t\thtml+=\"</div>\";\n\t\treturn html;\n\t},\n\t_getBox:function(){\n\t\treturn this._dataobj.firstChild;\n\t},\n\t_types:{\n\t\timage:\"<div class='webix_img_btn_top' style='height:#cheight#px;background-image:url(#image#);'><div class='webix_img_btn_text'>#value#</div></div>\",\n\t\ticon:\"<div class='webix_img_btn' style='line-height:#cheight#px;height:#cheight#px;'><span class='webix_icon_btn #icon#' style='max-width:#cheight#px;max-height:#cheight#px;'></span>#value#</div>\",\n\t\ticonTop:\"<div class='webix_img_btn_top' style='height:#cheight#px;width:100%;top:0px;text-align:center;'><span class='webix_icon #icon#'></span><div class='webix_img_btn_text'>#value#</div></div>\"\n\t},\n\ttype_setter:function(value){\n\t\tthis._settings.tabOffset = 0;\n\t\tif (this._types[value])\n\t\t\tthis._tabTemplate = template(this._types[value]);\n\t\treturn value;\n\t}\n};\n\n\nconst view = protoUI(api,  segmented.view);\nexport default {api, view};","import {addCss, createCss} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport {extend, isArray} from \"../webix/helpers\";\nimport template from \"../webix/template\";\n\nimport env from \"../webix/env\";\n\nimport base from \"../views/view\";\nimport proto from \"../views/proto\";\nimport VRenderStack from \"../core/vrenderstack\";\nimport CustomPrint from \"../core/customprint\";\nimport KeysNavigation from \"../core/keysnavigation\";\nimport DataMove from \"../core/datamove\";\nimport DragItem from \"../core/dragitem\";\nimport MouseEvents from \"../core/mouseevents\";\nimport SelectionModel from \"../core/selectionmodel\";\nimport Scrollable from \"../core/scrollable\";\nimport CopyPaste from \"../core/copypaste\";\n\nconst api = {\n\tname:\"list\",\n\t_listClassName : \"webix_list\",\n\t_itemClassName:\"webix_list_item\",\n\t$init:function(config){\n\t\taddCss(this._viewobj, this._listClassName + (((config.layout||this.defaults.layout) == \"x\")?\"-x\":\"\") );\n\t\tthis.data.provideApi(this,true);\n\n\t\tthis.data.attachEvent(\"onStoreUpdated\", (id, obj, mode) => {\n\t\t\tif (!id || mode === \"add\" || mode === \"delete\") this._auto_resize();\n\t\t});\n\t\tthis.data.attachEvent(\"onSyncApply\", () => this._auto_resize());\n\n\t\tthis._viewobj.setAttribute(\"role\", \"listbox\");\n\t},\n\tdynamic_setter:function(value){\n\t\tif (value)\n\t\t\textend(this, VRenderStack, true);\n\t\treturn value;\n\t},\n\t$dragHTML:function(obj,e,context){\n\t\tlet html;\n\t\tif (this._settings.layout == \"y\" && this.type.width == \"auto\"){\n\t\t\tthis.type.width = this._content_width;\n\t\t\thtml = this._toHTML(obj);\n\t\t\tthis.type.width = \"auto\";\n\t\t} else html = this._toHTML(obj);\n\n\t\tif ( isArray(context.source) && context.source.length > 1 )\n\t\t\thtml = this._toMultipleHTML(html, context.source.length);\n\t\treturn html;\n\t},\n\tdefaults:{\n\t\tselect:false,\n\t\tscroll:true,\n\t\tlayout:\"y\",\n\t\tnavigation:true,\n\t\tdatafetch:50\n\t},\n\t_id:/*@attr*/\"webix_l_id\",\n\ton_click:{\n\t\twebix_list_item:function(e,id){\n\t\t\tif (this._settings.select){\n\t\t\t\tthis._no_animation = true;\n\t\t\t\tif (this._settings.select==\"multiselect\"  || this._settings.multiselect)\n\t\t\t\t\tthis.select(id, false, (e.ctrlKey || e.metaKey || (this._settings.multiselect == \"touch\")), e.shiftKey); \t//multiselection\n\t\t\t\telse\n\t\t\t\t\tthis.select(id);\n\t\t\t\tthis._no_animation = false;\n\t\t\t}\n\t\t}\n\t},\n\ton_dblclick:{\n\t},\n\tgetVisibleCount:function(){\n\t\treturn Math.floor(this._content_height / this._one_height());\n\t},\n\t_auto_resize:function(){\n\t\tconst c = this._settings;\n\t\tif (c.autoheight || c.autowidth)\n\t\t\treturn this.resize();\n\n\t\tif (c.layout == \"y\"){\n\t\t\tif (c.yCount) this._auto_height_calc(c.yCount);\n\t\t} else {\n\t\t\tif (c.xCount) this._auto_width_calc(c.xCount);\n\t\t}\n\t},\n\t_auto_height_calc:function(count){\n\t\tvar value = this.data.$pagesize||this.count();\n\n\t\tif (this._settings.autoheight && value < (count||Infinity) ) \n\t\t\tcount = value;\n\t\tvar height = this._one_height() * count + (this.type.margin||0);\n\t\t//unitlist\n\t\tif(this.getUnits)\n\t\t\theight += this.getUnits().length*this.type.headerHeight;\n\n\t\tconst maxHeight = this._settings.maxHeight || Infinity;\n\t\theight = Math.max(height, this._settings.minHeight || 0);\n\n\t\tthis._onoff_scroll((count && count < value) || (height > maxHeight), \"y\");\n\t\treturn Math.min(height, maxHeight);\n\t},\n\t_one_height:function(){\n\t\treturn this.type.height + (this.type.margin||0);\n\t},\n\t_auto_width_calc:function(count){\n\t\tvar value = this.data.$pagesize||this.count();\n\n\t\tthis._onoff_scroll(count && count < value, \"x\");\n\t\tif (this._settings.autowidth && value < (count||Infinity) ) \n\t\t\tcount = value;\n\n\t\treturn (this.type.width * count); \n\t},\n\t$getSize:function(dx,dy){\n\t\tif (this._settings.layout == \"y\"){\n\t\t\tif (this.type.width!=\"auto\")\n\t\t\t\tthis._settings.width = this.type.width + (this._scroll_y?env.scrollSize:0);\n\t\t\tif (this._settings.yCount || this._settings.autoheight)\n\t\t\t\tthis._settings.height = this._auto_height_calc(this._settings.yCount)||1;\n\t\t}\n\t\telse {\n\t\t\tif (this.type.height!=\"auto\")\n\t\t\t\tthis._settings.height = this._one_height() + (this._scroll_x?env.scrollSize:0);\n\t\t\tif (this._settings.xCount || this._settings.autowidth)\n\t\t\t\tthis._settings.width = this._auto_width_calc(this._settings.xCount)||1;\n\t\t}\n\t\treturn base.api.$getSize.call(this, dx, dy);\n\t},\n\t$setSize:function(){\n\t\tbase.api.$setSize.apply(this, arguments);\n\t},\n\ttype:{\n\t\tcss:\"\",\n\t\twidthSize:function(obj, common){\n\t\t\treturn common.width+(common.width>-1?\"px\":\"\");\n\t\t},\n\t\theightSize:function(obj, common){\n\t\t\treturn common.height+(common.height>-1?\"px\":\"\");\n\t\t},\n\t\tclassname:function(obj, common, marks){\n\t\t\tvar css = \"webix_list_item\";\n\n\t\t\tif (common.css) css += \" \"+common.css;\n\t\t\tif (obj.disabled) css += \" webix_disabled\";\n\t\t\tif (obj.$css){\n\t\t\t\tif (typeof obj.$css == \"object\")\n\t\t\t\t\tobj.$css = createCss(obj.$css);\n\t\t\t\tcss += \" \"+obj.$css;\n\t\t\t}\n\t\t\tif (marks && marks.$css)\n\t\t\t\tcss += \" \"+marks.$css;\n\n\t\t\treturn css;\n\t\t},\n\t\taria:function(obj, common, marks){\n\t\t\treturn \"role=\\\"option\\\"\"+(marks && marks.webix_selected?\" aria-selected=\\\"true\\\" tabindex=\\\"0\\\"\":\" tabindex=\\\"-1\\\"\")+(obj.$count && obj.$template?\"aria-expanded=\\\"true\\\"\":\"\")+\n\t\t\t\t(obj.disabled?\" aria-disabled=\\\"true\\\" webix_disabled=\\\"true\\\"\":\"\");\n\t\t},\n\t\ttemplate:function(obj){\n\t\t\treturn (obj.icon?(\"<span class='webix_list_icon webix_icon \"+obj.icon+\"'></span>\"):\"\") + obj.value + (obj.badge||obj.badge===0?(\"<div class='webix_badge'>\"+obj.badge+\"</div>\"):\"\");\n\t\t},\n\t\twidth:\"auto\",\n\t\ttemplateStart:template(\"<div \"+/*@attr*/\"webix_l_id\"+\"=\\\"#id#\\\" class=\\\"{common.classname()}\\\" style=\\\"width:{common.widthSize()}; height:{common.heightSize()}; overflow:hidden;\\\" {common.aria()}>\"),\n\t\ttemplateEnd:template(\"</div>\")\n\t},\n\t$skin:function(){\n\t\tthis.type.height = $active.listItemHeight;\n\t},\n\tdisableItem:function(id){\n\t\tthis._set_item_disabled(id, true);\n\t},\n\tenableItem:function(id){\n\t\tthis._set_item_disabled(id, false);\n\t},\n\t_set_item_disabled(id, state){\n\t\tconst item = this.getItem(id);\n\t\tif (item){\n\t\t\titem.disabled = state;\n\t\t\tthis.refresh(id);\n\t\t}\n\t},\n\tisItemEnabled:function(id){\n\t\tconst item = this.getItem(id);\n\t\treturn item && !item.disabled;\n\t},\n\t_skip_item:function(id, prev, dir){\n\t\tif (!this.isItemEnabled(id)){\n\t\t\tid = this.getNextId(id, dir) || null;\n\t\t\treturn (id && id != prev)? this._skip_item(id, prev, dir) : prev;\n\t\t}\n\t\treturn id;\n\t}\n};\n\n\nconst view = protoUI(api,  CustomPrint, KeysNavigation, DataMove, DragItem, MouseEvents, SelectionModel, Scrollable, proto.view, CopyPaste);\nexport default {api, view};","import {createCss, preventEvent, addCss, removeCss} from \"../webix/html\";\nimport {protoUI, $$} from \"../ui/core\";\nimport {extend, delay, uid, toNode, bind} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport {$name} from \"../webix/skin\";\n\nimport base from \"../views/view\";\nimport button from \"../views/button\";\nimport list from \"../views/list\";\nimport i18n from \"../webix/i18n\";\nimport type from \"../webix/type\";\n\nimport UploadDriver from \"../core/uploaddriver\";\nimport DataCollection from \"../core/datacollection\";\n\n\n/*\n\tUI:Uploader\n*/\n\n// #include ui/view.js\n// #include ui/list.js\n\n\ntype(list.view, {\n\tname:\"uploader\",\n\ttemplate:\"{common.removeIcon()}{common.percent()}<div style='float:right'>#sizetext#</div>{common.fileName()}\",\n\tpercent:function(obj){\n\t\tif (obj.status == \"transfer\")\n\t\t\treturn \"<div style='width:60px; text-align:center; float:right'>\"+obj.percent+\"%</div>\";\n\t\treturn \"<div class='webix_upload_\"+obj.status+\"'><span class='\" +\n\t\t\t(obj.status ==\"error\"?\"webix_error_icon\":\"webix_icon wxi-check\")+\"'></span></div>\";\n\t},\n\tremoveIcon:function(){\n\t\treturn \"<div class='webix_remove_upload'><span class='webix_cancel_icon'></span></div>\";\n\t},\n\tfileName:function(obj){\n\t\treturn \"<div style='text-overflow:ellipsis; white-space:nowrap; overflow:hidden; padding-right:8px;'>\"+obj.name+\"</div>\";\n\t},\n\ton_click:{\n\t\t\"webix_remove_upload\":function(ev, id){\n\t\t\t$$(this.config.uploader).files.remove(id);\n\t\t}\n\t}\n});\n\nconst api = {\n\tname:\"uploader\",\n\tdefaults:{\n\t\tautosend:true,\n\t\tmultiple:true,\n\t\tinputName:\"upload\"\n\t},\n\t$cssName:\"button webix_uploader\",\n\t$allowsClear:true,\n\ton_click:{\n\t\t//don't fire extra onItemClick events, visible button will do it\n\t\t\"webix_hidden_upload\":function(){ return false; }\n\t},\n\t//will be redefined by upload driver\n\tsend:function(){},\n\tfileDialog:function(){},\n\tstopUpload:function(){},\n\t$skin:function(){\n\t\tbutton.api.$skin.call(this);\n\n\t\tif($name == \"material\" || $name == \"mini\")\n\t\t\tthis.defaults.css = \"webix_primary\";\n\t},\n\n\t$init:function(){\n\t\tthis.files = new DataCollection();\n\t\tthis._destroy_with_me = [this.files];\n\t\textend(this, UploadDriver, true);\n\t},\n\t$setSize:function(x,y){\n\t\tif (base.api.$setSize.call(this,x,y)){\n\t\t\tthis.render();\n\t\t}\n\t},\n\tapiOnly_setter:function(value){\n\t\tdelay(this.render, this);\n\t\treturn (this.$apiOnly=value);\n\t},\n\t_add_files: function(files){\n\t\tfor (var i = 0; i < files.length; i++)\n\t\t\tthis.addFile(files[i]);\n\t},\n\tlink_setter:function(value){\n\t\tif (value)\n\t\t\tdelay(function(){\n\t\t\t\tvar view = $$(this._settings.link);\n\t\t\t\tif (!view){\n\t\t\t\t\tvar top = this.getTopParentView();\n\t\t\t\t\tif (top.$$)\n\t\t\t\t\t\tview = top.$$(this._settings.link);\n\t\t\t\t}\n\n\t\t\t\tif (view.sync && view.filter)\n\t\t\t\t\tview.sync(this.files);\n\t\t\t\telse if (view.setValues)\n\t\t\t\t\tthis.files.data.attachEvent(\"onStoreUpdated\", function(){\n\t\t\t\t\t\tview.setValues(this, false, \"auto\");\n\t\t\t\t\t});\n\t\t\t\tview._settings.uploader = this._settings.id;\n\t\t\t}, this);\n\t\treturn value;\n\t},\n\taddFile:function(name, size, type, extra){\n\t\tvar file = null;\n\t\tif (typeof name == \"object\"){\n\t\t\tfile = name;\n\t\t\tname = file.name;\n\t\t\tsize = file.size;\n\t\t}\n\n\t\tvar format = this._format_size(size);\n\t\ttype = type || name.split(\".\").pop();\n\n\t\tvar file_struct = {\n\t\t\tfile: file,\n\t\t\tname: name,\n\t\t\tid: uid(),\n\t\t\tsize: size,\n\t\t\tsizetext: format,\n\t\t\ttype: type,\n\t\t\tcontext: this._last_file_context,\n\t\t\tstatus: \"client\"\n\t\t};\n\n\t\tif (file && file.webkitRelativePath)\n\t\t\tfile_struct.name = file.webkitRelativePath;\n\n\t\tif (extra)\n\t\t\textend(file_struct, extra, true);\n\n\t\tif (this.callEvent(\"onBeforeFileAdd\", [file_struct])){\n\t\t\tif (!this._settings.multiple)\n\t\t\t\tthis.files.clearAll();\n\n\t\t\tvar id = this.files.add(file_struct);\n\t\t\tthis.callEvent(\"onAfterFileAdd\", [file_struct]);\n\t\t\tif (id && this._settings.autosend)\n\t\t\t\tthis.send(id);\n\t\t}\n\t\t\n\t\treturn file_struct;\n\t},\n\t\n\t_get_active_url:function(item){\n\t\tvar url = this._settings.upload;\n\t\tvar urldata = extend(item.urlData||{},this._settings.urlData||{});\n\t\tif (url && urldata){\n\t\t\tvar subline = [];\n\t\t\tfor (var key in urldata)\n\t\t\t\tsubline.push(encodeURIComponent(key)+\"=\"+encodeURIComponent(urldata[key]));\n\n\t\t\tif (subline.length)\n\t\t\t\turl += ((url.indexOf(\"?\") ==-1) ? \"?\" : \"&\") + subline.join(\"&\");\n\t\t}\n\t\treturn url;\n\t},\n\n\taddDropZone:function(id, hover_text){\n\t\tvar node = toNode(id);\n\t\tvar extra_css = \"\";\n\t\tif (hover_text)\n\t\t\textra_css = \" \"+createCss({ content:\"\\\"\"+hover_text+\"\\\"\" }, \":before\");\n\n\t\tvar fullcss = \"webix_drop_file\"+extra_css;\n\t\tvar timer = null;\n\n\t\t//web\n\t\t_event(node,\"dragover\", preventEvent);\n\t\t_event(node,\"dragover\", function(){\n\t\t\taddCss(node, fullcss, true);\n\t\t\tif (timer){\n\t\t\t\tclearTimeout(timer);\n\t\t\t\ttimer = null;\n\t\t\t}\n\t\t});\n\t\t_event(node,\"dragleave\", function(){\n\t\t\t//when moving over html child elements\n\t\t\t//browser will issue dragleave and dragover events\n\t\t\t//ignore first one\n\t\t\ttimer = setTimeout(function(){\n\t\t\t\tremoveCss(node, fullcss);\n\t\t\t}, 150);\n\t\t});\n\n\t\t_event(node,\"drop\", bind(function(e){\n\t\t\tremoveCss(node, fullcss);\n\t\t\tthis.$drop(e);\n\t\t\treturn preventEvent(e);\n\t\t}, this));\n\t},\n\t\n\t_format_size: function(size) {\n\t\tvar index = 0;\n\t\twhile (size > 1024){\n\t\t\tindex++;\n\t\t\tsize = size/1024;\n\t\t}\n\t\treturn Math.round(size*100)/100+\" \"+i18n.fileSize[index];\n\t},\n\n\t_complete: function(id, response) {\n\t\tvar item = this.files.getItem(id);\n\n\t\textend(item, response, true);\n\t\titem.status = \"server\";\n\t\titem.progress = 100;\n\n\t\tthis.callEvent(\"onFileUpload\", [item, response]);\n\t\tthis.callEvent(\"onChange\", []);\n\t\tthis.files.updateItem(id);\n\t\t\n\t\tif (this.isUploaded())\n\t\t\tthis._upload_complete(response);\n\t},\n\t_upload_complete:function(response){\n\t\tthis.callEvent(\"onUploadComplete\", [response]);\n\t\tif (this._last_assigned_upload_callback){\n\t\t\tthis._last_assigned_upload_callback.call(this, response);\n\t\t\tthis._last_assigned_upload_callback = 0;\n\t\t}\n\t},\n\tisUploaded:function(){\n\t\tvar order = this.files.data.order;\n\t\tfor (var i=0; i<order.length; i++)\n\t\t\tif (this.files.getItem(order[i]).status != \"server\")\n\t\t\t\treturn false;\n\n\t\treturn true;\n\t},\n\t$onUploadComplete: function(){\n\n\t},\n\t$updateProgress: function(id, percent) {\n\t\tvar item = this.files.getItem(id);\n\t\titem.percent = Math.round(percent);\n\t\tthis.files.updateItem(id);\n\t},\n\tsetValue:function(value){\n\t\tif (typeof value == \"string\" && value)\n\t\t\tvalue = { value:value, status:\"server\" };\n\n\t\tthis.files.clearAll();\n\t\tif (value)\n\t\t\tthis.files.parse(value);\n\n\t\tthis.callEvent(\"onChange\", []);\n\t},\n\tgetValue:function(){\n\t\tvar data = [];\n\t\tthis.files.data.each(function(obj){\n\t\t\tif (obj.status == \"server\")\n\t\t\t\tdata.push(obj.value||obj.name);\n\t\t});\n\n\t\treturn data.join(\",\");\n\t}\n\n};\n\n\nconst view = protoUI(api,  button.view);\nexport default {api, view};","import {protoUI} from \"../ui/core\";\nimport {uid, delay} from \"../webix/helpers\";\nimport {_event, event, eventRemove} from \"../webix/htmlevents\";\nimport env from \"../webix/env\";\nimport {$active} from \"../webix/skin\";\nimport template from \"../webix/template\";\n\nimport text from \"./text\";\nimport textarea from \"./textarea\";\n\nconst api = {\n\tname:\"texthighlight\",\n\tdefaults:{\n\t\ttemplate:function(obj, common){\n\t\t\tconst name = obj.name || obj.id;\n\t\t\tconst id = \"x\"+uid();\n\t\t\tconst width = common._get_input_width(obj);\n\n\t\t\tlet html = `<div class=\"webix_text_highlight\" style=\"width:${width}px;\"><div class=\"webix_text_highlight_value\"`;\n\n\t\t\t// iOS adds 3px of (unremovable) padding to the left and right of a textarea\n\t\t\tif(obj.type == \"textarea\" && env.isIOS)\n\t\t\t\thtml += ` style=\"margin-left:${$active.dataPadding + 3}px; margin-right:${$active.dataPadding + 3}px;\"`;\n\n\t\t\thtml += \"></div></div>\";\n\n\t\t\tif(obj.type == \"textarea\"){\n\t\t\t\thtml += `${common._baseInputHTML(\"textarea\")} style=\"width:${width}px;\" id=\"${id}\" name=\"${name}\" class=\"webix_inp_textarea\">${common._pattern(obj.value)}</textarea>`;\n\t\t\t\treturn common.$renderInput(obj, html, id);\n\t\t\t}\n\t\t\telse\n\t\t\t\treturn html+common.$renderInput(obj);\n\t\t},\n\t\thighlight: text => template.escape(text),\n\t\ttype:\"text\"\n\t},\n\t$init:function(config){\n\t\tconst type = config.type || this.defaults.type;\n\t\tthis._viewobj.className += \" webix_el_\" + type;\n\n\t\tif(type == \"textarea\"){\n\t\t\tdelete config.clear;\n\t\t\tconfig.height = config.height || 0;\n\t\t\tconfig.minHeight = config.minHeight || 60;\n\t\t\tthis._skipSubmit = true;\n\t\t}\n\t\telse {\n\t\t\t//input hasn't scroll event\n\t\t\tthis.scrollEv = event(document, \"selectionchange\", ()=> {\n\t\t\t\tif(this.$view.contains(document.getSelection().focusNode))\n\t\t\t\t\tthis._syncText();\n\t\t\t});\n\t\t\tthis.attachEvent(\"onDestruct\", ()=> {\n\t\t\t\teventRemove(this.scrollEv);\n\t\t\t});\n\t\t}\n\n\t\t//setValue\n\t\tthis.attachEvent(\"onChange\", ()=> this._syncText());\n\n\t\tthis.attachEvent(\"onAfterRender\", ()=> {\n\t\t\tthis._updatePos();\n\n\t\t\tconst evs = [\"scroll\", \"focus\", \"blur\", \"paste\", \"cut\", \"keyup\", \"input\"];\n\t\t\tevs.forEach((ev) => _event(this.getInputNode(), ev, ()=> this._syncText()));\n\n\t\t\tthis._handleInput(true);\n\t\t});\n\t},\n\t$setSize:function(){\n\t\ttext.api.$setSize.apply(this, arguments);\n\t\tthis._updatePos();\n\t},\n\t$renderIcon:function(c){\n\t\tif (c.type == \"text\")\n\t\t\treturn text.api.$renderIcon.apply(this, arguments);\n\t\treturn \"\";\n\t},\n\t_getLabelHeight:function(top){\n\t\tif(this._settings.type == \"textarea\")\n\t\t\treturn top ? this._labelTopHeight-this._settings.inputPadding : \"\";\n\n\t\treturn text.api._getLabelHeight.apply(this, arguments);\n\t},\n\tgetInputNode: function() {\n\t\treturn this._dataobj.querySelector(this._settings.type == \"text\" ? \"input\" : \"textarea\");\n\t},\n\t_getHighlightNode: function(){\n\t\treturn this._dataobj.querySelector(\".webix_text_highlight\");\n\t},\n\t_handleInput: function(init){\n\t\tconst highlight = this._getHighlightNode().firstElementChild;\n\t\tlet text = this.getValue();\n\n\t\tif(init || text != (this._lastText||\"\")){\n\t\t\tthis._lastText = text;\n\n\t\t\t//add &nbsp; at the end because div ignores last empty line + it gives better positioning\n\t\t\thighlight.innerHTML = this._settings.highlight.apply(this, [text]) + \"&nbsp;\";\n\t\t}\n\t},\n\t_handleScroll: function(){\n\t\tlet highlight = this._getHighlightNode();\n\t\tif(this._settings.type == \"text\")\n\t\t\thighlight = highlight.firstElementChild;\n\n\t\tconst text = this.getInputNode();\n\n\t\thighlight.scrollTop = text.scrollTop;\n\t\thighlight.scrollLeft = text.scrollLeft;\n\t},\n\t_updatePos: function(){\n\t\tif(this._rendered_input && this.isVisible()){\n\t\t\tconst input = this.getInputNode();\n\t\t\tconst highlightStyles = this._getHighlightNode().style;\n\n\t\t\thighlightStyles.left = input.offsetLeft+\"px\";\n\t\t\thighlightStyles.top = input.offsetTop+\"px\";\n\t\t\thighlightStyles.height = input.getBoundingClientRect().height+\"px\";\n\t\t}\n\t},\n\t_syncText: function(){\n\t\tdelay(function(){\n\t\t\tif (this.$destructed) return;\n\n\t\t\tthis._handleInput();\n\t\t\tthis._handleScroll();\n\t\t}, this);\n\t}\n};\n\nconst view = protoUI(api, textarea.autoheight, text.view);\nexport default {api, view};","import { protoUI } from \"../ui/core\";\nimport i18n from \"../webix/i18n\";\nimport layout from \"../views/layout\";\nimport { isUndefined, copy } from \"../webix/helpers\";\nimport wDate from \"../core/date\";\nimport { $active } from \"../webix/skin\";\nimport { getTextSize } from \"../webix/html\";\n\nconst api = {\n\tname:\"timeboard\",\n\tdefaults: {\n\t\twidth: 260,\n\t\thours: true,\n\t\tseconds: false,\n\t\ttwelve: /%([a,A])/.test(i18n.timeFormat)\n\t},\n\n\t$skin:function(){\n\t\tlayout.api.$skin.call(this);\n\n\t\tthis.defaults.margin = $active.layoutMargin.form;\n\t\tthis.defaults.padding = $active.layoutPadding.space;\n\t},\n\n\t$init: function(config) {\n\t\tthis.$view.className += \" webix_timeboard\";\n\n\t\tlet rows = [];\n\t\tconst twelve = !isUndefined(config.twelve) ? config.twelve: this.defaults.twelve;\n\t\tconst hours = !isUndefined(config.hours) ? config.hours : this.defaults.hours;\n\t\tconst seconds = config.seconds || this.defaults.seconds;\n\n\t\tif (isUndefined(config.height)){\n\t\t\tconst nrows = (1 + hours*1 + 1 + seconds*1 + (!!config.button)*1);\n\t\t\tconfig.height = $active.inputHeight * nrows + (config.margin||this.defaults.margin) * (nrows - 1) + (config.padding||this.defaults.padding) * 2;\n\t\t}\n\n\t\trows.push(this._getClock(hours, seconds, twelve));\n\t\trows.push(...this._getSliders(hours, seconds, twelve));\n\t\tif (config.button)\n\t\t\trows.push(this._getDoneButton());\n\n\t\tconfig.rows = [{ \n\t\t\tview:\"form\", \n\t\t\telements:rows, padding:0, borderless:true,\n\t\t\ton:{\n\t\t\t\tonChange:(v,o,c) => this._recollectValues(c)\n\t\t\t}\n\t\t}];\n\n\t\tthis.$ready.push(function(){\n\t\t\tthis._form = this.queryView(\"form\");\n\t\t\tconst value = this._settings.value;\n\t\t\tif(value) this.setValue(value, \"auto\");\n\t\t});\n\t},\n\n\t// accepts strings and Dates\n\tsetValue: function(value, config) {\n\t\tvalue = this.$prepareValue(value);\n\t\tconst oldvalue = this._settings.value;\n\n\t\tif(!wDate.equal(value, oldvalue)) {\n\t\t\tthis._settings.value = value;\n\t\t\tthis.$setValue(value);\n\t\t\tthis.callEvent(\"onChange\", [value, oldvalue, config]);\n\t\t}\n\t},\n\n\t$prepareValue:function(value){\n\t\tif (typeof value === \"string\")\n\t\t\tvalue = i18n.parseTimeFormatDate(value);\n\t\treturn value || wDate.datePart(new Date());\n\t},\n\n\t$setValue:function(value){\n\t\tconst obj = {};\n\n\t\tobj.minutes = obj.sminutes = value.getMinutes();\n\t\tif (this._settings.hours)\n\t\t\tobj.shours = obj.hours = value.getHours();\n\t\tif (this._settings.seconds)\n\t\t\tobj.sseconds = obj.seconds = value.getSeconds();\n\n\t\tif (this._settings.twelve){\n\t\t\tif (!isUndefined(obj.hours)) {\n\t\t\t\tobj.day_part = obj.hours > 11 ? i18n.pm[1] : i18n.am[1];\n\t\t\t\tobj.hours = !obj.hours || obj.hours == 12 ? 12 : obj.hours % 12;\n\t\t\t\tobj.shours =  obj.hours == 12 ? 0 : obj.hours;\n\t\t\t}\n\t\t}\n\n\t\tthis._form.setValues(obj, false, \"auto\");\n\t},\n\n\t_recollectValues(config){\n\t\tconst values = this.$getValue();\n\t\t\n\t\tconst date = this._settings.value ? wDate.copy(this._settings.value) : new Date();\n\t\tdate.setHours(values.hours || 0);\n\t\tdate.setMinutes(values.minutes);\n\t\tif(this._settings.seconds)\n\t\t\tdate.setSeconds(values.seconds);\n\n\t\tthis.setValue(date, config);\n\t},\n\n\t$getValue:function(){\n\t\tconst values = this._form.getValues();\n\t\tif (this._settings.twelve && this._settings.hours){\n\t\t\tif(values.day_part == i18n.pm[1] && values.hours < 12)\n\t\t\t\tvalues.hours = (values.hours * 1 + 12).toString();\n\t\t\telse if(values.day_part == i18n.am[1] && values.hours == 12)\n\t\t\t\tvalues.hours = 0;\n\t\t}\n\t\treturn values;\n\t},\n\n\tgetValue: function() {\n\t\tif(this._settings.stringResult){\n\t\t\tconst values = this.$getValue();\n\t\t\tconst res = [];\n\t\t\tif(values.hours) res.push(values.hours);\n\t\t\tif(values.minutes) res.push(values.minutes);\n\t\t\tif(values.seconds) res.push(values.seconds);\n\t\t\treturn res.join(\":\");\n\t\t}\n\t\telse\n\t\t\treturn this._settings.value;\n\t},\n\n\t_getClock: function(hours, seconds, twelve) {\n\t\tconst inputs = [\n\t\t\t{}, this._getText(\"minutes\"), {}\n\t\t];\n\n\t\tconst separator = {\n\t\t\tcss: \"webix_colon_template\", template: \":\",\n\t\t\tborderless: true, width: 16\n\t\t};\n\n\t\tif (hours)\n\t\t\tinputs.splice(1, 0, this._getText(\"hours\", twelve), copy(separator));\n\t\tif (seconds)\n\t\t\tinputs.splice(-1, 0, copy(separator), this._getText(\"seconds\"));\n\t\t\n\t\tif (twelve && hours){\n\t\t\tconst am = i18n.am[1];\n\t\t\tconst pm = i18n.pm[1];\n\n\t\t\tconst control = {\n\t\t\t\tview: \"label\",\n\t\t\t\tname: \"day_part\",\n\t\t\t\tcss: \"webix_day_part\",\n\t\t\t\ttemplate:\"<div tabindex='0' role='button' class='webix_el_box' style='width:#awidth#px;height:#aheight#px;line-height:#cheight#px'>#label#</div>\",\n\t\t\t\tinputWidth: 30,\n\t\t\t\ton: {\n\t\t\t\t\tonItemClick:function(){\n\t\t\t\t\t\tthis.setValue(this.getValue() == am ? pm : am, \"user\");\n\t\t\t\t\t},\n\t\t\t\t\tonKeyPress:function(code, e){\n\t\t\t\t\t\tthis._onKeyPress(code, e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tinputs.splice(-1, 1, control);\n\t\t}\n\n\t\treturn {\n\t\t\ttype: \"clean\",\n\t\t\tcols: inputs\n\t\t};\n\t},\n\n\t_getText: function(name, twelve) {\n\t\tconst max = name === \"hours\" ? (twelve ? 11 : 23) : 59;\n\n\t\treturn {\n\t\t\tview: \"text\",\n\t\t\twidth: getTextSize(\"00\").width + 2*$active.dataPadding + 2*$active.inputPadding,\n\t\t\tname: name,\n\t\t\tformat: {\n\t\t\t\tparse: a => {\n\t\t\t\t\tif (a == 12 && name === \"hours\" && twelve) a = \"00\";\n\t\t\t\t\treturn (a.length > 1) ? a.replace(/^0/, \"\") : a || 0;\n\t\t\t\t},\n\t\t\t\tedit: a => {\n\t\t\t\t\tif (a <= 0 && name === \"hours\" && twelve) a = 12;\n\t\t\t\t\telse if (a < 0) a = 0;\n\t\t\t\t\telse if (a > max) a = max;\n\t\t\t\t\treturn (a + \"\").length === 1 ? \"0\" + a : a + \"\" || \"00\";\n\t\t\t\t}\n\t\t\t},\n\t\t\ton: {\n\t\t\t\tonChange:(nv) => {\n\t\t\t\t\tconst v = (twelve && name === \"hours\" && (!nv || nv == 12) ? 0 : nv) * 1;\n\t\t\t\t\tthis._form.elements[\"s\"+name].setValue(v, \"auto\");\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t},\n\n\t_getSliders: function(hours, seconds, twelve) {\n\t\tconst sliders = [\n\t\t\tthis._getSlider(\"minutes\", i18n.calendar.minutes, 59)\n\t\t];\n\n\t\tif (hours) {\n\t\t\tsliders.unshift(this._getSlider(\n\t\t\t\t\"hours\", \n\t\t\t\ti18n.calendar.hours, twelve ? 11 : 23\n\t\t\t));\n\t\t}\n\t\t\n\t\tif (seconds)\n\t\t\tsliders.push(this._getSlider(\"seconds\", i18n.timeboard.seconds, 59, twelve));\n\n\t\treturn sliders;\n\t},\n\n\t_getSlider: function(name, title, max, twelve) {\n\t\tconst enLocale = name === \"hours\" && twelve;\n\t\t\n\t\tconst config = {\n\t\t\tview: \"slider\",\n\t\t\tname: \"s\" + name,\n\t\t\ttitle: title,\n\t\t\tmoveTitle: false,\n\t\t\tmin: 0, max: max,\n\t\t\ton: {\n\t\t\t\tonChange:(nv) => {\n\t\t\t\t\tthis._form.elements[name].setValue((enLocale ? (!nv || nv == 12 ? 12 : nv%12) : nv) + \"\", \"auto\");\n\t\t\t\t},\n\t\t\t\tonSliderDrag:function(){\n\t\t\t\t\tconst nv = this.getValue();\n\t\t\t\t\tconst form = this.getFormView();\n\t\t\t\t\tform.blockEvent();\n\t\t\t\t\tform.elements[name].setValue((enLocale ? (!nv || nv == 12 ? 12 : nv%12) : nv) + \"\", \"auto\");\n\t\t\t\t\tform.unblockEvent();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn config;\n\t},\n\n\t_getDoneButton: function() {\n\t\treturn { \n\t\t\tview: \"button\",\n\t\t\tvalue: i18n.calendar.done,\n\t\t\tcss: \"webix_primary\",\n\t\t\tclick: () => {\n\t\t\t\tthis.callEvent(\"onTimeSelect\", [ this._settings.value ]);\n\t\t\t} \n\t\t};\n\t}\n};\n\nconst view = protoUI(api, layout.view);\nexport default { api, view };\n","import popup from \"../views/popup\";\nimport UIManager from \"../core/uimanager\";\n\nimport {preventEvent} from \"../webix/html\";\nimport {protoUI, $$} from \"../ui/core\";\nimport {toFunctor, extend, copy, isUndefined, delay, bind, toNode} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport template from \"../webix/template\";\n\n\n// #include ui/window.js\n\nconst api = {\n\tname:\"suggest\",\n\tdefaults:{\n\t\tautofocus:false,\n\t\ttype:\"list\",\n\t\tkeyPressTimeout:1,\n\t\tbody:{\n\t\t\tyCount:10,\n\t\t\tautoheight:true,\n\t\t\tbody:true,\n\t\t\tselect:true,\n\t\t\tborderless:true,\n\t\t\tnavigation:true\n\t\t},\n\t\tfilter:function(item,value){\n\t\t\tif (item.value.toString().toLowerCase().indexOf(value.toLowerCase())===0) return true;\n\t\t\treturn false;\n\t\t}\n\t},\n\ttemplate_setter:template,\n\tfilter_setter:function(value){\n\t\treturn toFunctor(value, this.$scope);\n\t},\n\t_show_on_key_press:true,\n\t$init:function(obj){\n\t\tvar temp = {};\n\t\textend(temp, copy(this.defaults.body));\n\t\ttemp.view = obj.type || this.defaults.type;\n\n\t\tvar etemp = this._get_extendable_cell(temp);\n\t\tif (obj.body)\n\t\t\textend(etemp, obj.body, true);\n\n\t\tif (obj.data)\n\t\t\tetemp.data = obj.data;\n\t\tif (obj.url)\n\t\t\tetemp.url = obj.url;\n\t\tif (obj.datatype)\n\t\t\tetemp.datatype = obj.datatype;\n\n\t\tif (obj.id)\n\t\t\ttemp.id = temp.id || (obj.id+\"_\"+temp.view);\n\n\t\tobj.body = temp;\n\t\tthis.$ready.push(this._set_on_popup_click);\n\n\t\tthis.attachEvent(\"onShow\", function(){\n\t\t\tif (this._settings.master){\n\t\t\t\tconst master = $$(this._settings.master);\n\t\t\t\tif (master){\n\t\t\t\t\tconst node = master._getInputDiv ? master._getInputDiv() : master.getInputNode();\n\t\t\t\t\tnode.setAttribute(\"aria-expanded\", \"true\");\n\t\t\t\t}\n\n\t\t\t\t// execute only if there is a master view\n\t\t\t\tthis._show_selection();\n\t\t\t}\n\t\t});\n\t\tthis.attachEvent(\"onHide\", function(){\n\t\t\tif (this._settings.master){\n\t\t\t\tconst master = $$(this._settings.master);\n\t\t\t\tif (master){\n\t\t\t\t\tconst node = master._getInputDiv ? master._getInputDiv() : master.getInputNode();\n\t\t\t\t\tnode.setAttribute(\"aria-expanded\", \"false\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis._old_text = {};\n\t},\n\t_get_extendable_cell:function(obj){\n\t\treturn obj;\n\t},\n\t_get_details:function(config){\n\t\treturn isUndefined(config) ? null : { config };\n\t},\n\t_set_input_value:function(text){\n\t\tconst trg = this._last_input_target;\n\t\tif(trg.getAttribute(\"contentEditable\") == \"true\" || trg.getAttribute(\"contentEditable\") == \"\")\n\t\t\ttrg.innerText = text;\n\t\telse\n\t\t\ttrg.value = text;\n\t},\n\t_preselectMasterOption:function(data){\n\t\tconst text = data.id ? this.getItemText(data.id) : (data.text||data.value);\n\t\tlet node;\n\n\t\tif (this._settings.master){\n\t\t\tconst master = $$(this._settings.master);\n\t\t\tnode = master.getInputNode();\n\n\t\t\tif (node){\n\t\t\t\t// restore last text to allow 'master' view to save new value on blur\n\t\t\t\tconst prev_text = master._settings.text;\n\n\t\t\t\tif (master.options_setter)\n\t\t\t\t\tmaster.$setValue(data.$empty?\"\":data.id);\n\t\t\t\telse if (master.$setValueHere)\n\t\t\t\t\tmaster.$setValueHere(text, data, this._get_details());\n\t\t\t\telse\n\t\t\t\t\tmaster.$setValue(text);\n\n\t\t\t\tmaster._settings.text = prev_text;\n\t\t\t}\n\t\t}\n\t\telse if (this._last_input_target)\n\t\t\tthis._set_input_value(text);\n\n\t\tnode = node || this._last_input_target;\n\t\tif (node)\n\t\t\tnode.focus();\n\t},\n\tsetMasterValue:function(data, refresh, config){\n\t\tconst text = data.id ? this.getItemText(data.id) : (data.text||data.value);\n\n\t\tif (this._settings.master){\n\t\t\tconst master = $$(this._settings.master);\n\t\t\tif (refresh && data.id)\n\t\t\t\tmaster.refresh();\n\t\t\telse if (master.options_setter)\n\t\t\t\tmaster.setValue(data.$empty?\"\":data.id, config);\n\t\t\telse if (master.setValueHere)\n\t\t\t\tmaster.setValueHere(text, data, this._get_details(config));\n\t\t\telse\n\t\t\t\tmaster.setValue(text, config);\n\t\t}\n\t\telse if (this._last_input_target)\n\t\t\tthis._set_input_value(text);\n\n\t\tif (!refresh){\n\t\t\tthis.hide();\n\t\t\tif (this._last_input_target)\n\t\t\t\tthis._last_input_target.focus();\n\t\t}\n\t\tthis.callEvent(\"onValueSuggest\", [data, text]);\n\t},\n\tgetMasterValue:function(){\n\t\tif (this._settings.master)\n\t\t\treturn $$(this._settings.master).getValue();\n\t\treturn null;\n\t},\n\tgetItemId:function(text){\n\t\tvar list = this.getList();\n\t\tfor (var key in list.data.pull){\n\t\t\tvar obj = list.getItem(key);\n\t\t\tif (this._settings.filter.call(this, obj, text))\n\t\t\t\treturn obj.id;\n\t\t}\n\t},\n\tgetItemText:function(id){\n\t\tvar item = this.getList().getItem(id);\n\n\t\tif (!item)\n\t\t\treturn this._old_text[id] || \"\";\n\n\t\tif (this._settings.template)\n\t\t\treturn this._settings.template.call(this, item, this.type);\n\n\t\tif (this._settings.textValue)\n\t\t\treturn \"\"+item[this._settings.textValue]+\"\";\n\t\t\n\t\tvar type = this.getList().type;\n\t\tvar text = type.template.call(type, item, type);\n\n\t\treturn (this._old_text[id] = text);\n\t},\n\tgetSuggestion:function(text){\n\t\tvar id,\n\t\t\tlist = this.getList(),\n\t\t\torder = list.data.order;\n\n\t\tif (list.getSelectedId)\n\t\t\tid = list.getSelectedId();\n\n\t\tif (text && order.length && (!id || order.find(id) <0) ){\n\t\t\tid = order[0];\n\t\t\t//ensure that option really does match client-side filtering rules\n\t\t\tif (!list.config.dataFeed && !this.config.filter.call(this, list.data.pull[id], text)) return null;\n\t\t}\n\n\t\t//complex id in datatable\n\t\tif (id){\n\t\t\tif (typeof id == \"object\") id = id+\"\";\n\t\t\tif (list.getItem(id).$empty) return null;\n\t\t}\n\t\treturn id;\n\t},\n\tgetList:function(){\n\t\treturn this._body_cell;\n\t},\n\t_set_on_popup_click:function(){\n\t\tvar list = this.getList();\n\t\tvar type = this._settings.type;\n\n\t\tif (list.count){\n\t\t\tlist.attachEvent(\"onItemClick\", bind(function(item){\n\t\t\t\tthis.setMasterValue(list.getItem(item), false, \"user\");\n\t\t\t}, this));\n\t\t\tlist.data.attachEvent(\"onStoreUpdated\",bind(function(id, obj, mode){\n\t\t\t\tif (mode == \"delete\" && id == this.getMasterValue())\n\t\t\t\t\tthis.setMasterValue({ id:\"\", text:\"\" }, true, \"auto\");\n\t\t\t\telse if (mode == \"update\" && id == this.getMasterValue()){\n\t\t\t\t\tthis.setMasterValue(obj, true, \"auto\");\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\tlist.data.attachEvent(\"onAfterFilter\", bind(this._suggest_after_filter, this));\n\t\t\tlist.data.attachEvent(\"onStoreLoad\", bind(this._suggest_after_filter, this));\n\t\t\t\n\t\t\tif (isUndefined(this._settings.fitMaster))\n\t\t\t\tthis._settings.fitMaster = true;\n\t\t} else if (type == \"calendar\"){\n\t\t\tlist.attachEvent(\"onAfterDateSelect\", function(){\n\t\t\t\tthis.getParentView().setMasterValue({ value:list.getSelectedDate() }, list.config.multiselect, \"user\");\n\t\t\t});\n\t\t\tlist.attachEvent(\"onTodaySet\", function(date){\n\t\t\t\tthis.getParentView().setMasterValue({ value: date }, false, \"user\");\n\t\t\t});\n\t\t\tlist.attachEvent(\"onDateClear\", function(date){\n\t\t\t\tthis.getParentView().setMasterValue({ value: date }, false, \"user\");\n\t\t\t});\n\t\t} else if (type == \"colorboard\"){\n\t\t\tlist.attachEvent(\"onItemClick\", function(value){\n\t\t\t\tthis.getParentView().setMasterValue({ value: value }, false, \"user\");\n\t\t\t});\n\t\t} else if (type == \"timeboard\"){\n\t\t\tlist.attachEvent(\"onTimeSelect\", function(value){\n\t\t\t\tthis.getParentView().setMasterValue({ value: value }, false, \"user\");\n\t\t\t});\n\t\t} else if (type == \"colorselect\"){\n\t\t\tlist.attachEvent(\"onColorSelect\", function(value){\n\t\t\t\tthis.getParentView().setMasterValue({ value:value }, false, \"user\");\n\t\t\t});\n\t\t}\n\t},\n\tinput_setter: function(value) {\n\t\tthis.linkInput(value);\n\t\treturn 0;\n\t},\n\tlinkInput: function(input){\n\t\tvar node;\n\t\tif (input.getInputNode){\n\t\t\tnode = input.getInputNode();\n\t\t\tnode.webix_master_id = input._settings.id;\n\t\t\tinput.attachEvent(\"onInputResize\",bind(this._resetPosition, this));\n\t\t} else\n\t\t\tnode = toNode(input);\n\n\t\t_event(node,\"keydown\",function(e){\n\t\t\tif ((node != document.body || this.isVisible()) && (input.config ? (!input.config.readonly) : (!node.getAttribute(\"readonly\"))))\n\t\t\t\tthis._suggestions(e, node);\n\t\t}, {bind:this});\n\t\t\n\t\tif(input._getInputDiv)\n\t\t\tnode = input._getInputDiv();\n\t\t\n\t\tnode.setAttribute(\"aria-autocomplete\", \"list\");\n\t\tnode.setAttribute(\"aria-expanded\", \"false\");\n\n\t\tif(node.tagName === \"DIV\"){\n\t\t\tnode.setAttribute(\"aria-live\", \"assertive\");\n\t\t\tnode.setAttribute(\"aria-atomic\", \"true\");\n\t\t}\n\n\t\tthis._non_ui_mode = true;\n\t},\n\t_suggestions: function(e, node){\n\t\t//should be before tab and arrows handlers: IME can call keydown twice\n\t\tif (this._last_delay)\n\t\t\tthis._last_delay = clearTimeout(this._last_delay);\n\n\t\tvar list = this.getList();\n\t\tvar trg = e.target;\n\t\tif((trg == document.body && !this.isVisible()) || trg.className ==\"webix_clipbuffer\")\n\t\t\treturn;\n\n\t\tthis._settings.master = trg.webix_master_id;\n\t\tif(node != document.body)\n\t\t\tthis._last_input_target = trg;\n\n\t\tvar code = e.which || e.keyCode;\n\t\t//shift, ctrl, alt, meta\n\t\tif (code == 16 || code == 17 || code == 18 || code == 91) return;\n\n\t\t//move cursor via arrow\n\t\tif(code > 32  && code < 40 && code != 38) return;\n\n\t\tconst ctrl = e.ctrlKey || e.metaKey;\n\t\tconst [backspace, del, v, x, y, z] = [8, 46, 86, 88, 89, 90].map(v => code == v);\n\t\tif(ctrl && !(backspace || del || v || x || y || z)) return;\n\n\t\tif(backspace || del || (ctrl && x)){\n\t\t\tconst selStart = trg.selectionStart;\n\t\t\tconst selEnd = trg.selectionEnd;\n\n\t\t\tif(\n\t\t\t\t(backspace && selStart == 0) ||\n\t\t\t\t(x && selStart == selEnd) ||\n\t\t\t\t(del && selStart == (trg.value || trg.innerText).length)\n\t\t\t)\n\t\t\t\treturn;\n\t\t}\n\n\t\t// tab - hide popup and do nothing\n\t\tif (code == 9)\n\t\t\treturn this._tab_key(e,list);\n\n\t\t// escape - hide popup\n\t\tif (code == 27)\n\t\t\treturn this._escape_key(e,list);\n\n\t\t// enter\n\t\tif (code == 13)\n\t\t\treturn this.$enterKey(e,list);\n\n\t\t// up/down/right/left are used for navigation\n\t\tif (this._navigate(e) && this.isVisible()){\n\t\t\tpreventEvent(e);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst contentEditable = trg.getAttribute(\"contentEditable\") == \"true\" || trg.getAttribute(\"contentEditable\") == \"\";\n\t\tif (isUndefined(trg.value) && !contentEditable) return;\n\n\t\tthis._last_delay = delay(function(){\n\t\t\t//focus moved to the different control, suggest is not necessary\n\t\t\tif (!this._non_ui_mode &&\n\t\t\t\t\tUIManager.getFocus() != $$(this._settings.master)) return;\n\n\t\t\tthis._resolve_popup = true;\n\n\t\t\tconst val = contentEditable ? trg.innerText : trg.value;\n\n\t\t\tif (this._before_filtering)\n\t\t\t\tthis._before_filtering();\n\n\t\t\t// used to prevent showing popup when it was initialized\n\t\t\tif (list.config.dataFeed)\n\t\t\t\tlist.filter(\"value\", val);\n\t\t\telse if (list.filter){\n\t\t\t\tlist.filter(bind(function(item){\n\t\t\t\t\treturn this._settings.filter.call(this,item,val);\n\t\t\t\t}, this));\n\t\t\t}\n\t\t}, this, [], this._settings.keyPressTimeout);\n\t},\n\t_suggest_after_filter:function(){\n\t\tif (!this._resolve_popup) return true;\n\t\tthis._resolve_popup = false;\n\n\t\tvar list = this.getList();\n\n\t\t// filtering is complete\n\t\t// if there are as min 1 variant it must be shown, hidden otherwise\n\t\tif (list.count() > 0){\n\t\t\tthis.adjust();\n\t\t\tif(!this.isVisible())\n\t\t\t\tthis._dont_unfilter = true;\n\t\t\tthis.show(this._last_input_target,null,true);\n\t\t\tthis._dont_unfilter = false;\n\t\t} else if(this._last_input_target){\n\t\t\tthis.hide();\n\t\t\tthis._last_input_target = null;\n\t\t}\n\t},\n\n\tshow:function(node){\n\t\tconst input = (node && (node.tagName == \"INPUT\" || node.tagName == \"TEXTAREA\")) ? node : null;\n\n\t\tif (!this.isVisible() || (input && input != this._last_input_target)){\n\t\t\tvar list = this.getList();\n\t\t\tif (list.filter && !this._dont_unfilter){\n\t\t\t\t// clear gridsuggest filters\n\t\t\t\tif(list.eachColumn){\n\t\t\t\t\tlist.eachColumn(id => {\n\t\t\t\t\t\tconst filter = list.getFilter(id);\n\t\t\t\t\t\tif(filter){\n\t\t\t\t\t\t\tif (filter.setValue) filter.setValue(\"\");\n\t\t\t\t\t\t\telse filter.value = \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tlist.filter(\"\");\n\t\t\t}\n\n\t\t\tif (this.$customWidth){\n\t\t\t\tthis.$customWidth(node);\n\t\t\t}\n\t\t\telse if (node && node.tagName && this._settings.fitMaster){\n\t\t\t\tthis._settings.width = node.offsetWidth -2 ; //2 - borders\n\t\t\t}\n\n\t\t\tif (list._zoom_level)\n\t\t\t\tlist.render();\n\n\t\t\tthis.adjust();\n\n\t\t\t// needed to return focus\n\t\t\tif (input)\n\t\t\t\tthis._last_input_target = input;\n\t\t}\n\t\tpopup.api.show.apply(this, arguments);\n\t},\n\t_show_selection:function(){\n\t\tconst list = this.getList();\n\t\tlet value = this.getMasterValue();\n\n\t\tif (list.select && list.showItem){\n\t\t\tif (value && list.exists && list.exists(value)){\n\t\t\t\tlist.select(value);\n\t\t\t\tlist.showItem(value);\n\t\t\t} else {\n\t\t\t\tlist.unselect();\n\t\t\t\tlist.showItem(list.getFirstId());\n\t\t\t}\n\t\t}\n\t\telse if (list.setValue){\n\t\t\tif (this._settings.master)\n\t\t\t\tvalue = $$(this._settings.master).$prepareValue(value);\n\t\t\tlist.setValue(value, \"auto\");\n\t\t}\n\t},\n\t$enterKey:function(e, list){\n\t\tconst visible = this.isVisible();\n\t\tlet value;\n\t\tlet master;\n\n\t\tif (this._settings.master)\n\t\t\tmaster = $$(this._settings.master);\n\n\t\tif (master && master._editable && master._settings.editable)\n\t\t\tmaster._applyChanges(\"user\");\n\t\telse if (visible){\n\t\t\tif (list.count){\n\t\t\t\tvalue = list.getSelectedId(false, true);\n\t\t\t\tif (list.count() == 1 && list.getFirstId() != value)\n\t\t\t\t\tvalue = list.getFirstId();\n\n\t\t\t\tif (value) value = list.getItem(value);\n\t\t\t} else {\n\t\t\t\tif (list.getSelectedDate) value = list.getSelectedDate();\n\t\t\t\telse if (list.getValue) value = list.getValue();\n\n\t\t\t\tif (value) value = { value: value };\n\t\t\t}\n\t\t\t\n\t\t\tif (value)\n\t\t\t\tthis.setMasterValue(value, false, \"user\");\n\t\t}\n\n\t\tif (visible)\n\t\t\tthis.hide();\n\t\telse if (this._show_on_key_press)\n\t\t\tthis.show(this._last_input_target);\n\t},\n\t_escape_key:function(){\n\t\treturn this.hide();\n\t},\n\t_tab_key:function(){\n\t\treturn this.hide();\n\t},\n\t/*! suggestions navigation: up/down buttons move selection\n\t *\t@param e\n\t *\t\tevent object\n\t **/\n\t_navigate: function(e) {\n\t\tvar list = this.getList();\n\t\tvar code = e.which || e.keyCode;\n\t\tvar data;\n\n\t\tif( list.moveSelection && code < 41 && code > 32 && !e.ctrlKey && !e.metaKey && !e.shiftKey && !e.altKey) {\n\t\t\t// down and up arrows\n\t\t\tif (code === 40 || code === 38) {\n\t\t\t\tif (this._show_on_key_press && !this.isVisible())\n\t\t\t\t\tthis.show(this._last_input_target);\n\n\t\t\t\tlet dir = (code === 38) ? \"up\" : \"down\";\n\t\t\t\tlist.moveSelection(dir, false, false);\n\t\t\t}// other arrows\n\t\t\telse {\n\t\t\t\tif(list.count || (!list.count && !list.isVisible()))\n\t\t\t\t\treturn false;\n\n\t\t\t\tlet dir;\n\t\t\t\tif(code == 33) dir = \"pgup\";\n\t\t\t\tif(code == 34) dir = \"pgdown\";\n\t\t\t\tif(code == 35) dir = \"bottom\";\n\t\t\t\tif(code == 36) dir = \"top\";\n\t\t\t\tif(code == 37) dir = \"left\";\n\t\t\t\tif(code == 39) dir = \"right\";\n\n\t\t\t\tlist.moveSelection(dir, false, false);\n\t\t\t}\n\n\t\t\tif (list.count)\n\t\t\t\tdata = list.getSelectedItem(false);\n\t\t\telse {\n\t\t\t\tif (list.getSelectedDate) data = list.getSelectedDate();\n\t\t\t\telse if (list.getValue) data = list.getValue();\n\n\t\t\t\tif (data) data = { value: data };\n\t\t\t}\n\n\t\t\tif (data && this.isVisible())\n\t\t\t\tthis._preselectMasterOption(data);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t},\n\tgetValue:function(){\n\t\tvar list = this.getList();\n\t\tvar  value = (list.getValue ? list.getValue() : list.getSelectedId()) || \"\";\n\t\tvalue = value.id || value;\n\n\t\t// check empty\n\t\tif(list.getItem){\n\t\t\tvar item = list.getItem(value);\n\t\t\tif(item && item.$empty)\n\t\t\t\treturn \"\";\n\t\t}\n\t\treturn value;\n\t},\n\tsetValue:function(value){\n\t\tconst list = this.getList();\n\t\tif (value){\n\t\t\tif (list.exists(value)){\n\t\t\t\tlist.select(value);\n\t\t\t\tlist.showItem(value);\n\t\t\t}\n\t\t} else {\n\t\t\tlist.unselect();\n\t\t\tlist.showItem(list.getFirstId());\n\t\t}\n\t},\n\t_resetPosition: function(){\n\t\tif(!this._settings.hidden && this._settings.master){\n\t\t\tvar master = $$(this._settings.master);\n\t\t\tif(master)\n\t\t\t\tthis.show(master.$view);\n\t\t}\n\t}\n};\n\n\nconst view = protoUI(api,  popup.view);\nexport default {api, view};\n","import base from \"../views/view\";\nimport DataLoader from \"../core/dataloader\";\nimport EventSystem from \"../core/eventsystem\";\nimport {protoUI} from \"../ui/core\";\nimport template from \"../webix/template\";\nimport promise from \"../thirdparty/promiz\";\nimport {extend, bind, isUndefined} from \"../webix/helpers\";\nimport {$active} from \"../webix/skin\";\n\n\nvar google, script;\nconst api = {\n\tname:\"geochart\",\n\tdefaults:{\n\t\tchart:{\n\t\t\tdisplayMode:\"auto\",\n\t\t\tregion:\"world\",\n\t\t\tresolution:\"countries\"\n\t\t}\n\t},\n\t$init:function(config){\n\t\tthis.$view.innerHTML = \"<div class='webix_map_content' style='width:100%;height:100%'></div>\";\n\t\tthis._contentobj = this.$view.firstChild;\n\t\tthis._waitMap = promise.defer();\n\n\t\tconfig.chart = extend(config.chart||{}, this.defaults.chart);\n\n\t\tthis.data.provideApi(this, true);\n\t\tthis.$ready.push(this.render);\n\t\tthis._drawData();\n\n\t\tthis.data.attachEvent(\"onClearAll\", bind(this._refreshColumns, this)); \n\t\tthis.data.attachEvent(\"onStoreUpdated\", bind(this._drawData, this));\n\t},\n\t$skin:function(){\n\t\tthis.defaults.chart.backgroundColor = $active.backColor;\n\t},\n\tgetMap:function(waitMap){\n\t\treturn waitMap?this._waitMap:this._map;\n\t},\n\t_getCallBack:function(prev){\n\t\treturn bind(function(){\n\t\t\tif (typeof prev === \"function\") prev();\n\n\t\t\tgoogle = google || window.google;\n\t\t\tthis._initMap();\n\t\t}, this);\n\t},\n\trender:function(){\n\t\tif(typeof window.google==\"undefined\"||typeof window.google.charts==\"undefined\"){\n\t\t\tif(!script){\n\t\t\t\tscript = document.createElement(\"script\");\n\t\t\t\tscript.type = \"text/javascript\";\n\n\t\t\t\tscript.src = \"//www.gstatic.com/charts/loader.js\";\n\t\t\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(script);\n\t\t\t}\n\t\t\tscript.onload = this._getCallBack(script.onload);\n\t\t}\n\t\telse //there's a custom link to google api in document head\n\t\t\t(this._getCallBack())();\n\t},\n\t_initMap:function(){\n\t\tif(!google.visualization || !google.visualization.GeoChart){\n\t\t\tgoogle.charts.load(\"current\", {\n\t\t\t\t\"packages\":[\"geochart\"],\n\t\t\t\t\"mapsApiKey\": this._settings.key\n\t\t\t});\n\t\t\tgoogle.charts.setOnLoadCallback(bind(function(){\n\t\t\t\tthis._initMap();\n\t\t\t}, this));\n\t\t}\n\t\telse{\n\t\t\tthis._map = new google.visualization.GeoChart(this._contentobj);\n\t\t\tthis._mapEvents();\n\t\t\t\n\t\t\tthis._waitMap.resolve(this._map);\n\t\t}\n\t},\n\t$onLoad:function(obj){\n\t\tif(!this._map){\n\t\t\tthis._waitMap.then(bind(function(){\n\t\t\t\tthis.parse(obj, this._settings.datatype);\n\t\t\t}, this));\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\t_drawData:function(){\n\t\tif(!this._map){\n\t\t\tif(!this._map) \n\t\t\t\tthis._waitMap.then(bind(this._drawData, this));\n\t\t\treturn;\n\t\t}\n\n\t\tvar columns = this._columns&&this._columns.length?this._columns:this._defineColumns();\n\t\tvar data = [];\n\t\tthis.data.each(function(obj){\n\t\t\tvar line = [];\n\t\t\tfor(var c = 0; c<columns.length; c++){\n\t\t\t\tvar value = obj[columns[c].label];\n\t\t\t\tif(columns[c].type == \"number\")\n\t\t\t\t\tvalue = value*1;\n\t\t\t\telse if(columns[c].role ==\"tooltip\")\n\t\t\t\t\tvalue = this._settings.tooltip(obj);\n\t\t\t\tline.push(value);\n\t\t\t}\n\t\t\tdata.push(line);\n\t\t}, this);\n\n\t\tif(columns.length){\n\t\t\tvar table = new google.visualization.DataTable();\n\t\t\tfor(var i = 0; i<columns.length; i++)\n\t\t\t\ttable.addColumn(columns[i]);\n\t\t\ttable.addRows(data);\n\t\t\t\n\t\t\tvar view = new google.visualization.DataView(table);\n\t\t\tthis._map.draw(view, this._settings.chart);\n\t\t}\n\t\telse //draw clean chart\n\t\t\tthis._map.draw(google.visualization.arrayToDataTable([[\"\", \"\"]]), {});\n\n\t},\n\tsetDisplayMode:function(value){\n\t\tthis._settings.chart.displayMode = value;\n\t\tthis.refresh();\n\t},\n\tsetRegion:function(value){\n\t\tthis._settings.chart.region = value;\n\t\tthis.refresh();\n\t},\n\trefresh:function(){\n\t\tthis._map.clearChart();\n\t\tthis._drawData();\n\t},\n\ttooltip_setter:function(value){\n\t\tvar tooltip = this._settings.chart.tooltip;\n\t\tthis._settings.chart.tooltip = extend(tooltip || {}, {isHtml:true});\n\t\treturn template(value);\n\t},\n\t$setSize:function(w, h){\n\t\tif (base.api.$setSize.apply(this, arguments) && this._map){\n\t\t\textend(this._settings, {width:w, height:h});\n\t\t\tthis.refresh();\n\t\t}\n\t},\n\t_refreshColumns:function(){\n\t\tthis._columns = null;\n\t\tthis._drawData();\n\t},\n\t_getColumnType:function(item, key){\n\t\tif (isUndefined(item[key]))\n\t\t\treturn \"string\";\n\n\t\tvar type = typeof item[key];\n\t\tif(type ==\"string\" && !isNaN(item[key]*1)) \n\t\t\ttype = \"number\";\n\t\treturn type;\n\t},\n\t_defineColumns:function(){\n\t\tvar columns = this._settings.columns || [];\n\t\tvar item = this.data.pull[this.data.order[0]];\n\n\t\t//auto columns\n\t\tif (!columns.length){\n\t\t\tif(item){\n\t\t\t\tfor (var key in item)\n\t\t\t\t\tif (key !== \"id\") columns.push(key);\n\t\t\t}\n\t\t\telse return []; // wait any data\n\t\t}\n\n\t\t//[\"title\", \"area\"]\n\t\tfor(var i=0; i<columns.length; i++){\n\t\t\tif (typeof columns[i] !== \"object\"){\n\t\t\t\tif(!item)\n\t\t\t\t\treturn [];\n\t\t\t\tcolumns[i] = {type:this._getColumnType(item, columns[i]), label:columns[i]};\n\t\t\t}\n\t\t}\n\n\t\tif(this._settings.tooltip)\n\t\t\tcolumns.push({type:\"string\", role:\"tooltip\", p:{\"html\": true}});\n\n\t\tthis._columns  = columns;\n\t\treturn columns;\n\t},\n\t_mapEvents:function(){\n\t\tgoogle.visualization.events.addListener(this._map, \"error\", bind(function(){this.callEvent(\"onMapError\", arguments);}, this));\n\t\tgoogle.visualization.events.addListener(this._map, \"ready\", bind(function(){this.callEvent(\"onMapReady\", arguments);}, this));\n\t\tgoogle.visualization.events.addListener(this._map, \"regionClick\", bind(function(){this.callEvent(\"onRegionClick\", arguments);}, this));\n\t\tgoogle.visualization.events.addListener(this._map, \"select\", bind(function(){\n\t\t\tconst sel = this._map.getSelection()[0];\n\t\t\tif(sel)\n\t\t\t\tthis.callEvent(\"onItemClick\", [ this.data.order[sel.row] ]);\n\t\t}, this));\n\t}\n};\n\n\nconst view = protoUI(api,  DataLoader, EventSystem, base.view);\nexport default {api, view};","import base from \"../views/view\";\nimport DataLoader from \"../core/dataloader\";\nimport EventSystem from \"../core/eventsystem\";\nimport {protoUI} from \"../ui/core\";\nimport promise from \"../thirdparty/promiz\";\nimport {bind, extend} from \"../webix/helpers\";\n\n\nvar google, script;\n\nconst api = {\n\tname:\"google-map\",\n\t$init:function(){\n\t\tthis.$view.innerHTML = \"<div class='webix_map_content' style='width:100%;height:100%'></div>\";\n\t\tthis._contentobj = this.$view.firstChild;\n\t\tthis._waitMap = promise.defer();\n\n\t\tthis.data.provideApi(this, true);\n\t\tthis.$ready.push(this.render);\n\t},\n\tgetMap:function(waitMap){\n\t\treturn waitMap?this._waitMap:this._map;\n\t},\n\t_getCallBack:function(prev){\n\t\treturn bind(function(){\n\t\t\tif (typeof prev === \"function\") prev();\n\n\t\t\tgoogle = google || window.google;\n\t\t\tthis._initMap.call(this);\n\t\t}, this);\n\t},\n\trender:function(){\n\t\tif(typeof window.google==\"undefined\"||typeof window.google.maps==\"undefined\"){\n\t\t\tif(!script){\n\t\t\t\tscript = document.createElement(\"script\");\n\t\t\t\tscript.type = \"text/javascript\";\n\n\t\t\t\tvar config = this._settings;\n\t\t\t\tvar src = config.src || \"//maps.google.com/maps/api/js\";\n\t\t\t\tsrc += (src.indexOf(\"?\")===-1 ? \"?\" :\"&\");\n\t\t\t\t\n\t\t\t\tif (config.key)\n\t\t\t\t\tsrc += \"&key=\"+config.key;\n\t\t\t\tif (config.libraries)\n\t\t\t\t\tsrc += \"&libraries=\"+config.libraries;\n\n\t\t\t\tscript.src = src;\n\t\t\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(script);\n\t\t\t}\n\t\t\tscript.onload = this._getCallBack(script.onload);\n\t\t}\n\t\telse //there's a custom link to google api in document head\n\t\t\t(this._getCallBack())();\n\t},\n\t_initMap:function(){\n\t\tvar c = this.config;\n\t\tif(this.isVisible(c.id)){\n\t\t\tthis._map = new google.maps.Map(this._contentobj, {\n\t\t\t\tzoom: c.zoom,\n\t\t\t\tcenter: new google.maps.LatLng(c.center[0], c.center[1]),\n\t\t\t\tmapTypeId: google.maps.MapTypeId[c.mapType]\n\t\t\t});\n\t\t\tthis._waitMap.resolve(this._map);\n\t\t\tthis._contentobj.firstChild.setAttribute(/*@attr*/\"webix_disable_drag\", \"true\");\n\t\t}\n\t},\n\tcenter_setter:function(config){\n\t\tif(this._map)\n\t\t\tthis._map.setCenter(new google.maps.LatLng(config[0], config[1]));\n\n\t\treturn config;\n\t},\n\tmapType_setter:function(config){\n\t\t/*ROADMAP,SATELLITE,HYBRID,TERRAIN*/\n\t\tif(this._map)\n\t\t\tthis._map.setMapTypeId(google.maps.MapTypeId[config]);\n\n\t\treturn config;\n\t},\n\tzoom_setter:function(config){\n\t\tif(this._map)\n\t\t\tthis._map.setZoom(config);\n\t\treturn config;\n\t},\n\tlayerType_setter:function(config){\n\t\tif(config == \"heatmap\")\n\t\t\tthis.config.libraries = \"visualization\";\n\t\tif(this._layerApi[config]){\n\t\t\textend(this, this._layerApi[config], true);\n\t\t\tthis.data.attachEvent(\"onStoreUpdated\", bind(function(){\n\t\t\t\tthis._waitMap.then(bind(function(){\t\n\t\t\t\t\tthis.drawData.call(this, arguments);\n\t\t\t\t}, this));\n\t\t\t}, this));\n\t\t}\n\t\treturn config;\n\t},\n\tdefaults:{\n\t\tzoom: 5,\n\t\tcenter:[ 39.5, -98.5 ],\n\t\tmapType: \"ROADMAP\",\n\t\tlayerType:\"marker\"\n\t},\n\t$setSize:function(){\n\t\tbase.api.$setSize.apply(this, arguments);\n\t\tif(this._map)\n\t\t\tgoogle.maps.event.trigger(this._map, \"resize\");\n\t},\n\t$onLoad:function(data){\n\t\tif(!this._map){\n\t\t\tthis._waitMap.then(bind(function(){\n\t\t\t\tthis.parse(data);\n\t\t\t}, this));\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\t_layerApi:{\n\t\tmarker:{\n\t\t\tdrawData:function(id, item, operation){\n\t\t\t\tswitch (operation){\n\t\t\t\t\tcase \"add\":\n\t\t\t\t\t\titem.$marker = this._getItemConfig(item);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"update\":\n\t\t\t\t\t\titem.$marker = this._getItemConfig(item);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"delete\":\n\t\t\t\t\t\titem.$marker.setMap(null);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis.data.each(function(item){\n\t\t\t\t\t\t\titem.$marker = this._getItemConfig(item);\n\t\t\t\t\t\t}, this);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t},\n\t\t\tclearAll:function(soft){\n\t\t\t\tthis.data.each(function(obj){\n\t\t\t\t\tobj.$marker.setMap(null);\n\t\t\t\t});\n\t\t\t\tthis.data.clearAll(soft);\n\t\t\t},\n\t\t\tshowItem:function(id){\n\t\t\t\tvar item = this.getItem(id);\n\t\t\t\tthis._map.setCenter(new google.maps.LatLng(item.lat, item.lng));\n\t\t\t},\n\t\t\t_getItemConfig:function(item){\n\t\t\t\tvar obj = {};\n\t\t\t\tfor(var i in item) obj[i] = item[i];\n\t\t\t\tobj.position = new google.maps.LatLng(item.lat, item.lng);\n\t\t\t\tobj.map = item.hidden? null: this._map;\n\n\t\t\t\tvar marker = item.$marker;\n\t\t\t\tif(!marker){\n\t\t\t\t\tmarker = new google.maps.Marker(obj);\n\t\t\t\t\tthis._events(marker);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\titem.$marker.setMap(obj.map);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.callEvent(\"onItemRender\", [item]);\n\t\t\t\t\n\t\t\t\treturn marker;\n\t\t\t},\n\t\t\t_events:function(marker){\n\t\t\t\tvar map = this;\n\t\t\t\t\n\t\t\t\tmarker.addListener(\"click\", function(){\n\t\t\t\t\tmap.callEvent(\"onItemClick\", [this.id, this]);\n\t\t\t\t});\n\n\t\t\t\tif(marker.getDraggable()){\n\t\t\t\t\tmarker.addListener(\"dragend\", function(){ map._onDrag(this, true); });\n\t\t\t\t\tmarker.addListener(\"drag\", function(){ map._onDrag(this); });\n\t\t\t\t}\n\t\t\t},\n\t\t\t_onDrag:function(marker, end){\n\t\t\t\tvar item = this.getItem(marker.id);\n\t\t\t\tvar pos = marker.getPosition();\n\t\t\t\tvar ev = end?\"onAfterDrop\":\"onDrag\";\n\n\t\t\t\titem.lat = pos.lat();\n\t\t\t\titem.lng = pos.lng();\n\t\t\t\tthis.callEvent(ev, [item.id, item]);\n\t\t\t}\n\t\t},\n\t\theatmap:{\n\t\t\theatmapConfig_setter:function(value){\n\t\t\t\tvalue = value || {};\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\tdrawData:function(){\n\t\t\t\tif(this._heatmap){\n\t\t\t\t\tthis._heatmap.setMap(null);\n\t\t\t\t\tthis._heatmap = null;\n\t\t\t\t}\n\n\t\t\t\tvar hdata = [];\n\t\t\t\tthis.data.each(function(item){ hdata.push(this._getConfig(item)); }, this);\n\n\t\t\t\tif(hdata.length){\n\t\t\t\t\tvar data = extend(this.config.heatmapConfig, {data:hdata, map:this._map}, true);\n\t\t\t\t\tthis._heatmap = new google.maps.visualization.HeatmapLayer(data);\n\t\t\t\t\tthis.callEvent(\"onHeatMapRender\", [this._heatmap]);\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetHeatmap:function(){\n\t\t\t\treturn this._heatmap;\n\t\t\t},\n\t\t\t_getConfig:function(item){\n\t\t\t\tvar obj = {};\n\t\t\t\tfor(var i in item) obj[i] = item[i];\n\t\t\t\tobj.location = new google.maps.LatLng(item.lat, item.lng);\n\n\t\t\t\treturn obj;\n\t\t\t}\n\t\t}\n\t}\n};\n\n\nconst view = protoUI(api,  DataLoader, EventSystem, base.view);\nexport default {api, view};","import {$active} from \"../../webix/skin\";\nimport {extend, isUndefined} from \"../../webix/helpers\";\nimport TreeStore from \"../../core/treestore\";\nimport colorConverter from \"../../webix/color\";\nimport {getTextSize} from \"../../webix/html\";\n\nconst Pie = {\n\t$render_pie:function(ctx,data,point0, point1,sIndex,map){\n\t\tthis._renderPie(ctx,data,point0, point1,1,map, sIndex);\n\t},\n\tmultilevel_setter:function(value){\n\t\tif(value)\n\t\t\textend(this.data, TreeStore, true);\n\t\treturn value;\n\t},\n\t/**\n\t *   renders a pie chart\n\t *   @param: ctx - canvas object\n\t *   @param: data - object those need to be displayed\n\t *   @param: x - the width of the container\n\t *   @param: y - the height of the container\n\t *   @param: ky - value from 0 to 1 that defines an angle of inclination (0<ky<1 - 3D chart)\n\t */\n\t_renderPie:function(ctx, data, point0, point1, ky, map, sIndex){\n\t\tif(!data.length)\n\t\t\treturn;\n\n\t\tlet coord = this._getPieParameters(point0, point1);\n\t\t/*pie radius*/\n\t\tlet radius = (this._settings.radius?this._settings.radius:coord.radius);\n\t\tif(radius<0)\n\t\t\treturn;\n\n\t\t//pie center\n\t\tlet x = (this._settings.x?this._settings.x:coord.x);\n\t\tlet y = (this._settings.y?this._settings.y:coord.y);\n\t\tthis._lineWidth = isUndefined(this._settings.borderWidth)?2:this._settings.borderWidth;\n\n\n\t\tconst angleBounds = [-Math.PI/2,Math.PI*3/2];\n\t\tconst seriesCount = this._series.length;\n\t\tconst dr = this._innerRadius || 0;\n\t\tconst len = ( radius - dr)/seriesCount;\n\n\t\tthis._levelCount = this._settings.multilevel?this._getLevelCount(data):1;\n\t\tthis._linePoints = [];\n\t\tthis._pieHeight = (this._settings.pieHeight || Math.floor(radius/3)) * (1 - this._settings.cant) * 3;\n\t\tthis._sectorLen =  this._series.length >1 ? len: Math.round((radius - dr)/this._levelCount);\n\n\t\t//adds shadow to the 2D pie\n\t\tif(ky==1 && this._settings.shadow && !sIndex)\n\t\t\tthis._addShadow(ctx,x,y,radius);\n\t\t//changes vertical position of the center according to 3Dpie cant\n\t\ty = y/ky;\n\t\t// changes Canvas vertical scale\n\t\tctx.scale(1,ky);\n\t\tthis._defColorsCursor = 0;\n\t\tif(dr && ky != 1 && !sIndex)\n\t\t\tthis._createFirstLowerSectors(ctx, data, x, y, dr);\n\t\t// adds radial gradient to a pie\n\t\tif (this._settings.gradient){\n\t\t\tvar x1 = (ky!=1?x+radius/3:x);\n\t\t\tvar y1 = (ky!=1?y+radius/3:y);\n\t\t\tthis._showRadialGradient(ctx, x, y, radius, x1, y1, dr + this._sectorLen * sIndex);\n\t\t}\n\t\tthis._renderLevel(ctx, data, {x,y }, len*(sIndex+1)+dr, point0, map, ky, angleBounds, dr + len*sIndex, 0, sIndex);\n\n\t\t//renders radius lines\n\t\tif(this._lineWidth){\n\t\t\tctx.globalAlpha = 0.8;\n\t\t\tfor(let i=0;i< this._linePoints.length;i++){\n\t\t\t\tconst points = this._linePoints[i];\n\t\t\t\tconst p0 = points[0], p1 = points[1];\n\t\t\t\tthis._drawLine(ctx, p0.x, p0.y, p1.x, p1.y, this._settings.lineColor.call(this, data[i]), this._lineWidth);\n\t\t\t}\n\t\t\tctx.globalAlpha = 1;\n\t\t}\n\t\tctx.scale(1,1/ky);\n\n\t\tif(ky !=1 && this._settings.legend)\n\t\t\tthis._settings.legend.toggle = false;\n\t},\n\t_getLevelCount(data, count){\n\t\tcount = count||1;\n\t\tlet result = [];\n\t\tdata.forEach(item=>\n\t\t\tresult.push(item.data?this._getLevelCount(item.data, count+1):count)\n\t\t);\n\t\treturn Math.max.apply(null, result);\n\t},\n\t_renderLevel(ctx, data, center, radius, point0, map, ky, angleBounds, dr, levelIndex, sIndex, groupColor){\n\t\tlet alpha0 = angleBounds[0];\n\t\tlet values = this._getValues(data);\n\t\tlet totalValue = this._getTotalValue(values);\n\t\tconst {x,y} = center;\n\t\t//weighed values (the ratio of object value to total value)\n\t\tconst ratios = this._getRatios(values,totalValue, alpha0, angleBounds[1]);\n\t\tconst innerRadius = this._innerRadius || 0;\n\t\tfor (let i = 0; i < data.length; i++){\n\t\t\tconst r =  data[i].data ? this._sectorLen * (levelIndex + 1) + innerRadius : radius;\n\t\t\tif (!values[i] && totalValue) continue;\n\t\t\t//drawing sector\n\t\t\tctx.lineWidth = this._lineWidth;\n\t\t\tctx.strokeStyle = this._settings.lineColor.call(this, data[i]);\n\t\t\tctx.beginPath();\n\t\t\t//the angle defines the 2nd edge of the sector\n\t\t\tvar alpha1 = ratios[i]-0.0001;\n\t\t\tlet p0, p1;\n\t\t\tif (!dr){\n\t\t\t\tctx.moveTo(x,y);\n\t\t\t\tctx.arc(x,y,r,alpha0,alpha1,false);\n\t\t\t\tctx.lineTo(x,y);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tp0 = this._getPositionByAngle(alpha0,x,y,dr);\n\t\t\t\tp1 = this._getPositionByAngle(alpha1,x,y,dr);\n\t\t\t\tctx.moveTo(p0.x, p0.y);\n\t\t\t\tctx.arc(x, y, r, alpha0, alpha1,false);\n\t\t\t\tctx.lineTo(p1.x, p1.y);\n\t\t\t\tctx.arc(x, y, dr, alpha1, alpha0,true);\n\t\t\t\tctx.moveTo(p0.x, p0.y);\n\t\t\t}\n\n\t\t\tconst color = this._getColor(data[i], i, groupColor, levelIndex);\n\t\t\tctx.fillStyle = color;\n\t\t\tctx.fill();\n\n\t\t\t/*text that needs being displayed inside the sector*/\n\t\t\tif (this._settings.pieInnerText){\n\t\t\t\tconst label = this._settings.pieInnerText(data[i], totalValue, levelIndex);\n\t\t\t\tconst r0 = this._series.length > 1 || this._levelCount > 1 ? (r - 0.5 * this._sectorLen) : (0.8 * r);\n\t\t\t\tthis._drawSectorLabel(x, y, r0, alpha0, alpha1, ky, label,true, sIndex, color);\n\t\t\t}\n\t\t\tconst isLastLevel = !data[i].data && sIndex == this._series.length-1;\n\t\t\t//label outside the sector\n\t\t\tif (this._settings.label && isLastLevel){\n\t\t\t\tconst text = this._settings.label(data[i], totalValue, sIndex);\n\t\t\t\tthis._drawSectorLabel(x, y,r + this._settings.labelOffset, alpha0, alpha1, ky,  text, false, sIndex);\n\t\t\t}\n\t\t\tconst isSectorFront = ky != 1 && isLastLevel?this._applyPieHeight(ctx, x, y, alpha0, alpha1, r, false, data[i], i, color):null;\n\t\t\t// creates map area (needed for events)\n\t\t\tconst pHeight = isSectorFront?this._pieHeight*ky:0;\n\t\t\tmap.addSector(data[i].id, alpha0, alpha1, x - point0.x, y*ky - point0.y, r, ky, sIndex, dr, pHeight);\n\n\t\t\t// add child sectors\n\t\t\tif(data[i].data)\n\t\t\t\tthis._renderLevel(ctx, data[i].data, center, radius, point0, map, ky, [alpha0,alpha1], r, levelIndex+1, sIndex, color);\n\t\t\t// borders\n\t\t\tconst p = this._getPositionByAngle(alpha0, x, y, r);\n\t\t\tthis._linePoints.push([{x: p0?p0.x:x, y:p0?p0.y:y}, p]);\n\t\t\tif(this._lineWidth)\n\t\t\t\tthis._drawArcBorder(ctx, x, y, r, alpha0, alpha1, isLastLevel);\n\t\t\talpha0 = alpha1;\n\t\t}\n\t},\n\t_getColor: function(item, i, groupColor, levelIndex){\n\t\tlet color = this._settings.color.call(this, item, i, levelIndex || 0, groupColor || null);\n\t\tif(!color && groupColor)\n\t\t\tcolor = this._getLighterColor(groupColor, 0.15 * (i + 1));\n\t\treturn color;\n\t},\n\t_getLighterColor: function(c, f){\n\t\tconst rgb = colorConverter.toRgb(c);\n\t\tconst hsv = colorConverter.rgbToHsv(rgb[0], rgb[1], rgb[2]);\n\t\thsv[1] -= hsv[1] * (f || 0.5);\n\t\treturn \"#\"+colorConverter.rgbToHex(\"rgb(\"+colorConverter.hsvToRgb(hsv[0], hsv[1], hsv[2])+\")\");\n\t},\n\t_drawArcBorder: function(ctx, x, y, r, startAngle, endAngle, isLastLevel){\n\t\tconst w = (ctx.lineWidth = this._lineWidth);\n\t\tctx.strokeStyle = this._settings.borderColor ? this._settings.borderColor.call(this) : \"#ffffff\";\n\t\tctx.beginPath();\n\t\tctx.arc(x, y, r - (isLastLevel?0: w / 2), startAngle, endAngle,false);\n\t\tctx.stroke();\n\t},\n\t/**\n\t *   returns list of values\n\t *   @param: data array\n\t */\n\t_getValues: function(data){\n\t\tconst v = [];\n\t\tfor(let i=0; i<data.length; i++){\n\t\t\tconst item = data[i];\n\t\t\tlet value = parseFloat(this._settings.value(item));\n\t\t\tif(isNaN(value) && item.data)\n\t\t\t\tvalue = this._getChildSum(item.id, item.data);\n\t\t\titem.$value = value;\n\t\t\tv.push(Math.abs(value || 0));\n\t\t}\n\n\t\treturn v;\n\t},\n\t/**\n\t * Get total value by child branches\n\t * @param id {string} a branch id\n\t * @param data {array} child branches\n\t */\n\t_getChildSum: function(id, data){\n\t\tlet sum = 0;\n\t\tfor(let i=0; i<data.length; i++) {\n\t\t\tlet value = parseFloat(this._settings.value(data[i]));\n\t\t\tif(isNaN(value) && data[i].data)\n\t\t\t\tsum += this._getChildSum(data[i].id, data[i].data);\n\t\t\telse\n\t\t\t\tsum += Math.abs(value || 0);\n\t\t}\n\t\tthis.getItem(id).$value = sum;\n\t\treturn sum;\n\t},\n\t/**\n\t *   returns total value\n\t *   @param: the array of values\n\t */\n\t_getTotalValue: function(values){\n\t\tvar t=0;\n\t\tfor(var i = 0; i < values.length;i++)\n\t\t\tt += values[i];\n\t\treturn  t;\n\t},\n\t/**\n\t *   gets angles for all values\n\t *   @param: the array of values\n\t *   @param: total value (optional)\n\t */\n\t_getRatios:function(values,totalValue, angleStart, angleEnd){\n\t\tlet i, value, ratios = [], prevSum = 0,\n\t\t\ttotalAngleValue =  typeof angleStart!=\"undefined\"?(angleEnd - angleStart):Math.PI*2;\n\t\tfor(i = 0; i < values.length;i++){\n\t\t\tvalue = totalValue?values[i]:(1/values.length);\n\t\t\tratios[i] = (angleStart||0)+totalAngleValue*(value+prevSum)/(totalValue||1);\n\t\t\tprevSum += value;\n\t\t}\n\t\treturn ratios;\n\t},\n\t/**\n\t *   returns calculated pie parameters: center position and radius\n\t *   @param: x - the width of a container\n\t *   @param: y - the height of a container\n\t */\n\t_getPieParameters:function(point0,point1){\n\t\tvar width = point1.x-point0.x;\n\t\tvar height = point1.y-point0.y;\n\t\tvar x0 = point0.x+width/2;\n\t\tvar y0 = point0.y+height/2;\n\t\tvar radius = Math.min(width/2,height/2);\n\t\treturn {\"x\":x0,\"y\":y0,\"radius\":radius};\n\t},\n\t/**\n\t *   creates lower part of sector in 3Dpie\n\t *   @param: ctx - canvas object\n\t *   @param: x0 - the horizontal position of the pie center\n\t *   @param: y0 - the vertical position of the pie center\n\t *   @param: a0 - the angle that defines the first edge of a sector\n\t *   @param: a1 - the angle that defines the second edge of a sector\n\t *   @param: R - pie radius\n\t *   @param: line (boolean) - if the sector needs a border\n\t */\n\t_createFirstLowerSectors:function(ctx, data, x, y, r){\n\t\tlet values = this._getValues(data);\n\t\tlet totalValue = this._getTotalValue(values);\n\t\tlet a1 = -Math.PI/2;\n\t\tconst ratios = this._getRatios(values, totalValue, a1, 3*Math.PI/2);\n\t\tfor(let i = 0; i < data.length;i++){\n\t\t\tlet a2 = ratios[i]-0.0001;\n\t\t\tconst color = this._getColor(data[i], i);\n\t\t\tthis._applyPieHeight(ctx, x, y, a1, a2, r, true, data[i], i, color);\n\t\t\ta1 = a2;\n\t\t}\n\t\tthis._defColorsCursor = 0;\n\t},\n\t_applyPieHeight: function(ctx, x, y, a1, a2, r, all, item, i, color){\n\t\t// checks if the lower sector needs being displayed\n\t\tif(!all &&!((a1<=0 && a2>=0)||(a1>=0 && a2<=Math.PI)||(Math.abs(a1-Math.PI)>0.003&&a1<=Math.PI && a2>=Math.PI)))\n\t\t\treturn false;\n\t\tctx.fillStyle = color;\n\t\tctx.strokeStyle = this._settings.lineColor.call(this, item, i);\n\t\tthis._createLowerSector(ctx, x, y, a1, a2, r,true, all);\n\t\tctx.fillStyle = \"#000000\";\n\t\tctx.globalAlpha = 0.2;\n\t\tthis._createLowerSector(ctx, x, y, a1, a2, r, false, all);\n\t\tctx.globalAlpha = 1;\n\t\treturn true;\n\t},\n\t/**\n\t *   creates lower part of sector in 3Dpie\n\t *   @param: ctx - canvas object\n\t *   @param: x - the horizontal position of the pie center\n\t *   @param: y - the vertical position of the pie center\n\t *   @param: a0 - the angle that defines the first edge of a sector\n\t *   @param: a1 - the angle that defines the second edge of a sector\n\t *   @param: r - pie radius\n\t *   @param: line (boolean) - if the sector needs a border\n\t */\n\t_createLowerSector: function(ctx, x, y, a1, a2, r, line, all){\n\t\tctx.lineWidth = this._lineWidth;\n\t\tif(!all){\n\t\t\tif(a1<=0 && a2>=0){\n\t\t\t\ta1 = 0;\n\t\t\t\tline = false;\n\t\t\t\tthis._drawSectorLine(ctx, x, y, r, a1, a2);\n\t\t\t}\n\t\t\tif(a1<=Math.PI && a2>=Math.PI){\n\t\t\t\ta2 = Math.PI;\n\t\t\t\tline = false;\n\t\t\t\tthis._drawSectorLine(ctx, x, y, r, a1, a2);\n\t\t\t}\n\t\t}\n\n\t\t// the height of 3D pie\n\t\tctx.beginPath();\n\t\tctx.arc(x, y, r, a1, a2,false);\n\t\tctx.lineTo(x + r*Math.cos(a2),y + r*Math.sin(a2) + this._pieHeight);\n\t\tctx.arc(x,y + this._pieHeight, r, a2, a1,true);\n\t\tctx.lineTo(x + r*Math.cos(a1),y + r*Math.sin(a1));\n\t\tctx.fill();\n\t\tif(line && this._lineWidth)\n\t\t\tctx.stroke();\n\t\treturn true;\n\t},\n\t/**\n\t *   draws a sector arc\n\t */\n\t_drawSectorLine:function(ctx,x0,y0,R,a1,a2){\n\t\tctx.beginPath();\n\t\tctx.arc(x0,y0,R,a1,a2,false);\n\t\tctx.stroke();\n\t},\n\t/**\n\t *   adds a shadow to pie\n\t *   @param: ctx - canvas object\n\t *   @param: x - the horizontal position of the pie center\n\t *   @param: y - the vertical position of the pie center\n\t *   @param: r - pie radius\n\t */\n\t_addShadow:function(ctx, x, y, r){\n\t\tctx.globalAlpha = 0.5;\n\t\tvar shadows = [\"#c4c4c4\",\"#c6c6c6\",\"#cacaca\",\"#dcdcdc\",\"#dddddd\",\"#e0e0e0\",\"#eeeeee\",\"#f5f5f5\",\"#f8f8f8\"];\n\t\tfor(var i = shadows.length-1;i>-1;i--){\n\t\t\tctx.beginPath();\n\t\t\tctx.fillStyle = shadows[i];\n\t\t\tctx.arc(x+1,y+1,r+i,0,Math.PI*2,true);\n\t\t\tctx.arc(x+1,y+1, r-2,Math.PI*2,0, false);\n\t\t\tctx.fill();\n\t\t}\n\t\tctx.globalAlpha = 1;\n\t},\n\t/**\n\t *   returns a gray gradient\n\t *   @param: gradient - gradient object\n\t */\n\t_getGrayGradient:function(gradient){\n\t\tgradient.addColorStop(0.0,\"#ffffff\");\n\t\tgradient.addColorStop(0.7,\"#7a7a7a\");\n\t\tgradient.addColorStop(1.0,\"#000000\");\n\t\treturn gradient;\n\t},\n\t/**\n\t *   adds gray radial gradient\n\t *   @param: ctx - canvas object\n\t *   @param: x - the horizontal position of the pie center\n\t *   @param: y - the vertical position of the pie center\n\t *   @param: radius - pie radius\n\t *   @param: x0 - the horizontal position of a gradient center\n\t *   @param: y0 - the vertical position of a gradient center\n\t *   @param: dr - the inner radius (for donut or series)\n\t */\n\t_showRadialGradient:function(ctx, x, y, radius, x0, y0, dr){\n\t\t//ctx.globalAlpha = 0.3;\n\t\tctx.beginPath();\n\t\tvar gradient;\n\t\tif(typeof this._settings.gradient!= \"function\"){\n\t\t\tgradient = ctx.createRadialGradient(x0,y0,radius/4,x,y,radius);\n\t\t\tgradient = this._getGrayGradient(gradient);\n\t\t}\n\t\telse gradient = this._settings.gradient(gradient);\n\t\tctx.fillStyle = gradient;\n\t\tctx.arc(x,y,radius,0,Math.PI*2,true);\n\t\tif(dr)\n\t\t\tctx.arc(x,y,dr, Math.PI*2, 0, false);\n\t\tctx.fill();\n\t\tctx.globalAlpha = 0.75;\n\t},\n\t/**\n\t *   returns the calculates pie parameters: center position and radius\n\t *   @param: ctx - canvas object\n\t *   @param: x0 - the horizontal position of the pie center\n\t *   @param: y0 - the vertical position of the pie center\n\t *   @param: r - pie radius\n\t *   @param: alpha1 - the angle that defines the 1st edge of a sector\n\t *   @param: alpha2 - the angle that defines the 2nd edge of a sector\n\t *   @param: ky - the value that defines an angle of inclination\n\t *   @param: text - label text\n\t *   @param: in_width {boolean} - if label needs being displayed inside a pie\n\t *   @param: sIndex {number} - series index\n\t */\n\t_drawSectorLabel:function(x0, y0, r, alpha1, alpha2, ky, text, in_width, sIndex, bgColor){\n\t\tconst css = !in_width || this._getFontCss(bgColor);\n\t\tvar t = this.canvases[sIndex].renderText(0, 0, text, css, 1);\n\t\tif (!t) return;\n\t\tlet labelWidth = getTextSize(text, css).width;\n\n\t\tt.style.width = labelWidth + \"px\";\t//adjust text label to fit all text\n\t\tif (labelWidth>x0) labelWidth = x0;\t//the text can't be greater than half of view\n\n\t\t//calculate expected correction based on default font metrics\n\t\tvar width = (alpha2 - alpha1 < 0.2?4:8);\n\t\tif (in_width) width = labelWidth/1.8;\n\t\tvar alpha = alpha1 + (alpha2 - alpha1)/2;\n\n\t\t//position and its correction\n\t\tr = r - (width - 8)/2;\n\t\tvar corr_x = - width;\n\t\tvar corr_y = -8;\n\t\tvar align = \"right\";\n\n\t\t//for items in left upper and lower sector\n\t\tif(alpha >= Math.PI/2 && alpha < Math.PI || alpha <= 3*Math.PI/2 && alpha >= Math.PI){\n\t\t\tcorr_x = -labelWidth - corr_x + 1; // correction for label width\n\t\t\talign = \"left\";\n\t\t}\n\n\t\t// calculate position of text basically get point at center of pie sector\n\t\tvar offset = 0;\n\n\t\tif(!in_width&&ky<1&&(alpha>0&&alpha<Math.PI))\n\t\t\toffset = (this._settings.height||Math.floor(r/4))/ky;\n\n\t\tvar y = (y0+Math.floor((r + offset)*Math.sin(alpha)))*ky + corr_y;\n\t\tvar x = x0+Math.floor((r + width/2)*Math.cos(alpha)) + corr_x;\n\n\n\t\t// if pie sector starts in left of right part pie,\n\t\t// related text\tmust be placed to the left of to the right of pie as well\n\t\tconst left_end = (alpha2 < Math.PI/2+0.01);\n\t\tconst left_start = (alpha1 < Math.PI/2);\n\t\tif (left_start && left_end){\n\t\t\tx = Math.max(x,x0+3);\t//right part of pie\n\t\t}\n\t\telse if (!left_start && !left_end)\n\t\t\tx = Math.min(x,x0-labelWidth);\t//left part of pie\n\t\telse if (!in_width&&(alpha>=Math.PI/2 && alpha<Math.PI || alpha<=3*Math.PI/2 && alpha>=Math.PI)){\n\t\t\tx += labelWidth/3;\n\t\t}\n\n\t\t//we need to set position of text manually, based on above calculations\n\t\tt.style.top  = y+\"px\";\n\t\tt.style.left = x+\"px\";\n\t\tt.style.width = labelWidth+\"px\";\n\t\tt.style.textAlign = align;\n\t\tt.style.whiteSpace = \"nowrap\";\n\t},\n\t_getFontCss: function(bgColor){\n\t\tconst rgb = colorConverter.toRgb(bgColor);\n\t\tconst brightness = 0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2];\n\t\t// webix_inner_text_dark/light adds 4px to the width (padding)\n\t\treturn \"webix_chart_pie_label webix_inner_text_\" + (brightness > 180 ? \"dark\" : \"light\");\n\t},\n\t$render_pie3D:function(ctx,data,point0, point1,sIndex,map){\n\t\tthis._renderPie(ctx, data, point0, point1, this._settings.cant, map, sIndex);\n\t},\n\t$render_donut:function(ctx, data, point0, point1, sIndex, map){\n\t\tthis._renderDonut(ctx, data, point0, point1, map, sIndex);\n\t},\n\t$render_donut3D:function(ctx,data,point0, point1,sIndex,map){\n\t\tthis._renderDonut(ctx, data, point0, point1, map, sIndex, this._settings.cant);\n\t},\n\t_renderDonut: function(ctx, data, point0, point1, map, sIndex, ky){\n\t\tif(!data.length)\n\t\t\treturn;\n\t\tconst config = this._settings;\n\t\tconst coord = this._getPieParameters(point0,point1);\n\t\tconst pieRadius = (config.radius?config.radius:coord.radius);\n\t\tif (pieRadius <= 0)\n\t\t\treturn;\n\t\tconst x0 = (config.x?config.x:coord.x);\n\t\tconst y0 = (config.y?config.y:coord.y);\n\t\tlet innerRadius = config.innerRadius;\n\t\tif(!innerRadius || innerRadius > pieRadius)\n\t\t\tinnerRadius = pieRadius/3;\n\t\tthis._innerRadius = innerRadius;\n\t\tthis._renderPie(ctx, data, point0, point1, ky || 1, map, sIndex);\n\n\t\tif(this._settings.donutInnerText){\n\t\t\tconst values = this._getValues(data);\n\t\t\tconst totalValue = this._getTotalValue(values);\n\n\t\t\tconst padding = $active.dataPadding;\n\t\t\tconst width = innerRadius*2 - padding*2;\n\n\t\t\tconst centerText = this.canvases[0].renderText(\n\t\t\t\tx0-innerRadius+padding,\n\t\t\t\ty0-innerRadius+padding,\n\t\t\t\t`<div class=\"webix_donut_center_text\">${this._settings.donutInnerText(data, totalValue)}</div>`,\n\t\t\t\t\"webix_donut_center_text_box\",\n\t\t\t\twidth\n\t\t\t);\n\n\t\t\tcenterText.style.height = centerText.style.lineHeight = width+\"px\";\n\t\t}\n\t}\n};\n\nexport default Pie;\n","import color from \"../../webix/color\";\nimport {$active} from \"../../webix/skin\";\n\nconst BarChart = {\n\t/**\n\t*   renders a bar chart\n\t*   @param: ctx - canvas object\n\t*   @param: data - object those need to be displayed\n\t*   @param: x - the width of the container\n\t*   @param: y - the height of the container\n\t*   @param: sIndex - index of drawing chart\n\t*/\n\t$render_bar:function(ctx, data, point0, point1, sIndex, map){\n\t\tvar barWidth, cellWidth,\n\t\t\ti,\n\t\t\tlimits, maxValue, minValue,\n\t\t\trelValue, valueFactor, relativeValues,\n\t\t\tstartValue, unit,\n\t\t\txax, yax,\n\t\t\ttotalHeight = point1.y-point0.y;\n\n\t\tyax = !!this._settings.yAxis;\n\t\txax = !!this._settings.xAxis;\n\n\t\tlimits = this._getLimits();\n\t\tmaxValue = limits.max;\n\t\tminValue = limits.min;\n\n\t\t/*an available width for one bar*/\n\t\tcellWidth = (point1.x-point0.x)/data.length;\n\n\n\t\t/*draws x and y scales*/\n\t\tif(!sIndex&&!(this._settings.origin!=\"auto\"&&!yax)){\n\t\t\tthis._drawScales(data,point0, point1,minValue,maxValue,cellWidth);\n\t\t}\n\n\t\t/*necessary for automatic scale*/\n\t\tif(yax){\n\t\t\tmaxValue = parseFloat(this._settings.yAxis.end);\n\t\t\tminValue = parseFloat(this._settings.yAxis.start);\n\t\t}\n\n\t\t/*unit calculation (bar_height = value*unit)*/\n\t\trelativeValues = this._getRelativeValue(minValue,maxValue);\n\t\trelValue = relativeValues[0];\n\t\tvalueFactor = relativeValues[1];\n\n\t\tunit = (relValue?totalHeight/relValue:relValue);\n\n\t\tif(!yax&&!(this._settings.origin!=\"auto\"&&xax)){\n\t\t\t/*defines start value for better representation of small values*/\n\t\t\tstartValue = 10;\n\t\t\tunit = (relValue?(totalHeight-startValue)/relValue:startValue);\n\t\t}\n\t\t/*if yAxis isn't set, but with custom origin */\n\t\tif(!sIndex&&(this._settings.origin!=\"auto\"&&!yax)&&this._settings.origin>minValue){\n\t\t\tthis._drawXAxis(ctx,data,point0,point1,cellWidth,point1.y-unit*(this._settings.origin-minValue));\n\t\t}\n\n\t\t/*a real bar width */\n\t\tbarWidth = parseInt(this._settings.barWidth,10);\n\t\tvar seriesNumber = 0;\n\t\tvar seriesIndex = 0;\n\t\tfor(i=0; i<this._series.length; i++ ){\n\t\t\tif(i == sIndex){\n\t\t\t\tseriesIndex  = seriesNumber;\n\t\t\t}\n\t\t\tif(this._series[i].type == \"bar\")\n\t\t\t\tseriesNumber++;\n\t\t}\n\t\tif(this._series&&(barWidth*seriesNumber+4)>cellWidth) barWidth = parseInt(cellWidth/seriesNumber-4,10);\n\n\t\t/*the half of distance between bars*/\n\t\tvar barOffset = (cellWidth - barWidth*seriesNumber)/2;\n\n\t\t/*the radius of rounding in the top part of each bar*/\n\t\tvar radius = (typeof this._settings.radius!=\"undefined\"?parseInt(this._settings.radius,10):Math.round(barWidth/5));\n\n\t\tvar inner_gradient = false;\n\t\tvar gradient = this._settings.gradient;\n\n\t\tif(gradient && typeof(gradient) != \"function\"){\n\t\t\tinner_gradient = gradient;\n\t\t\tgradient = false;\n\t\t} else if (gradient){\n\t\t\tgradient = ctx.createLinearGradient(0,point1.y,0,point0.y);\n\t\t\tthis._settings.gradient(gradient);\n\t\t}\n\t\t/*draws a black line if the horizontal scale isn't defined*/\n\t\tif(!xax){\n\t\t\tthis._drawLine(ctx,point0.x,point1.y+0.5,point1.x,point1.y+0.5,$active.dataBorderColor,1);\n\t\t}\n\n\t\tfor(i=0; i < data.length;i ++){\n\t\t\tvar value =  parseFloat(this._settings.value(data[i])||0);\n\t\t\tif(this._logScaleCalc)\n\t\t\t\tvalue = this._log10(value);\n\n\t\t\tif(!value || isNaN(value))\n\t\t\t\tcontinue;\n\n\t\t\tif(value>maxValue) value = maxValue;\n\t\t\tvalue -= minValue;\n\t\t\tvalue *= valueFactor;\n\n\t\t\t/*start point (bottom left)*/\n\t\t\tvar x0 = point0.x + barOffset + i*cellWidth+(barWidth+1)*seriesIndex;\n\t\t\tvar y0 = point1.y;\n\n\t\t\tvar color = gradient||this._settings.color.call(this, data[i], i);\n\t\t\tvar border = this._settings.border?1:0;\n\t\t\tvar label = this._settings.label(data[i]);\n\t\t\t\n\t\t\t/*takes start value into consideration */\n\t\t\tif(!yax&&!(this._settings.origin!=\"auto\"&&xax)) \n\t\t\t\tvalue += startValue/unit;\n\t\t\t/* don't draw borders and labels for not painted values (on y-Axis or lower) */\n\t\t\telse if(value == this._settings.origin || (this._settings.origin ==\"auto\" && this._settings.value(data[i]) == minValue)){\n\t\t\t\tborder = 0;\n\t\t\t\tlabel = \"\";\n\t\t\t}\n\t\t\telse if(value<0||(this._settings.yAxis&&value===0&&!(this._settings.origin!=\"auto\"&&this._settings.origin>minValue))){\n\t\t\t\tvalue = border = 0;\n\t\t\t\tlabel = \"\";\n\t\t\t}\n\n\t\t\t/*drawing bar body*/\n\t\t\tctx.globalAlpha = this._settings.alpha.call(this,data[i]);\n\t\t\tvar points = this._drawBar(ctx,point0,x0,y0,barWidth,minValue,radius,unit,value,color,gradient,inner_gradient, border);\n\t\t\tif (inner_gradient){\n\t\t\t\tthis._drawBarGradient(ctx,x0,y0,barWidth,minValue,radius,unit,value,color,inner_gradient, border);\n\t\t\t}\n\t\t\t/*drawing the gradient border of a bar*/\n\t\t\tif(border)\n\t\t\t\tthis._drawBarBorder(ctx,x0,y0,barWidth,minValue,radius,unit,value,color);\n\n\t\t\tctx.globalAlpha = 1;\n\n\t\t\t/*sets a bar label*/\n\t\t\tif(points[0]!=x0)\n\t\t\t\tthis.canvases[sIndex].renderTextAt(false, true, x0+Math.floor(barWidth/2),points[1],label);\n\t\t\telse\n\t\t\t\tthis.canvases[sIndex].renderTextAt(true, true, x0+Math.floor(barWidth/2),points[3],label);\n\t\t\t/*defines a map area for a bar*/\n\t\t\tmap.addRect(data[i].id,[x0-point0.x,points[3]-point0.y,points[2]-point0.x,points[1]-point0.y],sIndex);\n\t\t\t//this._addMapRect(map,data[i].id,[{x:x0,y:points[3]},{x:points[2],y:points[1]}],point0,sIndex);\n\t\t}\n\t},\n\t_correctBarParams:function(ctx,x,y,value,unit,barWidth,minValue){\n\t\tvar axisStart = y;\n\t\tif(this._settings.origin!=\"auto\" && (this._settings.origin>minValue)){\n\t\t\ty -= (this._settings.origin-minValue)*unit;\n\t\t\taxisStart = y;\n\t\t\tvalue = value-(this._settings.origin-minValue);\n\t\t\tif(value < 0){\n\t\t\t\tvalue *= (-1);\n\t\t\t\tctx.translate(x+barWidth,y);\n\t\t\t\tctx.rotate(Math.PI);\n\t\t\t\tx = 0;\n\t\t\t\ty = 0;\n\t\t\t}\n\t\t\ty -= 0.5;\n\t\t}\n\n\t\treturn {value:value,x0:x,y0:y,start:axisStart};\n\t},\n\t_drawBar:function(ctx,point0,x0,y0,barWidth,minValue,radius,unit,value,color,gradient,inner_gradient, border){\n\t\tctx.save();\n\t\tctx.fillStyle = color;\n\t\tvar p = this._correctBarParams(ctx,x0,y0,value,unit,barWidth,minValue);\n\t\tvar points = this._setBarPoints(ctx,p.x0,p.y0,barWidth,radius,unit,p.value,border);\n\t\tif (gradient&&!inner_gradient) ctx.lineTo(p.x0+border,point0.y); //fix gradient sphreading\n\t\tctx.fill();\n\t\tctx.restore();\n\t\tvar x1 = p.x0;\n\t\tvar x2 = (p.x0!=x0?x0+points[0]:points[0]);\n\t\tvar y1 = (p.x0!=x0?(p.start-points[1]-p.y0):p.y0);\n\t\tvar y2 = (p.x0!=x0?p.start-p.y0:points[1]);\n\n\t\treturn [x1,y1,x2,y2];\n\t},\n\t_setBorderStyles:function(ctx, rawColor){\n\t\tvar hsv,rgb;\n\t\trgb = color.toRgb(rawColor);\n\t\thsv = color.rgbToHsv(rgb[0],rgb[1],rgb[2]);\n\t\thsv[2] /= 1.4;\n\t\tvar rgbColor = \"rgb(\"+color.hsvToRgb(hsv[0],hsv[1],hsv[2])+\")\";\n\t\tctx.strokeStyle = rgbColor;\n\t\tif(ctx.globalAlpha==1)\n\t\t\tctx.globalAlpha = 0.9;\n\t},\n\t_drawBarBorder:function(ctx,x0,y0,barWidth,minValue,radius,unit,value,color){\n\t\tvar p;\n\t\tctx.save();\n\t\tp = this._correctBarParams(ctx,x0,y0,value,unit,barWidth,minValue);\n\t\tthis._setBorderStyles(ctx,color);\n\t\tthis._setBarPoints(ctx,p.x0,p.y0,barWidth,radius,unit,p.value,ctx.lineWidth/2,1);\n\t\tctx.stroke();\n\t\t/*ctx.fillStyle = color;\n\t\t this._setBarPoints(ctx,p.x0,p.y0,barWidth,radius,unit,p.value,0);\n\t\t ctx.lineTo(p.x0,0);\n\t\t ctx.fill()\n\n\n\t\t ctx.fillStyle = \"#000000\";\n\t\t ctx.globalAlpha = 0.37;\n\n\t\t this._setBarPoints(ctx,p.x0,p.y0,barWidth,radius,unit,p.value,0);\n\t\t ctx.fill()\n\t\t */\n\t\tctx.restore();\n\t},\n\t_drawBarGradient:function(ctx,x0,y0,barWidth,minValue,radius,unit,value,color,inner_gradient, border){\n\t\tctx.save();\n\t\tvar p = this._correctBarParams(ctx,x0,y0,value,unit,barWidth,minValue);\n\t\tvar gradParam = this._setBarGradient(ctx,p.x0,p.y0,p.x0+barWidth,p.y0-unit*p.value+2,inner_gradient,color,\"y\");\n\t\tctx.fillStyle = gradParam.gradient;\n\t\tthis._setBarPoints(ctx,p.x0+gradParam.offset,p.y0,barWidth-gradParam.offset*2,radius,unit,p.value,gradParam.offset+border);\n\t\tctx.fill();\n\t\tctx.restore();\n\t},\n\t/**\n\t *   sets points for bar and returns the position of the bottom right point\n\t *   @param: ctx - canvas object\n\t *   @param: x0 - the x position of start point\n\t *   @param: y0 - the y position of start point\n\t *   @param: barWidth - bar width\n\t *   @param: radius - the rounding radius of the top\n\t *   @param: unit - the value defines the correspondence between item value and bar height\n\t *   @param: value - item value\n\t *   @param: offset - the offset from expected bar edge (necessary for drawing border)\n\t */\n\t_setBarPoints:function(ctx,x0,y0,barWidth,radius,unit,value,offset,skipBottom){\n\t\t/*correction for displaing small values (when rounding radius is bigger than bar height)*/\n\t\tctx.beginPath();\n\t\t//y0 = 0.5;\n\t\tvar angle_corr = 0;\n\t\tif(radius>unit*value){\n\t\t\tvar cosA = (radius-unit*value)/radius;\n\t\t\tif(cosA<=1&&cosA>=-1)\n\t\t\t\tangle_corr = -Math.acos(cosA)+Math.PI/2;\n\t\t}\n\t\t/*start*/\n\t\tctx.moveTo(x0+offset,y0);\n\t\t/*start of left rounding*/\n\t\tvar y1 = y0 - Math.floor(unit*value) + radius + (radius?0:offset);\n\t\tif(radius<unit*value)\n\t\t\tctx.lineTo(x0+offset,y1);\n\t\t/*left rounding*/\n\t\tvar x2 = x0 + radius;\n\n\t\tif (radius&&radius>0)\n\t\t\tctx.arc(x2,y1,Math.max(radius-offset,0),-Math.PI+angle_corr,-Math.PI/2,false);\n\t\t/*start of right rounding*/\n\t\tvar x3 = x0 + barWidth - radius - offset;\n\t\tvar y3 = y1 - radius + (radius?offset:0);\n\t\tctx.lineTo(x3,y3);\n\t\t/*right rounding*/\n\t\tif (radius&&radius>0)\n\t\t\tctx.arc(x3+offset,y1,Math.max(radius-offset,0),-Math.PI/2,0-angle_corr,false);\n\t\t/*bottom right point*/\n\t\tvar x5 = x0 + barWidth-offset;\n\t\tctx.lineTo(x5,y0);\n\t\t/*line to the start point*/\n\t\tif(!skipBottom){\n\t\t\tctx.lineTo(x0+offset,y0);\n\t\t}\n\t\t//\tctx.lineTo(x0,0); //IE fix!\n\t\treturn [x5,y3];\n\t}\n};\n\nexport default BarChart;","import {assert} from \"./debug\";\n\nlet level = 0;\nexport function level_in(){\n\tlevel++;\n\tassert(level !== 100, \"Attempt to copy object with self reference\");\n}\nexport function level_out(){\n\tlevel--;\n}\n\n//coding helpers\nexport function clone(source){\n\tvar f = clone._function;\n\tf.prototype = source;\n\treturn new f();\n}\nclone._function = function(){};\n\n//copies methods and properties from source to the target\nlet extend = function(base, source, force){\n\tassert(base,\"Invalid mixing target\");\n\tassert(source,\"Invalid mixing source\");\n\n\tif (base.$protoWait){\n\t\t_power_array.insertAt.call(base.$protoWait, source,1);\n\t\treturn base;\n\t}\n\n\t//copy methods, overwrite existing ones in case of conflict\n\tfor (var method in source)\n\t\tif ((!(method in base)) || force)\n\t\t\tbase[method] = source[method];\n\n\t//in case of defaults - preffer top one\n\tif (source.defaults)\n\t\textend(base.defaults, source.defaults);\n\t\n\t//if source object has init code - call init against target\n\tif (source.$init)\t\n\t\tsource.$init.call(base);\n\n\treturn base;\t\n};\n\n//copies methods and properties from source to the target from all levels\nexport function copy(source){\n\tassert(source,\"Invalid mixing target\");\n\tif (DEBUG) level_in();\n\n\tvar esModern = !!window.Map && !!window.Set && !!window.WeakMap && !!window.WeakSet;\n\tvar target;\n\tif(arguments.length>1){\n\t\ttarget = arguments[0];\n\t\tsource = arguments[1];\n\t} else \n\t\ttarget = (isArray(source)?[]:{});\n\n\tfor (var method in source){\n\t\tvar from = source[method];\n\t\tif(from && typeof from == \"object\" && !(from instanceof RegExp)){\n\t\t\tif (isDate(from))\n\t\t\t\ttarget[method] = new Date(from);\n\t\t\t/* jshint ignore:start */\n\t\t\telse if (esModern && (from instanceof Map || from instanceof Set || from instanceof WeakMap || from instanceof WeakSet))\n\t\t\t\ttarget[method] = from;\n\t\t\t/* jshint ignore:end */\n\t\t\telse {\n\t\t\t\ttarget[method] = (isArray(from)?[]:{});\n\t\t\t\tcopy(target[method],from);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget[method] = from;\n\t\t}\n\t}\n\n\tif (DEBUG) level_out();\n\treturn target;\t\n}\n\nexport function single(source){ \n\tvar instance = null;\n\tvar t = function(){\n\t\tif (!instance)\n\t\t\tinstance = new source({});\n\t\t\t\n\t\tif (instance._reinit)\n\t\t\tinstance._reinit.apply(instance, arguments);\n\t\treturn instance;\n\t};\n\treturn t;\n}\n\n\n//creates function with specified \"this\" pointer\nexport function bind(functor, object){ \n\treturn function(){ return functor.apply(object,arguments); };  \n}\n\n\n//evaluate javascript code in the global scope\nexport function exec(code){\n\treturn window.eval(code);\n}\n\nexport function wrap(code, wrap){\n\tif (!code) return wrap;\n\treturn function(){\n\t\tvar result = code.apply(this, arguments);\n\t\twrap.apply(this,arguments);\n\t\treturn result;\n\t};\n}\n\n//check === undefined\nexport function isUndefined(a){\n\treturn typeof a == \"undefined\";\n}\n//delay call to after-render time\nexport function delay(method, obj, params, delay){\n\treturn window.setTimeout(function(){\n\t\tif(!(obj&&obj.$destructed)){\n\t\t\tvar ret = method.apply(obj,(params||[]));\n\t\t\tmethod = obj = params = null;\n\t\t\treturn ret;\n\t\t}\n\t},delay||1);\n}\n\nexport function once(method){\n\tvar flag = true;\n\treturn function(){\n\t\tif (flag){\n\t\t\tflag = false;\n\t\t\tmethod.apply(this, arguments);\n\t\t}\n\t};\n}\n\n//common helpers\n\n//generates unique ID (unique per window, nog GUID)\nlet _seed = (new Date()).valueOf();\nexport function uid(){\n\t_seed++;\n\treturn _seed;\n}\n//resolve ID as html object\nexport function toNode(node){\n\tif (typeof node == \"string\") return document.getElementById(node);\n\treturn node;\n}\n//resolve function name\nexport function toFunctor(str, scope){ \n\tif (typeof(str)==\"string\"){\n\t\tvar method = str.replace(\"()\",\"\");\n\t\tif (scope && scope[method]) return scope[method];\n\t\treturn window[method] || exec(str);\n\t}\n\treturn str;\n}\n/*checks where an object is instance of Array*/\nexport function isArray(obj) {\n\treturn Array.isArray(obj);\n}\nexport function isDate(obj){\n\treturn obj instanceof Date;\n}\n\n//adds extra methods for the array\nexport function _to_array(array){ \n\treturn extend((array||[]),_power_array, true);\n}\n//can be used by _to_array()\nexport const _power_array={\n\t//remove element at specified position\n\tremoveAt:function(pos,len){\n\t\tif (pos>=0) this.splice(pos,(len||1));\n\t},\n\t//find element in collection and remove it \n\tremove:function(value){\n\t\tthis.removeAt(this.find(value));\n\t},\t\n\t//add element to collection at specific position\n\tinsertAt:function(data,pos){\n\t\tif (!pos && pos!==0)\t//add to the end by default\n\t\t\tthis.push(data);\n\t\telse {\n\t\t\tthis.splice(pos, 0, data); \n\t\t}\n\t},\n\t//return index of element, -1 if it doesn't exists\n\tfind:function(data){ \n\t\tfor (var i=0; i<this.length; i++) \n\t\t\tif (data==this[i]) return i;\n\t\treturn -1; \n\t},\n\t//execute some method for each element of array\n\teach:function(functor,master){\n\t\tfor (var i=0; i < this.length; i++)\n\t\t\tfunctor.call((master||this),this[i]);\n\t},\n\t//create new array from source, by using results of functor \n\tmap:function(functor,master){\n\t\tfor (var i=0; i < this.length; i++)\n\t\t\tthis[i]=functor.call((master||this),this[i]);\n\t\treturn this;\n\t}, \n\tfilter:function(functor, master){\n\t\tfor (var i=0; i < this.length; i++)\n\t\t\tif (!functor.call((master||this),this[i])){\n\t\t\t\tthis.splice(i,1);\n\t\t\t\ti--;\n\t\t\t}\n\t\treturn this;\n\t}\n};\n\n//hook for documentation generator\nif (DEBUG){\n\tif (window.webix_on_core_ready){\n\t\textend = window.webix_on_core_ready({ extend }).extend;\n\t}\n}\n\nexport { extend };","import {extend} from \"./helpers\";\nimport EventSystem from \"../core/eventsystem\";\n\nvar evs = {};\nextend(evs, EventSystem, true);\n\nexport const callEvent = (a,b) => evs.callEvent(a, b);\nexport const attachEvent = (a,b,c,d) => evs.attachEvent(a, b, c, d);\nexport const detachEvent = (a) => evs.detachEvent(a);\nexport const blockEvent = () => evs.blockEvent();\nexport const unblockEvent = () => evs.unblockEvent();\nexport const mapEvent = map => evs.mapEvent(map);\nexport const hasEvent = type => evs.hasEvent(type);\n","import {errorMessage, getFileName} from \"./common\";\n\nimport promise from \"../../thirdparty/promiz\";\nimport require from \"../../load/require\";\nimport env from \"../../webix/env\";\n\nimport {assert} from \"../../webix/debug\";\nimport {toNode} from \"../../webix/helpers\";\nimport {download} from \"../../webix/html\";\nimport {$$} from \"../../ui/core\";\n\nexport const toPNG = function(id, options){\n\tconst defer = promise.defer();\n\n\treturn require(env.cdn + \"/extras/html2canvas-1.0.min.js\").then(function(){\n\t\t//backward compatibility\n\t\tif (typeof options === \"string\") options = { filename: options };\n\t\toptions = options || {};\n\n\t\toptions.export_mode = \"png\";\n\n\t\tlet view = $$(id);\n\t\tif (view && view.$exportView)\n\t\t\tview = view.$exportView(options);\n\t\tassert(view, errorMessage);\n\t\tif(!view) return defer.reject(errorMessage);\n\n\t\tconst node = view ? view.$view : toNode(id);\n\t\tconst filename = getFileName(options.filename, \"png\");\n\n\t\twindow.html2canvas(node, {background:\"#fff\", logging:false, useCORS:true}).then(function(canvas) {\n\t\t\tconst callback = function(data){\n\t\t\t\tif(options.download !== false)\n\t\t\t\t\tdownload(data, filename);\n\t\t\t\tdefer.resolve(data);\n\t\t\t};\n\t\t\tif(canvas.msToBlob)\n\t\t\t\tcallback(canvas.msToBlob());\n\t\t\telse\n\t\t\t\tcanvas.toBlob(callback, \"image/png\");\n\t\t});\n\t\treturn defer;\n\t});\n};","import {errorMessage, getExportScheme, getExportData, getFileName} from \"./common\";\n\nimport csv from \"../../webix/csv\";\nimport promise from \"../../thirdparty/promiz\";\n\nimport {download} from \"../../webix/html\";\nimport {$$} from \"../../ui/core\";\nimport {assert} from \"../../webix/debug\";\nimport {extend} from \"../../webix/helpers\";\n\nexport const toCSV = function(id, options){\n\toptions = options || {};\n\n\tlet view = $$(id);\n\tif (view && view.$exportView)\n\t\tview = view.$exportView(options);\n\tassert(view, errorMessage);\n\tif(!view) return promise.reject(errorMessage);\n\n\toptions.export_mode = \"csv\";\n\n\textend(options, {\n\t\tfilterHTML: true\n\t});\n\n\tconst scheme = getExportScheme(view, options);\n\tconst result = getExportData(view, options, scheme);\n\n\tconst data = getCsvData(result, scheme);\n\tconst filename = getFileName(options.filename, \"csv\");\n\n\tconst blob = new Blob([\"\\uFEFF\" + data], { type: \"text/csv\" });\n\tif(options.download !== false)\n\t\tdownload(blob, filename);\n\n\treturn promise.resolve(blob);\n};\n\nfunction getCsvData(data) {\n\treturn csv.stringify(data);\n}","import {callEvent} from \"./customevents\";\n\nexport function editStop(){\n\tcallEvent(\"onEditEnd\", []);\n}\n","import {create} from \"../webix/html\";\n\n/*submits values*/\nexport default function send(url, values, method, target){\n\tvar form = create(\"FORM\",{\n\t\t\"target\":(target||\"_self\"),\n\t\t\"action\":url,\n\t\t\"method\":(method||\"POST\")\n\t},\"\");\n\tfor (var k in values) {\n\t\tvar field = create(\"INPUT\",{\"type\":\"hidden\",\"name\": k,\"value\": values[k]},\"\");\n\t\tform.appendChild(field);\n\t}\n\tform.style.display = \"none\";\n\tdocument.body.appendChild(form);\n\tform.submit();\n\tdocument.body.removeChild(form);\n}"],"names":["v","d","resolve","getInfo","x","responseText","node","parentNode","removeChild","platform","indexOf","options","name","parts","get","context","call","config","input","required","value","modalbox","5numlocked","view","id","this","getCursor","search","_borders","bottom","class","timelineItemHeight","padding","move","ctx","x_offset","y_offset","attachEvent","icon","document","body","appendChild","newTableStart","reset","hash","status","_scheme_init","$init","$change","$freeze","url","i","source","length","obj","action","remove","_settings","editable","editaction","edit","_in_edit_mode","from","labels","_setOptionState","on_mouse_move","_enable_mouse_move","ui_pager","showItem","css","definePath","evItems","join","b","tindex","updateItem","_upload_area","_contentobj","firstChild","setDirty","h_count","Math","max","italicFontURL","env","cdn","italicFontName","setDate","locale","priceSettings","copy","def","_deffer","underline","prevTab","sub","form","getCleanValues","_desired_size","contrstyle","_vertical_orientation","_expand","step","style","height","yc","refresh","_data_width","_content_width","nameWidth","defaults","timepickerHeight","$active","calendar","heights","date","setMonth","_zoom_level","DateHelper","getValue","_colorBlock","backgroundColor","rgbStr","_viewobj","className","width","tagName","_event","html","customCheckbox","text","api","$skin","oldvalue","_checkPageUp","c","aria","iconTop","webix_hidden_upload","arguments","i18n","minutes","_initMap","cant","gradient","addColorStop","globalAlpha","instance","code","wrap","result","apply","evs","blockEvent","unblockEvent","map","mapEvent","type","hasEvent","defer","promise","require","then","filename","export_mode","$$","$exportView","$view","toNode","getFileName","window","html2canvas","background","logging","useCORS","canvas","callback","data","download","msToBlob","toBlob","reject","errorMessage","extend","filterHTML","scheme","getExportScheme","getExportData","csv","stringify","blob","Blob","box_params","alertPopup","promptPopup","callEvent","values","method","target","k","create","field","display","submit"],"mappings":";;;;;;;;AAgHE,OAAIA,EACIC,EAAEC;AC1EXC,QAAQ;AC8HW,OAAOC,EAAEC;AC1EpB,OACCC,GAAQA,EAAKC,YACrBD,EAAKC,WAAWC;ACzDiB,CAAC,GAAhCC,GAASC;AC0HX,OAPAC,EAAQC,KAAOC;EC3GWC;ACtB3BC,EAAUA,GAAW;ECiUqBC;ACpUpCC,EAAOC,MAAMC,UAAY,CAACD,EAAME;AA0ShC,SAASC;AC1RdC,aAAa;AAiTuBC,KAAAA;ACnU/BC,GAAMA,GAAMC,KAAKC;ACqDrBC,EADqB,UAAlB,OAAOA,EACD;AClCiBC,EAASC,OAAO,EAAE;ACyBnBC,QAAO;AC7ClCC,mBAAmB;ACmCnBC,QAAQ;ACgF4B;AAmTpCC,KAAM;AChGqB,aAAvB,OAAOC,EAAIC,UAAkD,aAAvB,OAAOD,EAAIE;AC3RpDX,KAAKY;AA4UoBC,KAAK;AC3W9BC,SAASC,KAAKC;ACkEsBC;ACpCpCjB,KAAKkB;AAqXgC,SAAfC,EAAKC,QAAoC,WAAfD,EAAKC;ACxIrDpB,KAAKqB,GAAe7B,EAAO8B,OAAO9B,EAAO+B;AA+VdvB,KAAKwB;AC3kB5BC,GAAqB,UAAd,OAAOA;CCqCe;ACqI5B,IAAIC,EAAE,EAAGA,EAAEC,EAAOC,OAAQF,CAAC;ECzEV,OAAdG,EAAIC,OACX9B,KAAK+B;ACwGc;ACtKf/B,KAAKgC,EAAUC,UAAyC,SAA7BjC,KAAKgC,EAAUE,YAC7ClC,KAAKmC;AAsTmB,GAAtBnC,KAAKoC,IAAsBC;AC9R1B,IAAIX,EAAE,EAAGA,EAAEY,EAAOV,OAAQF,CAAC;ACqDjCa,GAAiB;OCpFR;AC9DJvC,KAAKwC,eACRxC,KAAKyC;ACpBD,CAACC;AC4FPC,SAAS;ACwEwB;AC5D1B,4BAA+BC,EAAI,2CAD/B5C,KAAK6C;ACtDQC,EAAQC;ECuCfC;AC7B+C;AC0DSC,EAAO;ACsB/EjD,KAAKkD;AC2I2D;ACvPhElD,KAAKmD,GAAenD,KAAKoD,GAAYC,WAAWrC;AC0BjDsC,SAAS;ACpCW;AC+HnBC,EAAUC,KAAKC;AClDDvE,EAAQwE,eAAeC,EAAIC,IAAM,WAAW1E,EAAQ2E,eAAe;EAoHlEL,KAAKC;;AC1HP,MAAO;EA0KLK;AC9OfC,EAAOC,cAAiBC;ACiBpBC,EAAMlE,KAAKmE;;ACtBa;ACqD5BC,UAAW;;;ACRXC,QAAQ;AC7CkC;ACkJnCC,EAAInF,MACP,OAAOoF,EAAKC;EA+W0ExE,KAAKyE;EChe9EjB,KAAKC;AC8IlBiB,EAAa1E,KAAK2E,GAAsB,YAAY;MCnEtD3E,KAAK4E;AC/EgC;ECuB4B;ACmMbC;AC5DrD7E,KAAKoD,GAAY0B,MAAMC,OAASC,EAAG;AC5GrCC,QAAQ;;AC+ENjF,KAAKkF,GAAclF,KAAKmF,GAAiBnF,KAAKgC,EAAUoD;ACGvDpF,KAAKqF,SAASC,iBAAmBC,EAAQC,SAASF;EA+MuB,kBAAkBG;AA0OvEC,EAAKC;AAqOiB,GAAlB3F,KAAK4F,GAAe,QAAQ;AAuNzCC,EAAW5B;ACnzBpBtE,EAAQK,KAAK8F;AC9IjB9F,KAAK+F,GAAYjB,MAAMkB,gBAAkBC;AC5EzCjG,KAAKkG,GAASC,WAAa;AAsM3B,IAMCC;ACpNqB,SAAhBvH,EAAKwH,SAAsC,UAAhBxH,EAAKwH,SACnCC;AAmOFC,GAAQ;ACnKoD;ACtD7D,OAFC5G,EADa,CAAA,IAAVA,GAAkB4F,EAAQiB,eACrB,2LAEF7G;ACiFP8G,EAAKC,IAAIC,MAAMpH;AC3Ef,OAAOqH,GAAYjH;ACxBSH;ACG7BqH,GAAc;ECoC2C,kBAAkBtG,EAAQ,qDAAqDuG,EAAEjG,KAAK,KAAKkG,EAAK;AC6EvJ/G,KAAKkG,GAASC,WAAa;AC1F5B,MAAO;AAmOPa,QAAQ;AClP2B;ACwBnCC,oBAAsB;ACaQC;ACuIFC,EAAK3B,SAAS4B;ACwBoB;CA6S5D,MAAO;AC9fV9F,MAAM;ACkCN+F,GAAS;;;;;ACRgE,EAAIrH,KAAKgC,EAAUsF;AAiT3FC,EAASC;ACjKR/G,EAAIgH,YAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvGeP,SAAjC,EACMQ,EAGR,2BAcM,SAAcC,EAAMC,GAC1B,OAAKD,EACE,WACN,IAAIE,EAASF,EAAKG,MAAM9H,KAAMkH,SAAjB,EAEb,OADAU,EAAKE,MAAM9H,KAAKkH,SAAhB,EACOW,GAJUD,CAMlB,qNCvGyB,WAAA,OAAMG,GAAIC,YAAV,iBACE,WAAA,OAAMD,GAAIE,cAAV,aACJ,SAAAC,GAAG,OAAIH,GAAII,SAASD,CAAb,CAAJ,aACH,SAAAE,GAAI,OAAIL,GAAIM,SAASD,CAAb,CAAJ,yBCDP,SAASrI,EAAIb,GACjC,IAAMoJ,EAAQC,EAAQD,QAEtB,OAAOE,GAAQ7E,EAAIC,IAAM,gCAAX,EAA6C6E,KAAK,YAG/DvJ,GADiCA,EAAV,UAAnB,OAAOA,EAAgC,CAAEwJ,SAAUxJ,GAC7CA,IAAW,IAEbyJ,YAAc,MAEtB,IAOMD,EAPF5I,EAAO8I,EAAG7I,CAAD,EAIb,OAFCD,EADGA,GAAQA,EAAK+I,YACT/I,EAAK+I,YAAY3J,CAAjB,EAEJY,IAEEjB,EAAOiB,EAAOA,EAAKgJ,MAAQC,EAAOhJ,CAAD,EACjC2I,EAAWM,GAAY9J,EAAQwJ,SAAU,KAAnB,EAE5BO,OAAOC,YAAYrK,EAAM,CAACsK,WAAW,OAAQC,QAAQ,CAAA,EAAOC,QAAQ,CAAA,EAApE,EAA2EZ,KAAK,SAASa,GACxF,IAAMC,EAAW,SAASC,GACD,CAAA,IAArBtK,EAAQuK,UACVA,GAASD,EAAMd,CAAP,EACTJ,EAAM7J,QAAQ+K,CAAd,GAEEF,EAAOI,SACTH,EAASD,EAAOI,UAAR,EAERJ,EAAOK,OAAOJ,EAAU,WAAxB,EATF,EAWOjB,GAhBUA,EAAMsB,OAAOC,EAAb,EAXX,CA6BP,UCjCoB,SAAS9J,EAAIb,GACjCA,EAAUA,GAAW,GAEjBY,EAAO8I,EAAG7I,CAAD,EAIb,GAAG,EAFFD,EADGA,GAAQA,EAAK+I,YACT/I,EAAK+I,YAAY3J,CAAjB,EAEJY,GAAM,OAAOyI,EAAQqB,OAAOC,EAAf,EAEjB3K,EAAQyJ,YAAc,MAEtBmB,SAAO5K,EAAS,CACf6K,WAAY,CAAA,EADP,EAIN,IAAMC,EAASC,GAAgBnK,EAAMZ,CAAP,EACxB2I,EAASqC,GAAcpK,EAAMZ,EAAS8K,CAAhB,EAEtBR,EAWCW,GAAIC,UAXavC,CAWjB,EAVDa,EAAWM,GAAY9J,EAAQwJ,SAAU,KAAnB,EAEtB2B,EAAO,IAAIC,KAAK,CAAC,SAAWd,GAAO,CAAEpB,KAAM,WAApC,EAIb,MAHwB,CAAA,IAArBlJ,EAAQuK,UACVA,GAASY,EAAM3B,CAAP,EAEFH,EAAQ9J,QAAQ4L,CAAhB,CACP,kCnF8QM,WACN,IAAI5D,EAAO8D,GAAWzC,MAAM9H,KAAMkH,SAAvB,EAEX,OADAT,EAAK2B,KAAO3B,EAAK2B,MAAQ,QAClBoC,GAAW/D,CAAD,CACjB,sCAaM,WACN,IAAIA,EAAO8D,GAAWzC,MAAM9H,KAAMkH,SAAvB,EAGX,OAFAT,EAAK2B,KAAO3B,EAAK2B,MAAQ,SACzB3B,EAAKhH,MAAQgH,EAAKhH,OAAS,GACpBgL,GAAYhE,CAAD,CAClB,qCoFrUAiE,EAAU,YAAa,EAAd,CACT,kGCDc,SAAcjJ,EAAKkJ,EAAQC,EAAQC,GACjD,IAKSC,EALLvG,EAAOwG,EAAO,OAAO,CACxBF,OAAUA,GAAQ,QAClB/I,OAASL,EACTmJ,OAAUA,GAAQ,QACjB,EAJe,EAKjB,IAASE,KAAKH,EAAQ,CACrB,IAAIK,EAAQD,EAAO,QAAQ,CAAC3C,KAAO,SAASjJ,KAAQ2L,EAAEnL,MAASgL,EAAOG,IAAI,EAAxD,EAClBvG,EAAKvD,YAAYgK,CAAjB,EAEDzG,EAAKO,MAAMmG,QAAU,OACrBnK,SAASC,KAAKC,YAAYuD,CAA1B,EACAA,EAAK2G,SACLpK,SAASC,KAAKhC,YAAYwF,CAA1B,CACA"}